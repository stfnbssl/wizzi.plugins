/*
    artifact generator: C:\My\wizzi\stfnbssl\wizzi.plugins\packages\wizzi.plugin.wzschema\node_modules\wizzi-js\lib\artifacts\js\module\gen\main.js
    package: wizzi-js@0.7.13
    primary source IttfDocument: C:\My\wizzi\stfnbssl\wizzi.plugins\packages\wizzi.plugin.wzschema\lib\artifacts\wfschema\model\gen\ittf\wfschema-model.js.ittf
*/
'use strict';
// generated by v6-wizzi-js.artifacts.js.module.main
function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var util = require('util');
var path = require('path');
var _ = require('lodash');
var chalk = require('chalk');
var wzutils = require('wizzi-utils');
var verify = wzutils.verify;


var _md = module.exports = {};

var wzSourceLineInfo = (function () {
    function wzSourceLineInfo(row, col, sourceKey) {
        _classCallCheck(this, wzSourceLineInfo);
        this.row = row;
        this.col = col;
        this.sourceKey = sourceKey;
    }
    wzSourceLineInfo.prototype.toString = function(instance) {
        if (instance) {
            return 'row: ' + this.row + ', col: ' + this.col + ', file: ' + instance.wzSourceFilepath(this.sourceKey);
        }
        else {
            return 'row: ' + this.row + ', col: ' + this.col + ', sourceKey: ' + this.sourceKey;
        }
    }
    return wzSourceLineInfo;
})();

_md.wzSourceLineInfo = wzSourceLineInfo;
var philosBase = (function () {
    function philosBase(name, sourceLineInfo) {
        _classCallCheck(this, philosBase);
        this.wzName = name || '';
        this.wzParent = null;
        this.wzSourceLineInfo = sourceLineInfo;
        this.wzChildren = [];
    }
    philosBase.prototype.wzRoot = function() {
        return this.wzParent == null ? this : this.wzParent.wzRoot();
    }
    philosBase.prototype.wzSourceFilepath = function(sourceKey) {
        var sk = sourceKey || this.wzSourceLineInfo.sourceKey;
        return this.wzRoot().loadHistory.getIttfDocumentUri(sk);
    }
    philosBase.prototype.wzSourceErrorLines = function(node, message) {
        return this.wzRoot().loadHistory.getIttfDocumentErrorLines(node.u, {
                row: node.r, 
                col: node.c, 
                description: message
             }, true);
    }
    philosBase.prototype.wzVerify = function() {
    }
    philosBase.prototype.wzInitialize = function() {
    }
    philosBase.prototype.wzInitializeAsync = function(ctx, callback) {
        callback(null);
    }
    philosBase.prototype.wzAddChild = function(node) {
        node.wzParent = this;
        this.wzChildren.push(node);
    }
    philosBase.prototype.wzAddChildToColl = function(node, coll) {
        node.wzParent = this;
        node.wzMoved = true;
        coll.push(node);
    }
    philosBase.prototype.wzMoveChildToColl = function(node, coll, fromColl) {
        var index = fromColl.indexOf(node);
        if (index < 0) {
            this.error('wzMoveChildToColl error. The from collection does not contain the node.', node)
        }
        fromColl.splice(index, 1);
        this.wzAddChildToColl(node, coll);
    }
    philosBase.prototype.wzLoadToChildColl = function(child, type, coll) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        if (child.wzMTreeData) {
            item.wzMTreeData = child.wzMTreeData;
        }
        item.wzParent = this;
        coll.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    philosBase.prototype.wzCreateChildColl = function(tag, name, type, coll) {
        var item = new type(name, this.wzSourceLineInfo);
        item.wzTag = tag;
        item.wzParent = this;
        item.wzCreated = true;
        coll.push(item);
        return item;
    }
    philosBase.prototype.wzLoadToChildren = function(child, type) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        if (child.wzMTreeData) {
            item.wzMTreeData = child.wzMTreeData;
        }
        this.wzChildren.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    philosBase.prototype.wzLoadOneToOne = function(child, type, fieldName) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        if (child.wzMTreeData) {
            item.wzMTreeData = child.wzMTreeData;
        }
        item.wzParent = this;
        this[fieldName] = item;
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    philosBase.prototype.wzRemove = function(fromColl) {
        var index = fromColl.indexOf(this);
        if (index < 0) {
            this.error('wzRemove error. The from collection does not contain the node.', this)
        }
        fromColl.splice(index, 1);
    }
    philosBase.prototype.error = function(message, node) {
        throw new _md.philosModelException(message, node, this);
    }
    philosBase.prototype.toJsonProperties = function(result) {
        result.wzElement = this.wzElement;
        result.wzTag = this.wzTag;
        result.wzName = this.wzName;
    }
    philosBase.prototype.toJsonChildren = function(result) {
        if (this.wzChildren.length > 0) {
            var children = [];
            this.wzChildren.forEach(item => 
            
                children.push(item.toJson())
            )
            result.wzChildren = children;
        }
    }
    return philosBase;
})();

_md.philosBase = philosBase;

// element item
var item = (function (philosBase) {
    _inherits(item, philosBase);
    function item(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(item.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, item);
        this.wzElement = "item";
        // relation item
        this.items = [];
    }
    item.prototype.addItem = function(name, sourceLineInfo) {
        var retval = new _md.item(name, sourceLineInfo);
        retval.wzParent = this;
        this.items.push(retval);
        return retval;
    }
    item.prototype.getItem = function(name) {
        var found = null;
        this.items.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        })
        return found;
    }
    item.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    item.prototype.toJsonProperties = function(result) {
        _md.philosBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.value)) {
            result["value"] = this.value;
        }
    }
    item.prototype.toJsonChildren = function(result) {
        _md.philosBase.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        this.items.forEach(item => 
        
            items.push(item.toJson())
        )
        result['items'] = items;
    }
    item.prototype.loadChild = function(child) {
        var name = child.n.toLowerCase();
        if (name === '+') {
            return this.wzLoadToChildColl(child, _md.text, this.items);
        }
        if (name === 'a') {
            return this.wzLoadToChildColl(child, _md.a, this.items);
        }
        if (name === 'de') {
            return this.wzLoadToChildColl(child, _md.de, this.items);
        }
        if (name === 'en') {
            return this.wzLoadToChildColl(child, _md.en, this.items);
        }
        if (name === 'fr') {
            return this.wzLoadToChildColl(child, _md.fr, this.items);
        }
        if (name === 'it') {
            return this.wzLoadToChildColl(child, _md.it, this.items);
        }
        else if (name === 'in') {
            return this.wzLoadToChildColl(child, _md.xin, this.items);
        }
        if (name === 'li') {
            return this.wzLoadToChildColl(child, _md.li, this.items);
        }
        if (name === 'sp') {
            return this.wzLoadToChildColl(child, _md.sp, this.items);
        }
        if (name === 'to') {
            return this.wzLoadToChildColl(child, _md.to, this.items);
        }
        if (name === 'bax') {
            return this.wzLoadToChildColl(child, _md.bax, this.items);
        }
        else if (name === 'buy') {
            return this.wzLoadToChildColl(child, _md.buy, this.items);
        }
        if (name === 'img') {
            return this.wzLoadToChildColl(child, _md.img, this.items);
        }
        if (name === 'ref') {
            return this.wzLoadToChildColl(child, _md.ref, this.items);
        }
        if (name === 'url') {
            return this.wzLoadToChildColl(child, _md.url, this.items);
        }
        if (name === 'born') {
            return this.wzLoadToChildColl(child, _md.born, this.items);
        }
        else if (name === 'book') {
            return this.wzLoadToChildColl(child, _md.book, this.items);
        }
        if (name === 'date') {
            return this.wzLoadToChildColl(child, _md.date, this.items);
        }
        else if (name === 'died') {
            return this.wzLoadToChildColl(child, _md.died, this.items);
        }
        if (name === 'eloc') {
            return this.wzLoadToChildColl(child, _md.eloc, this.items);
        }
        if (name === 'from') {
            return this.wzLoadToChildColl(child, _md.from, this.items);
        }
        if (name === 'item') {
            return this.wzLoadToChildColl(child, _md.item, this.items);
        }
        else if (name === 'idea') {
            return this.wzLoadToChildColl(child, _md.idea, this.items);
        }
        if (name === 'page') {
            return this.wzLoadToChildColl(child, _md.page, this.items);
        }
        if (name === 'wiki') {
            return this.wzLoadToChildColl(child, _md.wiki, this.items);
        }
        if (name === 'year') {
            return this.wzLoadToChildColl(child, _md.year, this.items);
        }
        if (name === 'alias') {
            return this.wzLoadToChildColl(child, _md.alias, this.items);
        }
        if (name === 'child') {
            return this.wzLoadToChildColl(child, _md.child, this.items);
        }
        if (name === 'e-loc') {
            return this.wzLoadToChildColl(child, _md.eloc, this.items);
        }
        else if (name === 'epage') {
            return this.wzLoadToChildColl(child, _md.epage, this.items);
        }
        else if (name === 'ebook') {
            return this.wzLoadToChildColl(child, _md.ebook, this.items);
        }
        else if (name === 'etimo') {
            return this.wzLoadToChildColl(child, _md.etimo, this.items);
        }
        if (name === 'field') {
            return this.wzLoadToChildColl(child, _md.field, this.items);
        }
        if (name === 'index') {
            return this.wzLoadToChildColl(child, _md.index, this.items);
        }
        if (name === 'lemma') {
            return this.wzLoadToChildColl(child, _md.lemma, this.items);
        }
        if (name === 'place') {
            return this.wzLoadToChildColl(child, _md.place, this.items);
        }
        else if (name === 'place') {
            return this.wzLoadToChildColl(child, _md.place, this.items);
        }
        else if (name === 'phase') {
            return this.wzLoadToChildColl(child, _md.phase, this.items);
        }
        if (name === 'quote') {
            return this.wzLoadToChildColl(child, _md.quote, this.items);
        }
        if (name === 'rbook') {
            return this.wzLoadToChildColl(child, _md.relatedbook, this.items);
        }
        if (name === 'title') {
            return this.wzLoadToChildColl(child, _md.title, this.items);
        }
        else if (name === 'title') {
            return this.wzLoadToChildColl(child, _md.title, this.items);
        }
        if (name === 'value') {
            this.value = child.v; return true;
        }
        if (name === 'author') {
            return this.wzLoadToChildColl(child, _md.author, this.items);
        }
        else if (name === 'avatar') {
            return this.wzLoadToChildColl(child, _md.avatar, this.items);
        }
        if (name === 'branch') {
            return this.wzLoadToChildColl(child, _md.branch, this.items);
        }
        else if (name === 'biblio') {
            return this.wzLoadToChildColl(child, _md.biblio, this.items);
        }
        if (name === 'e-page') {
            return this.wzLoadToChildColl(child, _md.epage, this.items);
        }
        else if (name === 'editor') {
            return this.wzLoadToChildColl(child, _md.editor, this.items);
        }
        else if (name === 'e-book') {
            return this.wzLoadToChildColl(child, _md.ebook, this.items);
        }
        if (name === 'letter') {
            return this.wzLoadToChildColl(child, _md.letter, this.items);
        }
        if (name === 'method') {
            return this.wzLoadToChildColl(child, _md.method, this.items);
        }
        if (name === 'philos') {
            return this.wzLoadToChildColl(child, _md.philos, this.items);
        }
        else if (name === 'period') {
            return this.wzLoadToChildColl(child, _md.period, this.items);
        }
        else if (name === 'parent') {
            return this.wzLoadToChildColl(child, _md.parent, this.items);
        }
        else if (name === 'parent') {
            return this.wzLoadToChildColl(child, _md.parent, this.items);
        }
        else if (name === 'phrase') {
            return this.wzLoadToChildColl(child, _md.phrase, this.items);
        }
        if (name === 'r-book') {
            return this.wzLoadToChildColl(child, _md.relatedbook, this.items);
        }
        else if (name === 'review') {
            return this.wzLoadToChildColl(child, _md.review, this.items);
        }
        if (name === 'source') {
            return this.wzLoadToChildColl(child, _md.source, this.items);
        }
        else if (name === 'school') {
            return this.wzLoadToChildColl(child, _md.school, this.items);
        }
        if (name === 'theory') {
            return this.wzLoadToChildColl(child, _md.theory, this.items);
        }
        if (name === 'article') {
            return this.wzLoadToChildColl(child, _md.article, this.items);
        }
        if (name === 'concept') {
            return this.wzLoadToChildColl(child, _md.concept, this.items);
        }
        else if (name === 'curator') {
            return this.wzLoadToChildColl(child, _md.curator, this.items);
        }
        else if (name === 'comment') {
            return this.wzLoadToChildColl(child, _md.comment, this.items);
        }
        if (name === 'datepub') {
            return this.wzLoadToChildColl(child, _md.datepub, this.items);
        }
        if (name === 'extends') {
            return this.wzLoadToChildColl(child, _md.xextends, this.items);
        }
        else if (name === 'exports') {
            return this.wzLoadToChildColl(child, _md.exports, this.items);
        }
        else if (name === 'example') {
            return this.wzLoadToChildColl(child, _md.example, this.items);
        }
        else if (name === 'ereader') {
            return this.wzLoadToChildColl(child, _md.ereader, this.items);
        }
        else if (name === 'edition') {
            return this.wzLoadToChildColl(child, _md.edition, this.items);
        }
        if (name === 'founder') {
            return this.wzLoadToChildColl(child, _md.founder, this.items);
        }
        if (name === 'synonim') {
            return this.wzLoadToChildColl(child, _md.synonim, this.items);
        }
        if (name === 'written') {
            return this.wzLoadToChildColl(child, _md.written, this.items);
        }
        if (name === 'approach') {
            return this.wzLoadToChildColl(child, _md.approach, this.items);
        }
        else if (name === 'abstract') {
            return this.wzLoadToChildColl(child, _md.textabstract, this.items);
        }
        if (name === 'coauthor') {
            return this.wzLoadToChildColl(child, _md.coauthor, this.items);
        }
        else if (name === 'coeditor') {
            return this.wzLoadToChildColl(child, _md.coeditor, this.items);
        }
        if (name === 'date-pub') {
            return this.wzLoadToChildColl(child, _md.datepub, this.items);
        }
        if (name === 'e-reader') {
            return this.wzLoadToChildColl(child, _md.ereader, this.items);
        }
        if (name === 'fullname') {
            return this.wzLoadToChildColl(child, _md.fullname, this.items);
        }
        if (name === 'glossary') {
            return this.wzLoadToChildColl(child, _md.glossary, this.items);
        }
        if (name === 'prefator') {
            return this.wzLoadToChildColl(child, _md.prefator, this.items);
        }
        if (name === 'rconcept') {
            return this.wzLoadToChildColl(child, _md.relatedconcept, this.items);
        }
        else if (name === 'rarticle') {
            return this.wzLoadToChildColl(child, _md.relatedarticle, this.items);
        }
        if (name === 'subtitle') {
            return this.wzLoadToChildColl(child, _md.subTitle, this.items);
        }
        if (name === 'backcover') {
            return this.wzLoadToChildColl(child, _md.backcover, this.items);
        }
        if (name === 'co-author') {
            return this.wzLoadToChildColl(child, _md.coauthor, this.items);
        }
        else if (name === 'criticism') {
            return this.wzLoadToChildColl(child, _md.criticism, this.items);
        }
        else if (name === 'co-editor') {
            return this.wzLoadToChildColl(child, _md.coeditor, this.items);
        }
        if (name === 'namespace') {
            return this.wzLoadToChildColl(child, _md.namespace, this.items);
        }
        if (name === 'opinionof') {
            return this.wzLoadToChildColl(child, _md.opinionof, this.items);
        }
        if (name === 'principle') {
            return this.wzLoadToChildColl(child, _md.principle, this.items);
        }
        if (name === 'r-concept') {
            return this.wzLoadToChildColl(child, _md.relatedconcept, this.items);
        }
        else if (name === 'r-article') {
            return this.wzLoadToChildColl(child, _md.relatedarticle, this.items);
        }
        if (name === 'sub-title') {
            return this.wzLoadToChildColl(child, _md.subTitle, this.items);
        }
        if (name === 'back-cover') {
            return this.wzLoadToChildColl(child, _md.backcover, this.items);
        }
        if (name === 'influenced') {
            return this.wzLoadToChildColl(child, _md.influenced, this.items);
        }
        if (name === 'opinion-of') {
            return this.wzLoadToChildColl(child, _md.opinionof, this.items);
        }
        if (name === 'seeconcept') {
            return this.wzLoadToChildColl(child, _md.seeconcept, this.items);
        }
        if (name === 'translator') {
            return this.wzLoadToChildColl(child, _md.translator, this.items);
        }
        else if (name === 'translator') {
            return this.wzLoadToChildColl(child, _md.translator, this.items);
        }
        if (name === 'application') {
            return this.wzLoadToChildColl(child, _md.application, this.items);
        }
        if (name === 'description') {
            return this.wzLoadToChildColl(child, _md.description, this.items);
        }
        if (name === 'see-concept') {
            return this.wzLoadToChildColl(child, _md.seeconcept, this.items);
        }
        if (name === 'translation') {
            return this.wzLoadToChildColl(child, _md.translation, this.items);
        }
        if (name === 'authorsgroup') {
            return this.wzLoadToChildColl(child, _md.authorsgroup, this.items);
        }
        else if (name === 'attributedby') {
            return this.wzLoadToChildColl(child, _md.attributedby, this.items);
        }
        if (name === 'forerunnerof') {
            return this.wzLoadToChildColl(child, _md.forerunnerof, this.items);
        }
        if (name === 'influencedby') {
            return this.wzLoadToChildColl(child, _md.influencedby, this.items);
        }
        if (name === 'reviewedwork') {
            return this.wzLoadToChildColl(child, _md.reviewedwork, this.items);
        }
        if (name === 'authors-group') {
            return this.wzLoadToChildColl(child, _md.authorsgroup, this.items);
        }
        else if (name === 'attributed-by') {
            return this.wzLoadToChildColl(child, _md.attributedby, this.items);
        }
        if (name === 'forerunner-of') {
            return this.wzLoadToChildColl(child, _md.forerunnerof, this.items);
        }
        if (name === 'influenced-by') {
            return this.wzLoadToChildColl(child, _md.influencedby, this.items);
        }
        if (name === 'reviewed-work') {
            return this.wzLoadToChildColl(child, _md.reviewedwork, this.items);
        }
        if (name === 'againstconcept') {
            return this.wzLoadToChildColl(child, _md.againstconcept, this.items);
        }
        if (name === 'contributionto') {
            return this.wzLoadToChildColl(child, _md.contributionto, this.items);
        }
        if (name === 'againstapproach') {
            return this.wzLoadToChildColl(child, _md.againstapproach, this.items);
        }
        else if (name === 'against-concept') {
            return this.wzLoadToChildColl(child, _md.againstconcept, this.items);
        }
        if (name === 'contribution-to') {
            return this.wzLoadToChildColl(child, _md.contributionto, this.items);
        }
        if (name === 'against-approach') {
            return this.wzLoadToChildColl(child, _md.againstapproach, this.items);
        }
        return false;
    }
    item.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.philosModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    item.prototype.wzVerify = function(ctx) {
        this.items.forEach(item => 
        
            item.wzVerify(ctx)
        )
        _md.philosBase.prototype.wzVerify.call(this, ctx);
    }
    item.prototype.wzInitialize = function(ctx) {
        this.items.forEach(item => 
        
            item.wzInitialize(ctx)
        )
        _md.philosBase.prototype.wzInitialize.call(this, ctx);
    }
    return item;
})(philosBase);

_md.item = item;
// element philos
var philos = (function (item) {
    _inherits(philos, item);
    function philos(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(philos.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, philos);
        this.wzElement = "philos";
        // relation item
        this.items = [];
    }
    philos.prototype.addItem = function(name, sourceLineInfo) {
        var retval = new _md.item(name, sourceLineInfo);
        retval.wzParent = this;
        this.items.push(retval);
        return retval;
    }
    philos.prototype.getItem = function(name) {
        var found = null;
        this.items.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        })
        return found;
    }
    philos.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    philos.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    philos.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        this.items.forEach(item => 
        
            items.push(item.toJson())
        )
        result['items'] = items;
    }
    philos.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === '+') {
            return this.wzLoadToChildColl(child, _md.text, this.items);
        }
        if (name === 'a') {
            return this.wzLoadToChildColl(child, _md.a, this.items);
        }
        if (name === 'de') {
            return this.wzLoadToChildColl(child, _md.de, this.items);
        }
        if (name === 'en') {
            return this.wzLoadToChildColl(child, _md.en, this.items);
        }
        if (name === 'fr') {
            return this.wzLoadToChildColl(child, _md.fr, this.items);
        }
        if (name === 'it') {
            return this.wzLoadToChildColl(child, _md.it, this.items);
        }
        else if (name === 'in') {
            return this.wzLoadToChildColl(child, _md.xin, this.items);
        }
        if (name === 'li') {
            return this.wzLoadToChildColl(child, _md.li, this.items);
        }
        if (name === 'sp') {
            return this.wzLoadToChildColl(child, _md.sp, this.items);
        }
        if (name === 'to') {
            return this.wzLoadToChildColl(child, _md.to, this.items);
        }
        if (name === 'bax') {
            return this.wzLoadToChildColl(child, _md.bax, this.items);
        }
        else if (name === 'buy') {
            return this.wzLoadToChildColl(child, _md.buy, this.items);
        }
        if (name === 'img') {
            return this.wzLoadToChildColl(child, _md.img, this.items);
        }
        if (name === 'ref') {
            return this.wzLoadToChildColl(child, _md.ref, this.items);
        }
        if (name === 'url') {
            return this.wzLoadToChildColl(child, _md.url, this.items);
        }
        if (name === 'born') {
            return this.wzLoadToChildColl(child, _md.born, this.items);
        }
        else if (name === 'book') {
            return this.wzLoadToChildColl(child, _md.book, this.items);
        }
        if (name === 'date') {
            return this.wzLoadToChildColl(child, _md.date, this.items);
        }
        else if (name === 'died') {
            return this.wzLoadToChildColl(child, _md.died, this.items);
        }
        if (name === 'eloc') {
            return this.wzLoadToChildColl(child, _md.eloc, this.items);
        }
        if (name === 'from') {
            return this.wzLoadToChildColl(child, _md.from, this.items);
        }
        if (name === 'item') {
            return this.wzLoadToChildColl(child, _md.item, this.items);
        }
        else if (name === 'idea') {
            return this.wzLoadToChildColl(child, _md.idea, this.items);
        }
        if (name === 'page') {
            return this.wzLoadToChildColl(child, _md.page, this.items);
        }
        if (name === 'wiki') {
            return this.wzLoadToChildColl(child, _md.wiki, this.items);
        }
        if (name === 'year') {
            return this.wzLoadToChildColl(child, _md.year, this.items);
        }
        if (name === 'alias') {
            return this.wzLoadToChildColl(child, _md.alias, this.items);
        }
        if (name === 'child') {
            return this.wzLoadToChildColl(child, _md.child, this.items);
        }
        if (name === 'e-loc') {
            return this.wzLoadToChildColl(child, _md.eloc, this.items);
        }
        else if (name === 'epage') {
            return this.wzLoadToChildColl(child, _md.epage, this.items);
        }
        else if (name === 'ebook') {
            return this.wzLoadToChildColl(child, _md.ebook, this.items);
        }
        else if (name === 'etimo') {
            return this.wzLoadToChildColl(child, _md.etimo, this.items);
        }
        if (name === 'field') {
            return this.wzLoadToChildColl(child, _md.field, this.items);
        }
        if (name === 'index') {
            return this.wzLoadToChildColl(child, _md.index, this.items);
        }
        if (name === 'lemma') {
            return this.wzLoadToChildColl(child, _md.lemma, this.items);
        }
        if (name === 'place') {
            return this.wzLoadToChildColl(child, _md.place, this.items);
        }
        else if (name === 'place') {
            return this.wzLoadToChildColl(child, _md.place, this.items);
        }
        else if (name === 'phase') {
            return this.wzLoadToChildColl(child, _md.phase, this.items);
        }
        if (name === 'quote') {
            return this.wzLoadToChildColl(child, _md.quote, this.items);
        }
        if (name === 'rbook') {
            return this.wzLoadToChildColl(child, _md.relatedbook, this.items);
        }
        if (name === 'title') {
            return this.wzLoadToChildColl(child, _md.title, this.items);
        }
        else if (name === 'title') {
            return this.wzLoadToChildColl(child, _md.title, this.items);
        }
        if (name === 'author') {
            return this.wzLoadToChildColl(child, _md.author, this.items);
        }
        else if (name === 'avatar') {
            return this.wzLoadToChildColl(child, _md.avatar, this.items);
        }
        if (name === 'branch') {
            return this.wzLoadToChildColl(child, _md.branch, this.items);
        }
        else if (name === 'biblio') {
            return this.wzLoadToChildColl(child, _md.biblio, this.items);
        }
        if (name === 'e-page') {
            return this.wzLoadToChildColl(child, _md.epage, this.items);
        }
        else if (name === 'editor') {
            return this.wzLoadToChildColl(child, _md.editor, this.items);
        }
        else if (name === 'e-book') {
            return this.wzLoadToChildColl(child, _md.ebook, this.items);
        }
        if (name === 'letter') {
            return this.wzLoadToChildColl(child, _md.letter, this.items);
        }
        if (name === 'method') {
            return this.wzLoadToChildColl(child, _md.method, this.items);
        }
        if (name === 'philos') {
            return this.wzLoadToChildColl(child, _md.philos, this.items);
        }
        else if (name === 'period') {
            return this.wzLoadToChildColl(child, _md.period, this.items);
        }
        else if (name === 'parent') {
            return this.wzLoadToChildColl(child, _md.parent, this.items);
        }
        else if (name === 'parent') {
            return this.wzLoadToChildColl(child, _md.parent, this.items);
        }
        else if (name === 'phrase') {
            return this.wzLoadToChildColl(child, _md.phrase, this.items);
        }
        if (name === 'r-book') {
            return this.wzLoadToChildColl(child, _md.relatedbook, this.items);
        }
        else if (name === 'review') {
            return this.wzLoadToChildColl(child, _md.review, this.items);
        }
        if (name === 'source') {
            return this.wzLoadToChildColl(child, _md.source, this.items);
        }
        else if (name === 'school') {
            return this.wzLoadToChildColl(child, _md.school, this.items);
        }
        if (name === 'theory') {
            return this.wzLoadToChildColl(child, _md.theory, this.items);
        }
        if (name === 'article') {
            return this.wzLoadToChildColl(child, _md.article, this.items);
        }
        if (name === 'concept') {
            return this.wzLoadToChildColl(child, _md.concept, this.items);
        }
        else if (name === 'curator') {
            return this.wzLoadToChildColl(child, _md.curator, this.items);
        }
        else if (name === 'comment') {
            return this.wzLoadToChildColl(child, _md.comment, this.items);
        }
        if (name === 'datepub') {
            return this.wzLoadToChildColl(child, _md.datepub, this.items);
        }
        if (name === 'extends') {
            return this.wzLoadToChildColl(child, _md.xextends, this.items);
        }
        else if (name === 'exports') {
            return this.wzLoadToChildColl(child, _md.exports, this.items);
        }
        else if (name === 'example') {
            return this.wzLoadToChildColl(child, _md.example, this.items);
        }
        else if (name === 'ereader') {
            return this.wzLoadToChildColl(child, _md.ereader, this.items);
        }
        else if (name === 'edition') {
            return this.wzLoadToChildColl(child, _md.edition, this.items);
        }
        if (name === 'founder') {
            return this.wzLoadToChildColl(child, _md.founder, this.items);
        }
        if (name === 'synonim') {
            return this.wzLoadToChildColl(child, _md.synonim, this.items);
        }
        if (name === 'written') {
            return this.wzLoadToChildColl(child, _md.written, this.items);
        }
        if (name === 'approach') {
            return this.wzLoadToChildColl(child, _md.approach, this.items);
        }
        else if (name === 'abstract') {
            return this.wzLoadToChildColl(child, _md.textabstract, this.items);
        }
        if (name === 'coauthor') {
            return this.wzLoadToChildColl(child, _md.coauthor, this.items);
        }
        else if (name === 'coeditor') {
            return this.wzLoadToChildColl(child, _md.coeditor, this.items);
        }
        if (name === 'date-pub') {
            return this.wzLoadToChildColl(child, _md.datepub, this.items);
        }
        if (name === 'e-reader') {
            return this.wzLoadToChildColl(child, _md.ereader, this.items);
        }
        if (name === 'fullname') {
            return this.wzLoadToChildColl(child, _md.fullname, this.items);
        }
        if (name === 'glossary') {
            return this.wzLoadToChildColl(child, _md.glossary, this.items);
        }
        if (name === 'prefator') {
            return this.wzLoadToChildColl(child, _md.prefator, this.items);
        }
        if (name === 'rconcept') {
            return this.wzLoadToChildColl(child, _md.relatedconcept, this.items);
        }
        else if (name === 'rarticle') {
            return this.wzLoadToChildColl(child, _md.relatedarticle, this.items);
        }
        if (name === 'subtitle') {
            return this.wzLoadToChildColl(child, _md.subTitle, this.items);
        }
        if (name === 'backcover') {
            return this.wzLoadToChildColl(child, _md.backcover, this.items);
        }
        if (name === 'co-author') {
            return this.wzLoadToChildColl(child, _md.coauthor, this.items);
        }
        else if (name === 'criticism') {
            return this.wzLoadToChildColl(child, _md.criticism, this.items);
        }
        else if (name === 'co-editor') {
            return this.wzLoadToChildColl(child, _md.coeditor, this.items);
        }
        if (name === 'namespace') {
            return this.wzLoadToChildColl(child, _md.namespace, this.items);
        }
        if (name === 'opinionof') {
            return this.wzLoadToChildColl(child, _md.opinionof, this.items);
        }
        if (name === 'principle') {
            return this.wzLoadToChildColl(child, _md.principle, this.items);
        }
        if (name === 'r-concept') {
            return this.wzLoadToChildColl(child, _md.relatedconcept, this.items);
        }
        else if (name === 'r-article') {
            return this.wzLoadToChildColl(child, _md.relatedarticle, this.items);
        }
        if (name === 'sub-title') {
            return this.wzLoadToChildColl(child, _md.subTitle, this.items);
        }
        if (name === 'back-cover') {
            return this.wzLoadToChildColl(child, _md.backcover, this.items);
        }
        if (name === 'influenced') {
            return this.wzLoadToChildColl(child, _md.influenced, this.items);
        }
        if (name === 'opinion-of') {
            return this.wzLoadToChildColl(child, _md.opinionof, this.items);
        }
        if (name === 'seeconcept') {
            return this.wzLoadToChildColl(child, _md.seeconcept, this.items);
        }
        if (name === 'translator') {
            return this.wzLoadToChildColl(child, _md.translator, this.items);
        }
        else if (name === 'translator') {
            return this.wzLoadToChildColl(child, _md.translator, this.items);
        }
        if (name === 'application') {
            return this.wzLoadToChildColl(child, _md.application, this.items);
        }
        if (name === 'description') {
            return this.wzLoadToChildColl(child, _md.description, this.items);
        }
        if (name === 'see-concept') {
            return this.wzLoadToChildColl(child, _md.seeconcept, this.items);
        }
        if (name === 'translation') {
            return this.wzLoadToChildColl(child, _md.translation, this.items);
        }
        if (name === 'authorsgroup') {
            return this.wzLoadToChildColl(child, _md.authorsgroup, this.items);
        }
        else if (name === 'attributedby') {
            return this.wzLoadToChildColl(child, _md.attributedby, this.items);
        }
        if (name === 'forerunnerof') {
            return this.wzLoadToChildColl(child, _md.forerunnerof, this.items);
        }
        if (name === 'influencedby') {
            return this.wzLoadToChildColl(child, _md.influencedby, this.items);
        }
        if (name === 'reviewedwork') {
            return this.wzLoadToChildColl(child, _md.reviewedwork, this.items);
        }
        if (name === 'authors-group') {
            return this.wzLoadToChildColl(child, _md.authorsgroup, this.items);
        }
        else if (name === 'attributed-by') {
            return this.wzLoadToChildColl(child, _md.attributedby, this.items);
        }
        if (name === 'forerunner-of') {
            return this.wzLoadToChildColl(child, _md.forerunnerof, this.items);
        }
        if (name === 'influenced-by') {
            return this.wzLoadToChildColl(child, _md.influencedby, this.items);
        }
        if (name === 'reviewed-work') {
            return this.wzLoadToChildColl(child, _md.reviewedwork, this.items);
        }
        if (name === 'againstconcept') {
            return this.wzLoadToChildColl(child, _md.againstconcept, this.items);
        }
        if (name === 'contributionto') {
            return this.wzLoadToChildColl(child, _md.contributionto, this.items);
        }
        if (name === 'againstapproach') {
            return this.wzLoadToChildColl(child, _md.againstapproach, this.items);
        }
        else if (name === 'against-concept') {
            return this.wzLoadToChildColl(child, _md.againstconcept, this.items);
        }
        if (name === 'contribution-to') {
            return this.wzLoadToChildColl(child, _md.contributionto, this.items);
        }
        if (name === 'against-approach') {
            return this.wzLoadToChildColl(child, _md.againstapproach, this.items);
        }
        ok = _md.item.prototype.loadChild.call(this, child);
        return ok;
    }
    philos.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.philosModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    philos.prototype.wzVerify = function(ctx) {
        this.items.forEach(item => 
        
            item.wzVerify(ctx)
        )
        _md.item.prototype.wzVerify.call(this, ctx);
    }
    philos.prototype.wzInitialize = function(ctx) {
        this.items.forEach(item => 
        
            item.wzInitialize(ctx)
        )
        _md.item.prototype.wzInitialize.call(this, ctx);
    }
    return philos;
})(item);

_md.philos = philos;
// element fullname
var fullname = (function (item) {
    _inherits(fullname, item);
    function fullname(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(fullname.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, fullname);
        this.wzElement = "fullname";
    }
    fullname.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    fullname.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    fullname.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return fullname;
})(item);

_md.fullname = fullname;
// element alias
var alias = (function (item) {
    _inherits(alias, item);
    function alias(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(alias.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, alias);
        this.wzElement = "alias";
    }
    alias.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    alias.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    alias.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return alias;
})(item);

_md.alias = alias;
// element synonim
var synonim = (function (item) {
    _inherits(synonim, item);
    function synonim(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(synonim.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, synonim);
        this.wzElement = "synonim";
    }
    synonim.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    synonim.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    synonim.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return synonim;
})(item);

_md.synonim = synonim;
// element date
var date = (function (item) {
    _inherits(date, item);
    function date(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(date.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, date);
        this.wzElement = "date";
    }
    date.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    date.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    date.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return date;
})(item);

_md.date = date;
// element year
var year = (function (item) {
    _inherits(year, item);
    function year(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(year.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, year);
        this.wzElement = "year";
    }
    year.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    year.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    year.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return year;
})(item);

_md.year = year;
// element period
var period = (function (item) {
    _inherits(period, item);
    function period(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(period.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, period);
        this.wzElement = "period";
    }
    period.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    period.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    period.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return period;
})(item);

_md.period = period;
// element place
var place = (function (item) {
    _inherits(place, item);
    function place(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(place.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, place);
        this.wzElement = "place";
    }
    place.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    place.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    place.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return place;
})(item);

_md.place = place;
// element source
var source = (function (item) {
    _inherits(source, item);
    function source(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(source.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, source);
        this.wzElement = "source";
    }
    source.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    source.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    source.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return source;
})(item);

_md.source = source;
// element url
var url = (function (item) {
    _inherits(url, item);
    function url(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(url.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, url);
        this.wzElement = "url";
    }
    url.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    url.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    url.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return url;
})(item);

_md.url = url;
// element title
var title = (function (item) {
    _inherits(title, item);
    function title(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(title.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, title);
        this.wzElement = "title";
    }
    title.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    title.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    title.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return title;
})(item);

_md.title = title;
// element description
var description = (function (item) {
    _inherits(description, item);
    function description(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(description.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, description);
        this.wzElement = "description";
    }
    description.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    description.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    description.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return description;
})(item);

_md.description = description;
// element ref
var ref = (function (item) {
    _inherits(ref, item);
    function ref(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(ref.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ref);
        this.wzElement = "ref";
    }
    ref.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    ref.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    ref.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return ref;
})(item);

_md.ref = ref;
// element from
var from = (function (item) {
    _inherits(from, item);
    function from(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(from.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, from);
        this.wzElement = "from";
    }
    from.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    from.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    from.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return from;
})(item);

_md.from = from;
// element to
var to = (function (item) {
    _inherits(to, item);
    function to(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(to.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, to);
        this.wzElement = "to";
    }
    to.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    to.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    to.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return to;
})(item);

_md.to = to;
// element xextends
var xextends = (function (item) {
    _inherits(xextends, item);
    function xextends(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xextends.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xextends);
        this.wzElement = "xextends";
    }
    xextends.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    xextends.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    xextends.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return xextends;
})(item);

_md.xextends = xextends;
// element exports
var exports = (function (item) {
    _inherits(exports, item);
    function exports(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(exports.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, exports);
        this.wzElement = "exports";
    }
    exports.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    exports.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    exports.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return exports;
})(item);

_md.exports = exports;
// element bax
var bax = (function (item) {
    _inherits(bax, item);
    function bax(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(bax.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, bax);
        this.wzElement = "bax";
    }
    bax.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    bax.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    bax.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return bax;
})(item);

_md.bax = bax;
// element wiki
var wiki = (function (item) {
    _inherits(wiki, item);
    function wiki(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(wiki.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, wiki);
        this.wzElement = "wiki";
    }
    wiki.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    wiki.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    wiki.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return wiki;
})(item);

_md.wiki = wiki;
// element de
var de = (function (item) {
    _inherits(de, item);
    function de(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(de.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, de);
        this.wzElement = "de";
    }
    de.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    de.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    de.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return de;
})(item);

_md.de = de;
// element en
var en = (function (item) {
    _inherits(en, item);
    function en(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(en.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, en);
        this.wzElement = "en";
    }
    en.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    en.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    en.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return en;
})(item);

_md.en = en;
// element sp
var sp = (function (item) {
    _inherits(sp, item);
    function sp(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(sp.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, sp);
        this.wzElement = "sp";
    }
    sp.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    sp.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    sp.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return sp;
})(item);

_md.sp = sp;
// element fr
var fr = (function (item) {
    _inherits(fr, item);
    function fr(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(fr.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, fr);
        this.wzElement = "fr";
    }
    fr.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    fr.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    fr.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return fr;
})(item);

_md.fr = fr;
// element it
var it = (function (item) {
    _inherits(it, item);
    function it(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(it.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, it);
        this.wzElement = "it";
    }
    it.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    it.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    it.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return it;
})(item);

_md.it = it;
// element namespace
var namespace = (function (item) {
    _inherits(namespace, item);
    function namespace(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(namespace.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, namespace);
        this.wzElement = "namespace";
    }
    namespace.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    namespace.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    namespace.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return namespace;
})(item);

_md.namespace = namespace;
// element text
var text = (function (item) {
    _inherits(text, item);
    function text(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(text.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, text);
        this.wzElement = "text";
    }
    text.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    text.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    text.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return text;
})(item);

_md.text = text;
// element li
var li = (function (item) {
    _inherits(li, item);
    function li(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(li.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, li);
        this.wzElement = "li";
    }
    li.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    li.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    li.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return li;
})(item);

_md.li = li;
// element a
var a = (function (item) {
    _inherits(a, item);
    function a(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(a.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, a);
        this.wzElement = "a";
    }
    a.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    a.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.href)) {
            result["href"] = this.href;
        }
        if (!isEmpty(this.title)) {
            result["title"] = this.title;
        }
        if (!isEmpty(this.target)) {
            result["target"] = this.target;
        }
    }
    a.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    a.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'href') {
            this.href = child.v; return true;
        }
        if (name === 'title') {
            this.title = child.v; return true;
        }
        if (name === 'target') {
            this.target = child.v; return true;
        }
        ok = _md.item.prototype.loadChild.call(this, child);
        return ok;
    }
    a.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.philosModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return a;
})(item);

_md.a = a;
// element img
var img = (function (item) {
    _inherits(img, item);
    function img(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(img.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, img);
        this.wzElement = "img";
    }
    img.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    img.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    img.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return img;
})(item);

_md.img = img;
// element author
var author = (function (item) {
    _inherits(author, item);
    function author(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(author.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, author);
        this.wzElement = "author";
    }
    author.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    author.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    author.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return author;
})(item);

_md.author = author;
// element authorsgroup
var authorsgroup = (function (item) {
    _inherits(authorsgroup, item);
    function authorsgroup(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(authorsgroup.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, authorsgroup);
        this.wzElement = "authorsgroup";
    }
    authorsgroup.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    authorsgroup.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    authorsgroup.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return authorsgroup;
})(item);

_md.authorsgroup = authorsgroup;
// element coauthor
var coauthor = (function (item) {
    _inherits(coauthor, item);
    function coauthor(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(coauthor.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, coauthor);
        this.wzElement = "coauthor";
    }
    coauthor.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    coauthor.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    coauthor.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return coauthor;
})(item);

_md.coauthor = coauthor;
// element founder
var founder = (function (item) {
    _inherits(founder, item);
    function founder(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(founder.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, founder);
        this.wzElement = "founder";
    }
    founder.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    founder.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    founder.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return founder;
})(item);

_md.founder = founder;
// element parent
var parent = (function (item) {
    _inherits(parent, item);
    function parent(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(parent.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, parent);
        this.wzElement = "parent";
    }
    parent.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    parent.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    parent.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return parent;
})(item);

_md.parent = parent;
// element child
var child = (function (item) {
    _inherits(child, item);
    function child(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(child.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, child);
        this.wzElement = "child";
    }
    child.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    child.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    child.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return child;
})(item);

_md.child = child;
// element place
var place = (function (item) {
    _inherits(place, item);
    function place(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(place.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, place);
        this.wzElement = "place";
    }
    place.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    place.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    place.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return place;
})(item);

_md.place = place;
// element born
var born = (function (item) {
    _inherits(born, item);
    function born(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(born.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, born);
        this.wzElement = "born";
    }
    born.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    born.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    born.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return born;
})(item);

_md.born = born;
// element died
var died = (function (item) {
    _inherits(died, item);
    function died(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(died.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, died);
        this.wzElement = "died";
    }
    died.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    died.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    died.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return died;
})(item);

_md.died = died;
// element avatar
var avatar = (function (item) {
    _inherits(avatar, item);
    function avatar(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(avatar.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, avatar);
        this.wzElement = "avatar";
    }
    avatar.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    avatar.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    avatar.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return avatar;
})(item);

_md.avatar = avatar;
// element influenced
var influenced = (function (item) {
    _inherits(influenced, item);
    function influenced(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(influenced.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, influenced);
        this.wzElement = "influenced";
    }
    influenced.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    influenced.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    influenced.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return influenced;
})(item);

_md.influenced = influenced;
// element influencedby
var influencedby = (function (item) {
    _inherits(influencedby, item);
    function influencedby(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(influencedby.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, influencedby);
        this.wzElement = "influencedby";
    }
    influencedby.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    influencedby.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    influencedby.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return influencedby;
})(item);

_md.influencedby = influencedby;
// element attributedby
var attributedby = (function (item) {
    _inherits(attributedby, item);
    function attributedby(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(attributedby.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, attributedby);
        this.wzElement = "attributedby";
    }
    attributedby.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    attributedby.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    attributedby.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return attributedby;
})(item);

_md.attributedby = attributedby;
// element opinionof
var opinionof = (function (item) {
    _inherits(opinionof, item);
    function opinionof(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(opinionof.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, opinionof);
        this.wzElement = "opinionof";
    }
    opinionof.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    opinionof.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    opinionof.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return opinionof;
})(item);

_md.opinionof = opinionof;
// element criticism
var criticism = (function (item) {
    _inherits(criticism, item);
    function criticism(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(criticism.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, criticism);
        this.wzElement = "criticism";
    }
    criticism.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    criticism.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    criticism.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return criticism;
})(item);

_md.criticism = criticism;
// element field
var field = (function (item) {
    _inherits(field, item);
    function field(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(field.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, field);
        this.wzElement = "field";
    }
    field.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    field.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    field.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return field;
})(item);

_md.field = field;
// element branch
var branch = (function (item) {
    _inherits(branch, item);
    function branch(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(branch.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, branch);
        this.wzElement = "branch";
    }
    branch.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    branch.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    branch.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return branch;
})(item);

_md.branch = branch;
// element school
var school = (function (item) {
    _inherits(school, item);
    function school(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(school.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, school);
        this.wzElement = "school";
    }
    school.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    school.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    school.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return school;
})(item);

_md.school = school;
// element theory
var theory = (function (item) {
    _inherits(theory, item);
    function theory(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(theory.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, theory);
        this.wzElement = "theory";
    }
    theory.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    theory.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    theory.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return theory;
})(item);

_md.theory = theory;
// element approach
var approach = (function (item) {
    _inherits(approach, item);
    function approach(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(approach.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, approach);
        this.wzElement = "approach";
    }
    approach.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    approach.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    approach.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return approach;
})(item);

_md.approach = approach;
// element phase
var phase = (function (item) {
    _inherits(phase, item);
    function phase(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(phase.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, phase);
        this.wzElement = "phase";
    }
    phase.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    phase.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    phase.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return phase;
})(item);

_md.phase = phase;
// element principle
var principle = (function (item) {
    _inherits(principle, item);
    function principle(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(principle.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, principle);
        this.wzElement = "principle";
    }
    principle.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    principle.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    principle.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return principle;
})(item);

_md.principle = principle;
// element method
var method = (function (item) {
    _inherits(method, item);
    function method(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(method.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, method);
        this.wzElement = "method";
    }
    method.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    method.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    method.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return method;
})(item);

_md.method = method;
// element forerunnerof
var forerunnerof = (function (item) {
    _inherits(forerunnerof, item);
    function forerunnerof(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(forerunnerof.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, forerunnerof);
        this.wzElement = "forerunnerof";
    }
    forerunnerof.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    forerunnerof.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    forerunnerof.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return forerunnerof;
})(item);

_md.forerunnerof = forerunnerof;
// element againstapproach
var againstapproach = (function (item) {
    _inherits(againstapproach, item);
    function againstapproach(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(againstapproach.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, againstapproach);
        this.wzElement = "againstapproach";
    }
    againstapproach.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    againstapproach.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    againstapproach.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return againstapproach;
})(item);

_md.againstapproach = againstapproach;
// element contributionto
var contributionto = (function (item) {
    _inherits(contributionto, item);
    function contributionto(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(contributionto.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, contributionto);
        this.wzElement = "contributionto";
    }
    contributionto.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    contributionto.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    contributionto.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return contributionto;
})(item);

_md.contributionto = contributionto;
// element application
var application = (function (item) {
    _inherits(application, item);
    function application(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(application.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, application);
        this.wzElement = "application";
    }
    application.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    application.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    application.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return application;
})(item);

_md.application = application;
// element concept
var concept = (function (item) {
    _inherits(concept, item);
    function concept(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(concept.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, concept);
        this.wzElement = "concept";
    }
    concept.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    concept.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    concept.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return concept;
})(item);

_md.concept = concept;
// element relatedconcept
var relatedconcept = (function (item) {
    _inherits(relatedconcept, item);
    function relatedconcept(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(relatedconcept.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, relatedconcept);
        this.wzElement = "relatedconcept";
    }
    relatedconcept.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    relatedconcept.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    relatedconcept.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return relatedconcept;
})(item);

_md.relatedconcept = relatedconcept;
// element seeconcept
var seeconcept = (function (item) {
    _inherits(seeconcept, item);
    function seeconcept(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(seeconcept.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, seeconcept);
        this.wzElement = "seeconcept";
    }
    seeconcept.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    seeconcept.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    seeconcept.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return seeconcept;
})(item);

_md.seeconcept = seeconcept;
// element lemma
var lemma = (function (item) {
    _inherits(lemma, item);
    function lemma(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(lemma.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, lemma);
        this.wzElement = "lemma";
    }
    lemma.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    lemma.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    lemma.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return lemma;
})(item);

_md.lemma = lemma;
// element idea
var idea = (function (item) {
    _inherits(idea, item);
    function idea(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(idea.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, idea);
        this.wzElement = "idea";
    }
    idea.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    idea.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    idea.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return idea;
})(item);

_md.idea = idea;
// element againstconcept
var againstconcept = (function (item) {
    _inherits(againstconcept, item);
    function againstconcept(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(againstconcept.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, againstconcept);
        this.wzElement = "againstconcept";
    }
    againstconcept.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    againstconcept.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    againstconcept.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return againstconcept;
})(item);

_md.againstconcept = againstconcept;
// element example
var example = (function (item) {
    _inherits(example, item);
    function example(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(example.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, example);
        this.wzElement = "example";
    }
    example.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    example.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    example.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return example;
})(item);

_md.example = example;
// element parent
var parent = (function (item) {
    _inherits(parent, item);
    function parent(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(parent.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, parent);
        this.wzElement = "parent";
    }
    parent.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    parent.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    parent.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return parent;
})(item);

_md.parent = parent;
// element page
var page = (function (item) {
    _inherits(page, item);
    function page(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(page.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, page);
        this.wzElement = "page";
    }
    page.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    page.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    page.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return page;
})(item);

_md.page = page;
// element ereader
var ereader = (function (item) {
    _inherits(ereader, item);
    function ereader(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(ereader.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ereader);
        this.wzElement = "ereader";
    }
    ereader.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    ereader.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    ereader.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return ereader;
})(item);

_md.ereader = ereader;
// element eloc
var eloc = (function (item) {
    _inherits(eloc, item);
    function eloc(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(eloc.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, eloc);
        this.wzElement = "eloc";
    }
    eloc.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    eloc.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    eloc.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return eloc;
})(item);

_md.eloc = eloc;
// element epage
var epage = (function (item) {
    _inherits(epage, item);
    function epage(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(epage.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, epage);
        this.wzElement = "epage";
    }
    epage.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    epage.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    epage.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return epage;
})(item);

_md.epage = epage;
// element title
var title = (function (item) {
    _inherits(title, item);
    function title(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(title.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, title);
        this.wzElement = "title";
    }
    title.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    title.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.original)) {
            result["original"] = this.original;
        }
    }
    title.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    title.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'original') {
            this.original = child.v; return true;
        }
        ok = _md.item.prototype.loadChild.call(this, child);
        return ok;
    }
    title.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.philosModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return title;
})(item);

_md.title = title;
// element subTitle
var subTitle = (function (item) {
    _inherits(subTitle, item);
    function subTitle(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(subTitle.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, subTitle);
        this.wzElement = "subTitle";
    }
    subTitle.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    subTitle.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    subTitle.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return subTitle;
})(item);

_md.subTitle = subTitle;
// element editor
var editor = (function (item) {
    _inherits(editor, item);
    function editor(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(editor.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, editor);
        this.wzElement = "editor";
    }
    editor.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    editor.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    editor.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return editor;
})(item);

_md.editor = editor;
// element xin
var xin = (function (item) {
    _inherits(xin, item);
    function xin(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xin.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xin);
        this.wzElement = "xin";
    }
    xin.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    xin.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    xin.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return xin;
})(item);

_md.xin = xin;
// element translation
var translation = (function (item) {
    _inherits(translation, item);
    function translation(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(translation.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, translation);
        this.wzElement = "translation";
    }
    translation.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    translation.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    translation.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return translation;
})(item);

_md.translation = translation;
// element translator
var translator = (function (item) {
    _inherits(translator, item);
    function translator(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(translator.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, translator);
        this.wzElement = "translator";
    }
    translator.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    translator.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    translator.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return translator;
})(item);

_md.translator = translator;
// element prefator
var prefator = (function (item) {
    _inherits(prefator, item);
    function prefator(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(prefator.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, prefator);
        this.wzElement = "prefator";
    }
    prefator.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    prefator.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    prefator.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return prefator;
})(item);

_md.prefator = prefator;
// element curator
var curator = (function (item) {
    _inherits(curator, item);
    function curator(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(curator.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, curator);
        this.wzElement = "curator";
    }
    curator.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    curator.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    curator.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return curator;
})(item);

_md.curator = curator;
// element translator
var translator = (function (item) {
    _inherits(translator, item);
    function translator(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(translator.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, translator);
        this.wzElement = "translator";
    }
    translator.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    translator.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    translator.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return translator;
})(item);

_md.translator = translator;
// element written
var written = (function (item) {
    _inherits(written, item);
    function written(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(written.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, written);
        this.wzElement = "written";
    }
    written.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    written.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    written.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return written;
})(item);

_md.written = written;
// element datepub
var datepub = (function (item) {
    _inherits(datepub, item);
    function datepub(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(datepub.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, datepub);
        this.wzElement = "datepub";
    }
    datepub.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    datepub.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    datepub.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return datepub;
})(item);

_md.datepub = datepub;
// element coeditor
var coeditor = (function (item) {
    _inherits(coeditor, item);
    function coeditor(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(coeditor.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, coeditor);
        this.wzElement = "coeditor";
    }
    coeditor.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    coeditor.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    coeditor.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return coeditor;
})(item);

_md.coeditor = coeditor;
// element edition
var edition = (function (item) {
    _inherits(edition, item);
    function edition(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(edition.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, edition);
        this.wzElement = "edition";
    }
    edition.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    edition.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.year)) {
            result["year"] = this.year;
        }
    }
    edition.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    edition.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'year') {
            this.year = child.v; return true;
        }
        ok = _md.item.prototype.loadChild.call(this, child);
        return ok;
    }
    edition.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.philosModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return edition;
})(item);

_md.edition = edition;
// element book
var book = (function (item) {
    _inherits(book, item);
    function book(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(book.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, book);
        this.wzElement = "book";
    }
    book.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    book.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    book.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return book;
})(item);

_md.book = book;
// element relatedbook
var relatedbook = (function (item) {
    _inherits(relatedbook, item);
    function relatedbook(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(relatedbook.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, relatedbook);
        this.wzElement = "relatedbook";
    }
    relatedbook.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    relatedbook.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    relatedbook.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return relatedbook;
})(item);

_md.relatedbook = relatedbook;
// element ebook
var ebook = (function (item) {
    _inherits(ebook, item);
    function ebook(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(ebook.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ebook);
        this.wzElement = "ebook";
    }
    ebook.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    ebook.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    ebook.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return ebook;
})(item);

_md.ebook = ebook;
// element backcover
var backcover = (function (item) {
    _inherits(backcover, item);
    function backcover(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(backcover.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, backcover);
        this.wzElement = "backcover";
    }
    backcover.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    backcover.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    backcover.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return backcover;
})(item);

_md.backcover = backcover;
// element textabstract
var textabstract = (function (item) {
    _inherits(textabstract, item);
    function textabstract(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(textabstract.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, textabstract);
        this.wzElement = "textabstract";
    }
    textabstract.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    textabstract.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    textabstract.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return textabstract;
})(item);

_md.textabstract = textabstract;
// element index
var index = (function (item) {
    _inherits(index, item);
    function index(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(index.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, index);
        this.wzElement = "index";
    }
    index.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    index.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    index.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return index;
})(item);

_md.index = index;
// element article
var article = (function (item) {
    _inherits(article, item);
    function article(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(article.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, article);
        this.wzElement = "article";
    }
    article.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    article.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    article.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return article;
})(item);

_md.article = article;
// element relatedarticle
var relatedarticle = (function (item) {
    _inherits(relatedarticle, item);
    function relatedarticle(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(relatedarticle.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, relatedarticle);
        this.wzElement = "relatedarticle";
    }
    relatedarticle.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    relatedarticle.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    relatedarticle.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return relatedarticle;
})(item);

_md.relatedarticle = relatedarticle;
// element letter
var letter = (function (item) {
    _inherits(letter, item);
    function letter(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(letter.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, letter);
        this.wzElement = "letter";
    }
    letter.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    letter.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    letter.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return letter;
})(item);

_md.letter = letter;
// element phrase
var phrase = (function (item) {
    _inherits(phrase, item);
    function phrase(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(phrase.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, phrase);
        this.wzElement = "phrase";
    }
    phrase.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    phrase.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    phrase.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return phrase;
})(item);

_md.phrase = phrase;
// element review
var review = (function (item) {
    _inherits(review, item);
    function review(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(review.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, review);
        this.wzElement = "review";
    }
    review.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    review.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    review.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return review;
})(item);

_md.review = review;
// element reviewedwork
var reviewedwork = (function (item) {
    _inherits(reviewedwork, item);
    function reviewedwork(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(reviewedwork.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, reviewedwork);
        this.wzElement = "reviewedwork";
    }
    reviewedwork.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    reviewedwork.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    reviewedwork.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return reviewedwork;
})(item);

_md.reviewedwork = reviewedwork;
// element quote
var quote = (function (item) {
    _inherits(quote, item);
    function quote(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(quote.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, quote);
        this.wzElement = "quote";
    }
    quote.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    quote.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    quote.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return quote;
})(item);

_md.quote = quote;
// element biblio
var biblio = (function (item) {
    _inherits(biblio, item);
    function biblio(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(biblio.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, biblio);
        this.wzElement = "biblio";
    }
    biblio.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    biblio.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    biblio.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return biblio;
})(item);

_md.biblio = biblio;
// element glossary
var glossary = (function (item) {
    _inherits(glossary, item);
    function glossary(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(glossary.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, glossary);
        this.wzElement = "glossary";
    }
    glossary.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    glossary.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    glossary.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return glossary;
})(item);

_md.glossary = glossary;
// element comment
var comment = (function (item) {
    _inherits(comment, item);
    function comment(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(comment.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, comment);
        this.wzElement = "comment";
    }
    comment.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    comment.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    comment.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return comment;
})(item);

_md.comment = comment;
// element etimo
var etimo = (function (item) {
    _inherits(etimo, item);
    function etimo(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(etimo.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, etimo);
        this.wzElement = "etimo";
    }
    etimo.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    etimo.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    etimo.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    return etimo;
})(item);

_md.etimo = etimo;
// element buy
var buy = (function (item) {
    _inherits(buy, item);
    function buy(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(buy.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, buy);
        this.wzElement = "buy";
    }
    buy.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    buy.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.seller)) {
            result["seller"] = this.seller;
        }
        if (!isEmpty(this.url)) {
            result["url"] = this.url;
        }
    }
    buy.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    buy.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'url') {
            this.url = child.v; return true;
        }
        if (name === 'seller') {
            this.seller = child.v; return true;
        }
        ok = _md.item.prototype.loadChild.call(this, child);
        return ok;
    }
    buy.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.philosModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return buy;
})(item);

_md.buy = buy;
_md.__tagElementMapping = { 'extends': 'xextends', '+': 'text', 'authors-group': 'authorsgroup', 'co-author': 'coauthor', 'influenced-by': 'influencedby', 'attributed-by': 'attributedby', 'opinion-of': 'opinionof', 'forerunner-of': 'forerunnerof', 'against-approach': 'againstapproach', 'contribution-to': 'contributionto', 'r-concept': 'relatedconcept', 'rconcept': 'relatedconcept', 'see-concept': 'seeconcept', 'against-concept': 'againstconcept', 'e-reader': 'ereader', 'e-loc': 'eloc', 'e-page': 'epage', 'sub-title': 'subTitle', 'subtitle': 'subTitle', 'in': 'xin', 'date-pub': 'datepub', 'co-editor': 'coeditor', 'r-book': 'relatedbook', 'rbook': 'relatedbook', 'e-book': 'ebook', 'back-cover': 'backcover', 'abstract': 'textabstract', 'r-article': 'relatedarticle', 'rarticle': 'relatedarticle', 'reviewed-work': 'reviewedwork' };
// model/replaceUnknownElement( )
var philosModelException = (function () {
    function philosModelException(message, node, instance) {
        _classCallCheck(this, philosModelException);
        // VIA 14/2/21 (pollutes log) set this.node = node
        // VIA 14/2/21 (pollutes log) set this.instance = instance
        if (node && instance) {
            this.message = message + ', wzElement: ' + node.wzElement + ', wzName:' + (node.wzName || '') + ', row:' + node.r + ', col:' + node.c + ', source:' + instance.wzSourceFilepath(node.u);
            this.errorLines = instance.wzSourceErrorLines(node, message)
            ;
        }
        else if (instance) {
            this.message = message + instance.wzSourceLineInfo.toString(instance);
        }
        else {
            this.message = message;
        }
        console.log("[31m%s[0m", 'message', this.message);
        this.stack = (new Error()).stack;
    }
    philosModelException.prototype.toString = function() {
        var msg = [];
        msg.push(chalk.red('Error: ' + this.message));
        msg.push(chalk.red('  name: philosModelException'));
        if (this.node) {
            msg.push(chalk.yellow('  row: ' + this.node.r + ', col: ' + this.node.c));
        }
        if (this.instance) {
            if (this.node) {
                msg.push(chalk.yellow('  uri: ' + this.instance.wzSourceFilepath(this.node.u)));
            }
            else {
                msg.push(chalk.yellow('  uri: ' + this.instance.wzSourceLineInfo.toString(this.instance)));
            }
        }
        else {
            msg.push(chalk.yellow('  uri: unknown'));
        }
        if (this.errorLines) {
            var i, i_items=this.errorLines, i_len=this.errorLines.length, line;
            for (i=0; i<i_len; i++) {
                line = this.errorLines[i];
                msg.push(chalk.yellow('  ' + line));
            }
        }
        return msg.join('\n');
    }
    return philosModelException;
})();

_md.philosModelException = philosModelException;
var philosContext = (function () {
    function philosContext() {
        _classCallCheck(this, philosContext);
        this.validationErrors = [];
    }
    philosContext.prototype.schemaIsValid = function() {
        return this.validationErrors.length == 0;
    }
    philosContext.prototype.addError = function(message, node) {
        var at = node ? ' At ' + node.wzSourceLineInfo.toString(node) : '';
        this.validationErrors.push(message + at)
    }
    return philosContext;
})();

_md.philosContext = philosContext;
function parsestring(value, defaultValue, node) {
    if (isEmpty( value )) {
        return defaultValue;
    }
    return value;
}
function isString(value) {
    return (typeof value === 'string' || value instanceof String);
}
function isEmpty(value) {
    return !isString( value ) || value.length === 0;
}
function isBoolean(value) {
    return value === 'true' || value === 'false';
}

