module
    kind es6
    
    statements-writer(wizzi.plugins.c.lib.artifacts.module.gen.writers.control)

        $append imports
                
        statement( xif
            _ ctx.w('if (' + name + ') {')
            _ mainWriter.genItems
                @ model.statements
                @ ctx
                {
                    @ indent true
                a_cb()
                    _ ctx.w('}')
                    r_cb()

        statement( xelse
            _ ctx.w('else {')
            _ mainWriter.genItems
                @ model.statements
                @ ctx
                {
                    @ indent true
                a_cb()
                    _ ctx.w('}')
                    r_cb()

        statement( elif
            _ ctx.w('else if (' + name + ') {')
            _ mainWriter.genItems
                @ model.statements
                @ ctx
                {
                    @ indent true
                a_cb()
                    _ ctx.w('}')
                    r_cb()

        statement( xfor
            _ ctx.w('for (' + name + ') {')
            _ mainWriter.genItems
                @ model.statements
                @ ctx
                {
                    @ indent true
                a_cb()
                    _ ctx.w('}')
                    r_cb()

        statement( xwhile
            _ ctx.w('while (' + name + ') {')
            _ mainWriter.genItems
                @ model.statements
                @ ctx
                {
                    @ indent true
                a_cb()
                    _ ctx.w('}')
                    r_cb()

        statement( xdo
            _ ctx.w('do {')
            _ mainWriter.genItems
                @ model.statements
                @ ctx
                {
                    @ indent true
                a_cb()
                    _ ctx.w('}')
                    _ ctx.w('while (' + name + ');')
                    r_cb()

        statement( xswitch
            _ ctx.w('switch (' + name + ') {')
            _ mainWriter.genItems
                @ model.statements
                @ ctx
                {
                    @ indent true
                a_cb()
                    _ ctx.w('}')
                    r_cb()

        statement( xcase
            # _ ctx.w('case ' + name + ': {')
            _ ctx.w('case ' + name + ':')
            _ mainWriter.genItems
                @ model.statements
                @ ctx
                {
                    @ indent true
                a_cb()
                    # _ ctx.w('}')
                    r_cb()

        statement( xdefault
            _ ctx.w('default: {')
            _ mainWriter.genItems
                @ model.statements
                @ ctx
                {
                    @ indent true
                a_cb()
                    _ ctx.w('}')
                    r_cb()

        statement( label
            var save = ctx.forceIndent(1)
            _ ctx.w(name + ':')
            _ mainWriter.genItems
                @ model.statements
                @ ctx
                {
                    @ indent true
                a_cb()
                    _ ctx.forceIndent(save)
                    r_cb()                