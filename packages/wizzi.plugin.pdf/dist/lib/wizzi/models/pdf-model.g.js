/*
    artifact generator: C:\My\wizzi\stfnbssl\wizzi\node_modules\wizzi-legacy-v5\lib\artifacts\js\module\gen\main.js
    primary source IttfDocument: c:\my\wizzi\stfnbssl\wizzi\node_modules\wizzi-core\lib\artifacts\wfschema\model\gen\ittf\wfschema-model.js.ittf
    utc time: Mon, 15 Mar 2021 12:41:29 GMT
*/
'use strict';
// generated by v5-wizzi-js.artifacts.js.module.main
function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var util = require('util');
var path = require('path');
var _ = require('lodash');
var chalk = require('chalk');
var wzutils = require('wizzi-utils');
var verify = wzutils.verify;
var _md = module.exports = {};
var wzSourceLineInfo = (function () {
    function wzSourceLineInfo(row, col, sourceKey) {
        _classCallCheck(this, wzSourceLineInfo);
        this.row = row;
        this.col = col;
        this.sourceKey = sourceKey;
    }
    wzSourceLineInfo.prototype.toString = function(instance) {
        if (instance) {
            return 'row: ' + this.row + ', col: ' + this.col + ', file: ' + instance.wzSourceFilepath(this.sourceKey);
        }
        else {
            return 'row: ' + this.row + ', col: ' + this.col + ', sourceKey: ' + this.sourceKey;
        }
    }
    return wzSourceLineInfo;
})();

_md.wzSourceLineInfo = wzSourceLineInfo;
var pdfBase = (function () {
    function pdfBase(name, sourceLineInfo) {
        _classCallCheck(this, pdfBase);
        this.wzName = name || '';
        this.wzParent = null;
        this.wzSourceLineInfo = sourceLineInfo;
        this.wzChildren = [];
    }
    pdfBase.prototype.wzRoot = function() {
        return this.wzParent == null ? this : this.wzParent.wzRoot();
    }
    pdfBase.prototype.wzSourceFilepath = function(sourceKey) {
        var sk = sourceKey || this.wzSourceLineInfo.sourceKey;
        return this.wzRoot().loadHistory.getIttfDocumentUri(sk);
    }
    pdfBase.prototype.wzSourceErrorLines = function(node, message) {
        return this.wzRoot().loadHistory.getIttfDocumentErrorLines(node.u, {
                row: node.r, 
                col: node.c, 
                description: message
            }, true);
    }
    pdfBase.prototype.wzVerify = function() {
    }
    pdfBase.prototype.wzInitialize = function() {
    }
    pdfBase.prototype.wzInitializeAsync = function(ctx, callback) {
        callback(null);
    }
    pdfBase.prototype.wzAddChild = function(node) {
        node.wzParent = this;
        this.wzChildren.push(node);
    }
    pdfBase.prototype.wzAddChildToColl = function(node, coll) {
        node.wzParent = this;
        node.wzMoved = true;
        coll.push(node);
    }
    pdfBase.prototype.wzMoveChildToColl = function(node, coll, fromColl) {
        var index = fromColl.indexOf(node);
        if (index < 0) {
            this.error('wzMoveChildToColl error. The from collection does not contain the node.', node);
        }
        fromColl.splice(index, 1);
        this.wzAddChildToColl(node, coll);
    }
    pdfBase.prototype.wzLoadToChildColl = function(child, type, coll) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        if (child.wzMTreeData) {
            item.wzMTreeData = child.wzMTreeData;
        }
        item.wzParent = this;
        coll.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    pdfBase.prototype.wzCreateChildColl = function(tag, name, type, coll) {
        var item = new type(name, this.wzSourceLineInfo);
        item.wzTag = tag;
        item.wzParent = this;
        item.wzCreated = true;
        coll.push(item);
        return item;
    }
    pdfBase.prototype.wzLoadToChildren = function(child, type) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        if (child.wzMTreeData) {
            item.wzMTreeData = child.wzMTreeData;
        }
        this.wzChildren.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    pdfBase.prototype.wzLoadOneToOne = function(child, type, fieldName) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        if (child.wzMTreeData) {
            item.wzMTreeData = child.wzMTreeData;
        }
        item.wzParent = this;
        this[fieldName] = item;
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    pdfBase.prototype.wzRemove = function(fromColl) {
        var index = fromColl.indexOf(this);
        if (index < 0) {
            this.error('wzRemove error. The from collection does not contain the node.', this);
        }
        fromColl.splice(index, 1);
    }
    pdfBase.prototype.error = function(message, node) {
        throw new _md.pdfModelException(message, node, this);
    }
    return pdfBase;
})();

_md.pdfBase = pdfBase;
// element node
var node = (function (pdfBase) {
    _inherits(node, pdfBase);
    function node(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(node.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, node);
        this.wzElement = "node";
        // relation node
        this.nodes = [];
    }
    node.prototype.addNode = function(name, sourceLineInfo) {
        var retval = new _md.node(name, sourceLineInfo);
        retval.wzParent = this;
        this.nodes.push(retval);
        return retval;
    }
    node.prototype.getNode = function(name) {
        var found = null;
        this.nodes.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    node.prototype.loadChild = function(child) {
        var name = child.n.toLowerCase();
        if (name === '+') {
            return this.wzLoadToChildColl(child, _md.text, this.nodes);
        }
        if (name === 'b') {
            return this.wzLoadToChildColl(child, _md.bold, this.nodes);
        }
        if (name === 'i') {
            return this.wzLoadToChildColl(child, _md.italics, this.nodes);
        }
        if (name === 'p') {
            return this.wzLoadToChildColl(child, _md.p, this.nodes);
        }
        if (name === 'u') {
            return this.wzLoadToChildColl(child, _md.underline, this.nodes);
        }
        if (name === 'br') {
            return this.wzLoadToChildColl(child, _md.xbreak, this.nodes);
        }
        if (name === 'h1') {
            return this.wzLoadToChildColl(child, _md.h1, this.nodes);
        }
        else if (name === 'h2') {
            return this.wzLoadToChildColl(child, _md.h2, this.nodes);
        }
        if (name === 'ol') {
            return this.wzLoadToChildColl(child, _md.ol, this.nodes);
        }
        if (name === 'tr') {
            return this.wzLoadToChildColl(child, _md.tr, this.nodes);
        }
        else if (name === 'td') {
            return this.wzLoadToChildColl(child, _md.td, this.nodes);
        }
        if (name === 'ul') {
            return this.wzLoadToChildColl(child, _md.ul, this.nodes);
        }
        if (name === 'pdf') {
            return this.wzLoadToChildColl(child, _md.pdf, this.nodes);
        }
        if (name === 'run') {
            return this.wzLoadToChildColl(child, _md.run, this.nodes);
        }
        if (name === 'bold') {
            return this.wzLoadToChildColl(child, _md.boldProp, this.nodes);
        }
        if (name === 'font') {
            return this.wzLoadToChildColl(child, _md.font, this.nodes);
        }
        else if (name === 'fill') {
            return this.wzLoadToChildColl(child, _md.fill, this.nodes);
        }
        else if (name === 'font') {
            return this.wzLoadToChildColl(child, _md.font, this.nodes);
        }
        if (name === 'node') {
            return this.wzLoadToChildColl(child, _md.node, this.nodes);
        }
        else if (name === 'name') {
            return this.wzLoadToChildColl(child, _md.xname, this.nodes);
        }
        else if (name === 'next') {
            return this.wzLoadToChildColl(child, _md.next, this.nodes);
        }
        if (name === 'size') {
            return this.wzLoadToChildColl(child, _md.size, this.nodes);
        }
        if (name === 'type') {
            return this.wzLoadToChildColl(child, _md.xtype, this.nodes);
        }
        if (name === 'color') {
            return this.wzLoadToChildColl(child, _md.color, this.nodes);
        }
        else if (name === 'color') {
            return this.wzLoadToChildColl(child, _md.color, this.nodes);
        }
        if (name === 'image') {
            return this.wzLoadToChildColl(child, _md.image, this.nodes);
        }
        if (name === 'style') {
            return this.wzLoadToChildColl(child, _md.style, this.nodes);
        }
        else if (name === 'stack') {
            return this.wzLoadToChildColl(child, _md.stack, this.nodes);
        }
        if (name === 'table') {
            return this.wzLoadToChildColl(child, _md.table, this.nodes);
        }
        if (name === 'width') {
            return this.wzLoadToChildColl(child, _md.width, this.nodes);
        }
        if (name === 'center') {
            return this.wzLoadToChildColl(child, _md.center, this.nodes);
        }
        if (name === 'height') {
            return this.wzLoadToChildColl(child, _md.height, this.nodes);
        }
        if (name === 'layout') {
            return this.wzLoadToChildColl(child, _md.layout, this.nodes);
        }
        if (name === 'margin') {
            return this.wzLoadToChildColl(child, _md.margin, this.nodes);
        }
        if (name === 'nowrap') {
            return this.wzLoadToChildColl(child, _md.noWrap, this.nodes);
        }
        if (name === 'strike') {
            return this.wzLoadToChildColl(child, _md.strike, this.nodes);
        }
        else if (name === 'styles') {
            return this.wzLoadToChildColl(child, _md.styles, this.nodes);
        }
        if (name === 'widths') {
            return this.wzLoadToChildColl(child, _md.widths, this.nodes);
        }
        if (name === 'allcaps') {
            return this.wzLoadToChildColl(child, _md.allCaps, this.nodes);
        }
        if (name === 'basedon') {
            return this.wzLoadToChildColl(child, _md.basedOn, this.nodes);
        }
        if (name === 'columns') {
            return this.wzLoadToChildColl(child, _md.columns, this.nodes);
        }
        if (name === 'italics') {
            return this.wzLoadToChildColl(child, _md.italicsProp, this.nodes);
        }
        if (name === 'no-wrap') {
            return this.wzLoadToChildColl(child, _md.noWrap, this.nodes);
        }
        if (name === 'section') {
            return this.wzLoadToChildColl(child, _md.section, this.nodes);
        }
        else if (name === 'shading') {
            return this.wzLoadToChildColl(child, _md.shading, this.nodes);
        }
        if (name === 'tabstop') {
            return this.wzLoadToChildColl(child, _md.tabStop, this.nodes);
        }
        if (name === 'bullet_0') {
            return this.wzLoadToChildColl(child, _md.bullet_0, this.nodes);
        }
        if (name === 'fontsize') {
            return this.wzLoadToChildColl(child, _md.fontSize, this.nodes);
        }
        if (name === 'imagedef') {
            return this.wzLoadToChildColl(child, _md.imageDef, this.nodes);
        }
        else if (name === 'imageref') {
            return this.wzLoadToChildColl(child, _md.imageRef, this.nodes);
        }
        if (name === 'position') {
            return this.wzLoadToChildColl(child, _md.position, this.nodes);
        }
        else if (name === 'pagesize') {
            return this.wzLoadToChildColl(child, _md.pageSize, this.nodes);
        }
        if (name === 'styledef') {
            return this.wzLoadToChildColl(child, _md.styleDef, this.nodes);
        }
        if (name === 'alignment') {
            return this.wzLoadToChildColl(child, _md.alignment, this.nodes);
        }
        if (name === 'columngap') {
            return this.wzLoadToChildColl(child, _md.columnGap, this.nodes);
        }
        if (name === 'font-size') {
            return this.wzLoadToChildColl(child, _md.fontSize, this.nodes);
        }
        if (name === 'highlight') {
            return this.wzLoadToChildColl(child, _md.highlight, this.nodes);
        }
        if (name === 'image-def') {
            return this.wzLoadToChildColl(child, _md.imageDef, this.nodes);
        }
        else if (name === 'image-ref') {
            return this.wzLoadToChildColl(child, _md.imageRef, this.nodes);
        }
        if (name === 'page-size') {
            return this.wzLoadToChildColl(child, _md.pageSize, this.nodes);
        }
        if (name === 'subscript') {
            return this.wzLoadToChildColl(child, _md.subScript, this.nodes);
        }
        else if (name === 'smallcaps') {
            return this.wzLoadToChildColl(child, _md.smallCaps, this.nodes);
        }
        else if (name === 'smallcaps') {
            return this.wzLoadToChildColl(child, _md.smallCaps, this.nodes);
        }
        else if (name === 'style-def') {
            return this.wzLoadToChildColl(child, _md.styleDef, this.nodes);
        }
        if (name === 'underline') {
            return this.wzLoadToChildColl(child, _md.underlineProp, this.nodes);
        }
        if (name === 'background') {
            return this.wzLoadToChildColl(child, _md.background, this.nodes);
        }
        if (name === 'column-gap') {
            return this.wzLoadToChildColl(child, _md.columnGap, this.nodes);
        }
        if (name === 'decoration') {
            return this.wzLoadToChildColl(child, _md.decoration, this.nodes);
        }
        if (name === 'headerrows') {
            return this.wzLoadToChildColl(child, _md.headerRows, this.nodes);
        }
        if (name === 'lineheight') {
            return this.wzLoadToChildColl(child, _md.lineHeight, this.nodes);
        }
        if (name === 'header-rows') {
            return this.wzLoadToChildColl(child, _md.headerRows, this.nodes);
        }
        if (name === 'line-height') {
            return this.wzLoadToChildColl(child, _md.lineHeight, this.nodes);
        }
        if (name === 'markercolor') {
            return this.wzLoadToChildColl(child, _md.markerColor, this.nodes);
        }
        if (name === 'pagemargins') {
            return this.wzLoadToChildColl(child, _md.pageMargins, this.nodes);
        }
        if (name === 'superscript') {
            return this.wzLoadToChildColl(child, _md.superScript, this.nodes);
        }
        if (name === 'doublestrike') {
            return this.wzLoadToChildColl(child, _md.doubleStrike, this.nodes);
        }
        if (name === 'emphasismark') {
            return this.wzLoadToChildColl(child, _md.emphasisMark, this.nodes);
        }
        if (name === 'fontfeatures') {
            return this.wzLoadToChildColl(child, _md.fontFeatures, this.nodes);
        }
        if (name === 'marker-color') {
            return this.wzLoadToChildColl(child, _md.markerColor, this.nodes);
        }
        if (name === 'page-margins') {
            return this.wzLoadToChildColl(child, _md.pageMargins, this.nodes);
        }
        if (name === 'font-features') {
            return this.wzLoadToChildColl(child, _md.fontFeatures, this.nodes);
        }
        if (name === 'defaultstyledef') {
            return this.wzLoadToChildColl(child, _md.defaultStyleDef, this.nodes);
        }
        else if (name === 'decorationstyle') {
            return this.wzLoadToChildColl(child, _md.decorationStyle, this.nodes);
        }
        if (name === 'paragraphstyles') {
            return this.wzLoadToChildColl(child, _md.paragraphStyles, this.nodes);
        }
        else if (name === 'pageorientation') {
            return this.wzLoadToChildColl(child, _md.pageOrientation, this.nodes);
        }
        if (name === 'characterspacing') {
            return this.wzLoadToChildColl(child, _md.characterSpacing, this.nodes);
        }
        if (name === 'decoration-style') {
            return this.wzLoadToChildColl(child, _md.decorationStyle, this.nodes);
        }
        if (name === 'paragraph-styles') {
            return this.wzLoadToChildColl(child, _md.paragraphStyles, this.nodes);
        }
        else if (name === 'page-orientation') {
            return this.wzLoadToChildColl(child, _md.pageOrientation, this.nodes);
        }
        if (name === 'character-spacing') {
            return this.wzLoadToChildColl(child, _md.characterSpacing, this.nodes);
        }
        if (name === 'default-style-def') {
            return this.wzLoadToChildColl(child, _md.defaultStyleDef, this.nodes);
        }
        return false;
    }
    node.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
            var loaded = this.loadChild(item);
            if (!loaded) {
                item.v = item.n + ' ' + item.v;
                item.n = 'text';
                loaded = this.loadChild(item);
                if (!loaded) {
                    throw new _md.pdfModelException("Tag not recognized: " + item.n, item, this);
                }
            }
        });
    }
    node.prototype.wzVerify = function(ctx) {
        this.nodes.forEach((item) => {
            item.wzVerify(ctx);
        });
        _md.pdfBase.prototype.wzVerify.call(this, ctx);
    }
    node.prototype.wzInitialize = function(ctx) {
        this.nodes.forEach((item) => {
            item.wzInitialize(ctx);
        });
        _md.pdfBase.prototype.wzInitialize.call(this, ctx);
    }
    return node;
})(pdfBase);

_md.node = node;
// element pdf
var pdf = (function (node) {
    _inherits(pdf, node);
    function pdf(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(pdf.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pdf);
        this.wzElement = "pdf";
    }
    return pdf;
})(node);

_md.pdf = pdf;
// element xname
var xname = (function (node) {
    _inherits(xname, node);
    function xname(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xname.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xname);
        this.wzElement = "xname";
    }
    return xname;
})(node);

_md.xname = xname;
// element section
var section = (function (node) {
    _inherits(section, node);
    function section(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(section.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, section);
        this.wzElement = "section";
    }
    return section;
})(node);

_md.section = section;
// element h1
var h1 = (function (node) {
    _inherits(h1, node);
    function h1(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(h1.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h1);
        this.wzElement = "h1";
    }
    return h1;
})(node);

_md.h1 = h1;
// element h2
var h2 = (function (node) {
    _inherits(h2, node);
    function h2(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(h2.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h2);
        this.wzElement = "h2";
    }
    return h2;
})(node);

_md.h2 = h2;
// element text
var text = (function (node) {
    _inherits(text, node);
    function text(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(text.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, text);
        this.wzElement = "text";
    }
    return text;
})(node);

_md.text = text;
// element emphasisMark
var emphasisMark = (function (node) {
    _inherits(emphasisMark, node);
    function emphasisMark(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(emphasisMark.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, emphasisMark);
        this.wzElement = "emphasisMark";
    }
    return emphasisMark;
})(node);

_md.emphasisMark = emphasisMark;
// element strike
var strike = (function (node) {
    _inherits(strike, node);
    function strike(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(strike.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, strike);
        this.wzElement = "strike";
    }
    return strike;
})(node);

_md.strike = strike;
// element doubleStrike
var doubleStrike = (function (node) {
    _inherits(doubleStrike, node);
    function doubleStrike(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(doubleStrike.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, doubleStrike);
        this.wzElement = "doubleStrike";
    }
    return doubleStrike;
})(node);

_md.doubleStrike = doubleStrike;
// element superScript
var superScript = (function (node) {
    _inherits(superScript, node);
    function superScript(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(superScript.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, superScript);
        this.wzElement = "superScript";
    }
    return superScript;
})(node);

_md.superScript = superScript;
// element subScript
var subScript = (function (node) {
    _inherits(subScript, node);
    function subScript(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(subScript.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, subScript);
        this.wzElement = "subScript";
    }
    return subScript;
})(node);

_md.subScript = subScript;
// element smallCaps
var smallCaps = (function (node) {
    _inherits(smallCaps, node);
    function smallCaps(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(smallCaps.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, smallCaps);
        this.wzElement = "smallCaps";
    }
    return smallCaps;
})(node);

_md.smallCaps = smallCaps;
// element allCaps
var allCaps = (function (node) {
    _inherits(allCaps, node);
    function allCaps(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(allCaps.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, allCaps);
        this.wzElement = "allCaps";
    }
    return allCaps;
})(node);

_md.allCaps = allCaps;
// element smallCaps
var smallCaps = (function (node) {
    _inherits(smallCaps, node);
    function smallCaps(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(smallCaps.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, smallCaps);
        this.wzElement = "smallCaps";
    }
    return smallCaps;
})(node);

_md.smallCaps = smallCaps;
// element font
var font = (function (node) {
    _inherits(font, node);
    function font(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(font.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, font);
        this.wzElement = "font";
    }
    return font;
})(node);

_md.font = font;
// element color
var color = (function (node) {
    _inherits(color, node);
    function color(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(color.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, color);
        this.wzElement = "color";
    }
    return color;
})(node);

_md.color = color;
// element fill
var fill = (function (node) {
    _inherits(fill, node);
    function fill(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(fill.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, fill);
        this.wzElement = "fill";
    }
    return fill;
})(node);

_md.fill = fill;
// element size
var size = (function (node) {
    _inherits(size, node);
    function size(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(size.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, size);
        this.wzElement = "size";
    }
    return size;
})(node);

_md.size = size;
// element width
var width = (function (node) {
    _inherits(width, node);
    function width(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(width.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, width);
        this.wzElement = "width";
    }
    return width;
})(node);

_md.width = width;
// element height
var height = (function (node) {
    _inherits(height, node);
    function height(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(height.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, height);
        this.wzElement = "height";
    }
    return height;
})(node);

_md.height = height;
// element shading
var shading = (function (node) {
    _inherits(shading, node);
    function shading(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(shading.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, shading);
        this.wzElement = "shading";
    }
    return shading;
})(node);

_md.shading = shading;
// element highlight
var highlight = (function (node) {
    _inherits(highlight, node);
    function highlight(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(highlight.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, highlight);
        this.wzElement = "highlight";
    }
    return highlight;
})(node);

_md.highlight = highlight;
// element xtype
var xtype = (function (node) {
    _inherits(xtype, node);
    function xtype(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xtype.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xtype);
        this.wzElement = "xtype";
    }
    return xtype;
})(node);

_md.xtype = xtype;
// element center
var center = (function (node) {
    _inherits(center, node);
    function center(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(center.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, center);
        this.wzElement = "center";
    }
    return center;
})(node);

_md.center = center;
// element bullet_0
var bullet_0 = (function (node) {
    _inherits(bullet_0, node);
    function bullet_0(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(bullet_0.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, bullet_0);
        this.wzElement = "bullet_0";
    }
    return bullet_0;
})(node);

_md.bullet_0 = bullet_0;
// element tabStop
var tabStop = (function (node) {
    _inherits(tabStop, node);
    function tabStop(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(tabStop.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tabStop);
        this.wzElement = "tabStop";
    }
    return tabStop;
})(node);

_md.tabStop = tabStop;
// element position
var position = (function (node) {
    _inherits(position, node);
    function position(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(position.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, position);
        this.wzElement = "position";
    }
    return position;
})(node);

_md.position = position;
// element basedOn
var basedOn = (function (node) {
    _inherits(basedOn, node);
    function basedOn(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(basedOn.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, basedOn);
        this.wzElement = "basedOn";
    }
    return basedOn;
})(node);

_md.basedOn = basedOn;
// element next
var next = (function (node) {
    _inherits(next, node);
    function next(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(next.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, next);
        this.wzElement = "next";
    }
    return next;
})(node);

_md.next = next;
// element paragraphStyles
var paragraphStyles = (function (node) {
    _inherits(paragraphStyles, node);
    function paragraphStyles(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(paragraphStyles.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, paragraphStyles);
        this.wzElement = "paragraphStyles";
    }
    return paragraphStyles;
})(node);

_md.paragraphStyles = paragraphStyles;
// element run
var run = (function (node) {
    _inherits(run, node);
    function run(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(run.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, run);
        this.wzElement = "run";
    }
    return run;
})(node);

_md.run = run;
// element defaultStyleDef
var defaultStyleDef = (function (node) {
    _inherits(defaultStyleDef, node);
    function defaultStyleDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(defaultStyleDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, defaultStyleDef);
        this.wzElement = "defaultStyleDef";
    }
    return defaultStyleDef;
})(node);

_md.defaultStyleDef = defaultStyleDef;
// element styleDef
var styleDef = (function (node) {
    _inherits(styleDef, node);
    function styleDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(styleDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, styleDef);
        this.wzElement = "styleDef";
    }
    return styleDef;
})(node);

_md.styleDef = styleDef;
// element styles
var styles = (function (node) {
    _inherits(styles, node);
    function styles(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(styles.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, styles);
        this.wzElement = "styles";
    }
    return styles;
})(node);

_md.styles = styles;
// element style
var style = (function (node) {
    _inherits(style, node);
    function style(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(style.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, style);
        this.wzElement = "style";
    }
    return style;
})(node);

_md.style = style;
/**
    element pageSize
     '4A0', '2A0', 'A0', 'A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 'A9', 'A10',
     'B0', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B8', 'B9', 'B10',
     'C0', 'C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10',
     'RA0', 'RA1', 'RA2', 'RA3', 'RA4',
     'SRA0', 'SRA1', 'SRA2', 'SRA3', 'SRA4',
     'EXECUTIVE', 'FOLIO', 'LEGAL', 'LETTER', 'TABLOID'
*/
var pageSize = (function (node) {
    _inherits(pageSize, node);
    function pageSize(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(pageSize.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pageSize);
        this.wzElement = "pageSize";
    }
    return pageSize;
})(node);

_md.pageSize = pageSize;
/**
    element pageOrientation
     portrait, landscape
*/
var pageOrientation = (function (node) {
    _inherits(pageOrientation, node);
    function pageOrientation(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(pageOrientation.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pageOrientation);
        this.wzElement = "pageOrientation";
    }
    return pageOrientation;
})(node);

_md.pageOrientation = pageOrientation;
/**
    element pageMargins
     [left, top, right, bottom] or [horizontal, vertical] or just a number for equal margins
*/
var pageMargins = (function (node) {
    _inherits(pageMargins, node);
    function pageMargins(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(pageMargins.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pageMargins);
        this.wzElement = "pageMargins";
    }
    pageMargins.prototype.wzInitialize = function(ctx) {
        var ss = this.wzName.split(/[\s,]+/);
        this.wzName = ss.join(',');
        _md.node.prototype.wzInitialize.call(this, ctx);
    }
    return pageMargins;
})(node);

_md.pageMargins = pageMargins;
// element margin
var margin = (function (node) {
    _inherits(margin, node);
    function margin(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(margin.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, margin);
        this.wzElement = "margin";
    }
    margin.prototype.wzInitialize = function(ctx) {
        var ss = this.wzName.split(/[\s,]+/);
        if (ss.length == 1) {
            this.wzName = ss[0] + ',' + ss[0] + ',' + ss[0] + ',' + ss[0];
        }
        else if (ss.length == 2) {
            this.wzName = ss[0] + ',' + ss[1] + ',' + ss[0] + ',' + ss[1];
        }
        else if (ss.length == 3) {
            this.wzName = ss[0] + ',' + ss[1] + ',' + ss[2] + ',0';
        }
        else {
            this.wzName = ss[0] + ',' + ss[1] + ',' + ss[2] + ',' + ss[3];
        }
        console.log('margin', this.wzName);
        _md.node.prototype.wzInitialize.call(this, ctx);
    }
    return margin;
})(node);

_md.margin = margin;
// element table
var table = (function (node) {
    _inherits(table, node);
    function table(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(table.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, table);
        this.wzElement = "table";
    }
    return table;
})(node);

_md.table = table;
// element tr
var tr = (function (node) {
    _inherits(tr, node);
    function tr(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(tr.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tr);
        this.wzElement = "tr";
    }
    return tr;
})(node);

_md.tr = tr;
// element td
var td = (function (node) {
    _inherits(td, node);
    function td(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(td.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, td);
        this.wzElement = "td";
    }
    return td;
})(node);

_md.td = td;
// element headerRows
var headerRows = (function (node) {
    _inherits(headerRows, node);
    function headerRows(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(headerRows.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, headerRows);
        this.wzElement = "headerRows";
    }
    return headerRows;
})(node);

_md.headerRows = headerRows;
// element widths
var widths = (function (node) {
    _inherits(widths, node);
    function widths(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(widths.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, widths);
        this.wzElement = "widths";
    }
    widths.prototype.wzInitialize = function(ctx) {
        var ss = this.wzName.split(/[\s,]+/);
        this.wzName = ss.join(',');
        _md.node.prototype.wzInitialize.call(this, ctx);
    }
    return widths;
})(node);

_md.widths = widths;
/**
    element layout
     noBorders
     headerLineOnly
     lightHorizontalLines
*/
var layout = (function (node) {
    _inherits(layout, node);
    function layout(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(layout.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, layout);
        this.wzElement = "layout";
    }
    return layout;
})(node);

_md.layout = layout;
// element columns
var columns = (function (node) {
    _inherits(columns, node);
    function columns(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(columns.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, columns);
        this.wzElement = "columns";
    }
    return columns;
})(node);

_md.columns = columns;
// element columnGap
var columnGap = (function (node) {
    _inherits(columnGap, node);
    function columnGap(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(columnGap.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, columnGap);
        this.wzElement = "columnGap";
    }
    return columnGap;
})(node);

_md.columnGap = columnGap;
/**
    element p
     subitems are "+/text" nodes
*/
var p = (function (node) {
    _inherits(p, node);
    function p(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(p.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, p);
        this.wzElement = "p";
    }
    return p;
})(node);

_md.p = p;
/**
    element stack
     subitems are "p" nodes
*/
var stack = (function (node) {
    _inherits(stack, node);
    function stack(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(stack.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, stack);
        this.wzElement = "stack";
    }
    return stack;
})(node);

_md.stack = stack;
// element xbreak
var xbreak = (function (node) {
    _inherits(xbreak, node);
    function xbreak(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xbreak.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xbreak);
        this.wzElement = "xbreak";
    }
    return xbreak;
})(node);

_md.xbreak = xbreak;
/**
    element font
     string: name of the font
*/
var font = (function (node) {
    _inherits(font, node);
    function font(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(font.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, font);
        this.wzElement = "font";
    }
    return font;
})(node);

_md.font = font;
/**
    element fontSize
     number: size of the font in pt
*/
var fontSize = (function (node) {
    _inherits(fontSize, node);
    function fontSize(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(fontSize.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, fontSize);
        this.wzElement = "fontSize";
    }
    return fontSize;
})(node);

_md.fontSize = fontSize;
/**
    element fontFeatures
     string[]: array of advanced typographic features supported in TTF fonts (supported features depend on font file)
*/
var fontFeatures = (function (node) {
    _inherits(fontFeatures, node);
    function fontFeatures(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(fontFeatures.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, fontFeatures);
        this.wzElement = "fontFeatures";
    }
    return fontFeatures;
})(node);

_md.fontFeatures = fontFeatures;
/**
    element lineHeight
     number: the line height (default: 1)
*/
var lineHeight = (function (node) {
    _inherits(lineHeight, node);
    function lineHeight(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(lineHeight.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, lineHeight);
        this.wzElement = "lineHeight";
    }
    return lineHeight;
})(node);

_md.lineHeight = lineHeight;
// element bold
var bold = (function (node) {
    _inherits(bold, node);
    function bold(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(bold.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, bold);
        this.wzElement = "bold";
    }
    return bold;
})(node);

_md.bold = bold;
// element boldProp
var boldProp = (function (node) {
    _inherits(boldProp, node);
    function boldProp(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(boldProp.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, boldProp);
        this.wzElement = "boldProp";
    }
    return boldProp;
})(node);

_md.boldProp = boldProp;
// element italics
var italics = (function (node) {
    _inherits(italics, node);
    function italics(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(italics.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, italics);
        this.wzElement = "italics";
    }
    return italics;
})(node);

_md.italics = italics;
// element italicsProp
var italicsProp = (function (node) {
    _inherits(italicsProp, node);
    function italicsProp(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(italicsProp.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, italicsProp);
        this.wzElement = "italicsProp";
    }
    return italicsProp;
})(node);

_md.italicsProp = italicsProp;
// element underline
var underline = (function (node) {
    _inherits(underline, node);
    function underline(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(underline.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, underline);
        this.wzElement = "underline";
    }
    return underline;
})(node);

_md.underline = underline;
// element underlineProp
var underlineProp = (function (node) {
    _inherits(underlineProp, node);
    function underlineProp(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(underlineProp.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, underlineProp);
        this.wzElement = "underlineProp";
    }
    return underlineProp;
})(node);

_md.underlineProp = underlineProp;
/**
    element alignment
     string: (‘left’ or ‘center’ or ‘right’) the alignment of the text
*/
var alignment = (function (node) {
    _inherits(alignment, node);
    function alignment(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(alignment.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, alignment);
        this.wzElement = "alignment";
    }
    return alignment;
})(node);

_md.alignment = alignment;
/**
    element characterSpacing
     number: size of the letter spacing in pt
*/
var characterSpacing = (function (node) {
    _inherits(characterSpacing, node);
    function characterSpacing(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(characterSpacing.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, characterSpacing);
        this.wzElement = "characterSpacing";
    }
    return characterSpacing;
})(node);

_md.characterSpacing = characterSpacing;
/**
    element color
     string: the color of the text (color name e.g., ‘blue’ or hexadecimal color e.g., ‘#ff5500’)
*/
var color = (function (node) {
    _inherits(color, node);
    function color(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(color.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, color);
        this.wzElement = "color";
    }
    return color;
})(node);

_md.color = color;
/**
    element background
     string the background color of the text
*/
var background = (function (node) {
    _inherits(background, node);
    function background(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(background.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, background);
        this.wzElement = "background";
    }
    return background;
})(node);

_md.background = background;
/**
    element markerColor
     string: the color of the bullets in a buletted list
*/
var markerColor = (function (node) {
    _inherits(markerColor, node);
    function markerColor(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(markerColor.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, markerColor);
        this.wzElement = "markerColor";
    }
    return markerColor;
})(node);

_md.markerColor = markerColor;
/**
    element decoration
     string: the text decoration to apply (‘underline’ or ‘lineThrough’ or ‘overline’)
*/
var decoration = (function (node) {
    _inherits(decoration, node);
    function decoration(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(decoration.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, decoration);
        this.wzElement = "decoration";
    }
    return decoration;
})(node);

_md.decoration = decoration;
/**
    element decorationStyle
     string: the style of the text decoration (‘dashed’ or ‘dotted’ or ‘double’ or ‘wavy’)
*/
var decorationStyle = (function (node) {
    _inherits(decorationStyle, node);
    function decorationStyle(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(decorationStyle.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, decorationStyle);
        this.wzElement = "decorationStyle";
    }
    return decorationStyle;
})(node);

_md.decorationStyle = decorationStyle;
// element noWrap
var noWrap = (function (node) {
    _inherits(noWrap, node);
    function noWrap(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(noWrap.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, noWrap);
        this.wzElement = "noWrap";
    }
    return noWrap;
})(node);

_md.noWrap = noWrap;
// element image
var image = (function (node) {
    _inherits(image, node);
    function image(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(image.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, image);
        this.wzElement = "image";
    }
    return image;
})(node);

_md.image = image;
// element imageDef
var imageDef = (function (node) {
    _inherits(imageDef, node);
    function imageDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(imageDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, imageDef);
        this.wzElement = "imageDef";
    }
    imageDef.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'src') {
            this.src = child.v; return true;
        }
        if (name === 'title') {
            this.title = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    imageDef.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
            var loaded = this.loadChild(item);
            if (!loaded) {
                item.v = item.n + ' ' + item.v;
                item.n = 'text';
                loaded = this.loadChild(item);
                if (!loaded) {
                    throw new _md.pdfModelException("Tag not recognized: " + item.n, item, this);
                }
            }
        });
    }
    return imageDef;
})(node);

_md.imageDef = imageDef;
// element imageRef
var imageRef = (function (node) {
    _inherits(imageRef, node);
    function imageRef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(imageRef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, imageRef);
        this.wzElement = "imageRef";
    }
    return imageRef;
})(node);

_md.imageRef = imageRef;
// element ul
var ul = (function (node) {
    _inherits(ul, node);
    function ul(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(ul.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ul);
        this.wzElement = "ul";
    }
    return ul;
})(node);

_md.ul = ul;
// element ol
var ol = (function (node) {
    _inherits(ol, node);
    function ol(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(ol.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ol);
        this.wzElement = "ol";
    }
    return ol;
})(node);

_md.ol = ol;
_md.__tagElementMapping = { 'name': 'xname', '+': 'text', 'type': 'xtype', 'paragraph-styles': 'paragraphStyles', 'paragraphstyles': 'paragraphStyles', 'default-style-def': 'defaultStyleDef', 'defaultstyledef': 'defaultStyleDef', 'style-def': 'styleDef', 'styledef': 'styleDef', 'page-size': 'pageSize', 'pagesize': 'pageSize', 'page-orientation': 'pageOrientation', 'pageorientation': 'pageOrientation', 'page-margins': 'pageMargins', 'pagemargins': 'pageMargins', 'header-rows': 'headerRows', 'headerrows': 'headerRows', 'column-gap': 'columnGap', 'columngap': 'columnGap', 'br': 'xbreak', 'font-size': 'fontSize', 'fontsize': 'fontSize', 'font-features': 'fontFeatures', 'fontfeatures': 'fontFeatures', 'line-height': 'lineHeight', 'lineheight': 'lineHeight', 'b': 'bold', 'bold': 'boldProp', 'i': 'italics', 'italics': 'italicsProp', 'u': 'underline', 'underline': 'underlineProp', 'character-spacing': 'characterSpacing', 'characterspacing': 'characterSpacing', 'marker-color': 'markerColor', 'markercolor': 'markerColor', 'decoration-style': 'decorationStyle', 'decorationstyle': 'decorationStyle', 'no-wrap': 'noWrap', 'nowrap': 'noWrap', 'image-def': 'imageDef', 'imagedef': 'imageDef', 'image-ref': 'imageRef', 'imageref': 'imageRef' };
// model/replaceUnknownElement( )
var pdfModelException = (function () {
    function pdfModelException(message, node, instance) {
        _classCallCheck(this, pdfModelException);
        this.node = node;
        this.instance = instance;
        if (node && instance) {
            this.message = message + ', wzElement: ' + node.wzElement + ', wzName:' + (node.wzName || '') + ', row:' + node.r + ', col:' + node.c + ', source:' + instance.wzSourceFilepath(node.u);
            this.errorLines = instance.wzSourceErrorLines(node, message);
        }
        else if (instance) {
            this.message = message + instance.wzSourceLineInfo.toString(instance);
        }
        else {
            this.message = message;
        }
        console.log('message', this.message);
        this.stack = (new Error()).stack;
    }
    pdfModelException.prototype.toString = function() {
        var msg = [];
        msg.push(chalk.red('Error: ' + this.message));
        msg.push(chalk.red('  name: pdfModelException'));
        if (this.node) {
            msg.push(chalk.yellow('  row: ' + this.node.r + ', col: ' + this.node.c));
        }
        if (this.instance) {
            if (this.node) {
                msg.push(chalk.yellow('  uri: ' + this.instance.wzSourceFilepath(this.node.u)));
            }
            else {
                msg.push(chalk.yellow('  uri: ' + this.instance.wzSourceLineInfo.toString(this.instance)));
            }
        }
        else {
            msg.push(chalk.yellow('  uri: unknown'));
        }
        if (this.errorLines) {
            var i, i_items=this.errorLines, i_len=this.errorLines.length, line;
            for (i=0; i<i_len; i++) {
                line = this.errorLines[i];
                msg.push(chalk.yellow('  ' + line));
            }
        }
        return msg.join('\n');
    }
    return pdfModelException;
})();

_md.pdfModelException = pdfModelException;
var pdfContext = (function () {
    function pdfContext() {
        _classCallCheck(this, pdfContext);
        this.validationErrors = [];
    }
    pdfContext.prototype.schemaIsValid = function() {
        return this.validationErrors.length == 0;
    }
    pdfContext.prototype.addError = function(message, node) {
        var at = node ? ' At ' + node.wzSourceLineInfo.toString(node) : '';
        this.validationErrors.push(message + at);
    }
    return pdfContext;
})();

_md.pdfContext = pdfContext;
function parsestring(value, defaultValue, node) {
    if (isEmpty( value )) {
        return defaultValue;
    }
    return value;
}
function isString(value) {
    return (typeof value === 'string' || value instanceof String);
}
function isEmpty(value) {
    return !isString( value ) || value.length === 0;
}
function isBoolean(value) {
    return value === 'true' || value === 'false';
}

