/*
    artifact generator: C:\My\wizzi\stfnbssl\wizzi.plugins\packages\wizzi.plugin.wzschema\node_modules\wizzi-js\lib\artifacts\js\module\gen\main.js
    package: wizzi-js@0.7.13
    primary source IttfDocument: C:\My\wizzi\stfnbssl\wizzi.plugins\packages\wizzi.plugin.wzschema\lib\artifacts\wfschema\model\gen\ittf\wfschema-model.js.ittf
*/
'use strict';
// generated by v6-wizzi-js.artifacts.js.module.main
function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var util = require('util');
var path = require('path');
var _ = require('lodash');
var chalk = require('chalk');
var wzutils = require('wizzi-utils');
var verify = wzutils.verify;


var _md = module.exports = {};

var wzSourceLineInfo = (function () {
    function wzSourceLineInfo(row, col, sourceKey) {
        _classCallCheck(this, wzSourceLineInfo);
        this.row = row;
        this.col = col;
        this.sourceKey = sourceKey;
    }
    wzSourceLineInfo.prototype.toString = function(instance) {
        if (instance) {
            return 'row: ' + this.row + ', col: ' + this.col + ', file: ' + instance.wzSourceFilepath(this.sourceKey);
        }
        else {
            return 'row: ' + this.row + ', col: ' + this.col + ', sourceKey: ' + this.sourceKey;
        }
    }
    return wzSourceLineInfo;
})();

_md.wzSourceLineInfo = wzSourceLineInfo;
var docxBase = (function () {
    function docxBase(name, sourceLineInfo) {
        _classCallCheck(this, docxBase);
        this.wzName = name || '';
        this.wzParent = null;
        this.wzSourceLineInfo = sourceLineInfo;
        this.wzChildren = [];
    }
    docxBase.prototype.wzRoot = function() {
        return this.wzParent == null ? this : this.wzParent.wzRoot();
    }
    docxBase.prototype.wzSourceFilepath = function(sourceKey) {
        var sk = sourceKey || this.wzSourceLineInfo.sourceKey;
        return this.wzRoot().loadHistory.getIttfDocumentUri(sk);
    }
    docxBase.prototype.wzSourceErrorLines = function(node, message) {
        return this.wzRoot().loadHistory.getIttfDocumentErrorLines(node.u, {
                row: node.r, 
                col: node.c, 
                description: message
             }, true);
    }
    docxBase.prototype.wzVerify = function() {
    }
    docxBase.prototype.wzInitialize = function() {
    }
    docxBase.prototype.wzInitializeAsync = function(ctx, callback) {
        callback(null);
    }
    docxBase.prototype.wzAddChild = function(node) {
        node.wzParent = this;
        this.wzChildren.push(node);
    }
    docxBase.prototype.wzAddChildToColl = function(node, coll) {
        node.wzParent = this;
        node.wzMoved = true;
        coll.push(node);
    }
    docxBase.prototype.wzMoveChildToColl = function(node, coll, fromColl) {
        var index = fromColl.indexOf(node);
        if (index < 0) {
            this.error('wzMoveChildToColl error. The from collection does not contain the node.', node)
        }
        fromColl.splice(index, 1);
        this.wzAddChildToColl(node, coll);
    }
    docxBase.prototype.wzLoadToChildColl = function(child, type, coll) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        if (child.wzMTreeData) {
            item.wzMTreeData = child.wzMTreeData;
        }
        item.wzParent = this;
        coll.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    docxBase.prototype.wzCreateChildColl = function(tag, name, type, coll) {
        var item = new type(name, this.wzSourceLineInfo);
        item.wzTag = tag;
        item.wzParent = this;
        item.wzCreated = true;
        coll.push(item);
        return item;
    }
    docxBase.prototype.wzLoadToChildren = function(child, type) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        if (child.wzMTreeData) {
            item.wzMTreeData = child.wzMTreeData;
        }
        this.wzChildren.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    docxBase.prototype.wzLoadOneToOne = function(child, type, fieldName) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        if (child.wzMTreeData) {
            item.wzMTreeData = child.wzMTreeData;
        }
        item.wzParent = this;
        this[fieldName] = item;
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    docxBase.prototype.wzRemove = function(fromColl) {
        var index = fromColl.indexOf(this);
        if (index < 0) {
            this.error('wzRemove error. The from collection does not contain the node.', this)
        }
        fromColl.splice(index, 1);
    }
    docxBase.prototype.error = function(message, node) {
        throw new _md.docxModelException(message, node, this);
    }
    return docxBase;
})();

_md.docxBase = docxBase;

// element node
var node = (function (docxBase) {
    _inherits(node, docxBase);
    function node(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(node.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, node);
        this.wzElement = "node";
        // relation node
        this.nodes = [];
    }
    node.prototype.addNode = function(name, sourceLineInfo) {
        var retval = new _md.node(name, sourceLineInfo);
        retval.wzParent = this;
        this.nodes.push(retval);
        return retval;
    }
    node.prototype.getNode = function(name) {
        var found = null;
        this.nodes.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        })
        return found;
    }
    node.prototype.loadChild = function(child) {
        var name = child.n.toLowerCase();
        if (name === '+') {
            return this.wzLoadToChildColl(child, _md.text, this.nodes);
        }
        if (name === '@') {
            return this.wzLoadToChildColl(child, _md.valueText, this.nodes);
        }
        if (name === 'a') {
            return this.wzLoadToChildColl(child, _md.hyperlink, this.nodes);
        }
        if (name === 'b') {
            return this.wzLoadToChildColl(child, _md.bold, this.nodes);
        }
        if (name === 'i') {
            return this.wzLoadToChildColl(child, _md.italics, this.nodes);
        }
        if (name === 'p') {
            return this.wzLoadToChildColl(child, _md.paragraph, this.nodes);
        }
        if (name === 'a#') {
            return this.wzLoadToChildColl(child, _md.internalHyperlink, this.nodes);
        }
        if (name === 'br') {
            return this.wzLoadToChildColl(child, _md.xbreak, this.nodes);
        }
        if (name === 'h1') {
            return this.wzLoadToChildColl(child, _md.h1, this.nodes);
        }
        else if (name === 'h2') {
            return this.wzLoadToChildColl(child, _md.h2, this.nodes);
        }
        else if (name === 'h3') {
            return this.wzLoadToChildColl(child, _md.h3, this.nodes);
        }
        else if (name === 'h4') {
            return this.wzLoadToChildColl(child, _md.h4, this.nodes);
        }
        else if (name === 'h5') {
            return this.wzLoadToChildColl(child, _md.h5, this.nodes);
        }
        else if (name === 'h6') {
            return this.wzLoadToChildColl(child, _md.h6, this.nodes);
        }
        if (name === 'li') {
            return this.wzLoadToChildColl(child, _md.li, this.nodes);
        }
        if (name === 'ol') {
            return this.wzLoadToChildColl(child, _md.ol, this.nodes);
        }
        if (name === 'tr') {
            return this.wzLoadToChildColl(child, _md.tr, this.nodes);
        }
        else if (name === 'td') {
            return this.wzLoadToChildColl(child, _md.td, this.nodes);
        }
        if (name === 'ul') {
            return this.wzLoadToChildColl(child, _md.ul, this.nodes);
        }
        if (name === 'run') {
            return this.wzLoadToChildColl(child, _md.run, this.nodes);
        }
        if (name === 'top') {
            return this.wzLoadToChildColl(child, _md.top, this.nodes);
        }
        if (name === 'bold') {
            return this.wzLoadToChildColl(child, _md.boldProp, this.nodes);
        }
        if (name === 'docx') {
            return this.wzLoadToChildColl(child, _md.docx, this.nodes);
        }
        if (name === 'font') {
            return this.wzLoadToChildColl(child, _md.font, this.nodes);
        }
        else if (name === 'fill') {
            return this.wzLoadToChildColl(child, _md.fill, this.nodes);
        }
        if (name === 'line') {
            return this.wzLoadToChildColl(child, _md.line, this.nodes);
        }
        else if (name === 'link') {
            return this.wzLoadToChildColl(child, _md.link, this.nodes);
        }
        else if (name === 'left') {
            return this.wzLoadToChildColl(child, _md.left, this.nodes);
        }
        if (name === 'node') {
            return this.wzLoadToChildColl(child, _md.node, this.nodes);
        }
        else if (name === 'name') {
            return this.wzLoadToChildColl(child, _md.xname, this.nodes);
        }
        else if (name === 'next') {
            return this.wzLoadToChildColl(child, _md.next, this.nodes);
        }
        if (name === 'page') {
            return this.wzLoadToChildColl(child, _md.page, this.nodes);
        }
        if (name === 'size') {
            return this.wzLoadToChildColl(child, _md.size, this.nodes);
        }
        if (name === 'type') {
            return this.wzLoadToChildColl(child, _md.xtype, this.nodes);
        }
        else if (name === 'text') {
            return this.wzLoadToChildColl(child, _md.linkText, this.nodes);
        }
        if (name === 'wrap') {
            return this.wzLoadToChildColl(child, _md.wrap, this.nodes);
        }
        if (name === 'after') {
            return this.wzLoadToChildColl(child, _md.after, this.nodes);
        }
        else if (name === 'align') {
            return this.wzLoadToChildColl(child, _md.align, this.nodes);
        }
        if (name === 'color') {
            return this.wzLoadToChildColl(child, _md.color, this.nodes);
        }
        if (name === 'level') {
            return this.wzLoadToChildColl(child, _md.level, this.nodes);
        }
        if (name === 'right') {
            return this.wzLoadToChildColl(child, _md.right, this.nodes);
        }
        if (name === 'scale') {
            return this.wzLoadToChildColl(child, _md.scale, this.nodes);
        }
        else if (name === 'space') {
            return this.wzLoadToChildColl(child, _md.space, this.nodes);
        }
        else if (name === 'style') {
            return this.wzLoadToChildColl(child, _md.style, this.nodes);
        }
        else if (name === 'start') {
            return this.wzLoadToChildColl(child, _md.start, this.nodes);
        }
        if (name === 'table') {
            return this.wzLoadToChildColl(child, _md.table, this.nodes);
        }
        if (name === 'value') {
            return this.wzLoadToChildColl(child, _md.value, this.nodes);
        }
        if (name === 'width') {
            return this.wzLoadToChildColl(child, _md.width, this.nodes);
        }
        else if (name === 'widow') {
            return this.wzLoadToChildColl(child, _md.widow, this.nodes);
        }
        if (name === 'bullet') {
            return this.wzLoadToChildColl(child, _md.bullet, this.nodes);
        }
        else if (name === 'before') {
            return this.wzLoadToChildColl(child, _md.before, this.nodes);
        }
        else if (name === 'border') {
            return this.wzLoadToChildColl(child, _md.border, this.nodes);
        }
        else if (name === 'bottom') {
            return this.wzLoadToChildColl(child, _md.bottom, this.nodes);
        }
        if (name === 'center') {
            return this.wzLoadToChildColl(child, _md.center, this.nodes);
        }
        else if (name === 'config') {
            return this.wzLoadToChildColl(child, _md.config, this.nodes);
        }
        else if (name === 'column') {
            return this.wzLoadToChildColl(child, _md.column, this.nodes);
        }
        if (name === 'footer') {
            return this.wzLoadToChildColl(child, _md.footer, this.nodes);
        }
        if (name === 'height') {
            return this.wzLoadToChildColl(child, _md.height, this.nodes);
        }
        else if (name === 'header') {
            return this.wzLoadToChildColl(child, _md.header, this.nodes);
        }
        else if (name === 'htitle') {
            return this.wzLoadToChildColl(child, _md.htitle, this.nodes);
        }
        if (name === 'indent') {
            return this.wzLoadToChildColl(child, _md.indent, this.nodes);
        }
        if (name === 'margin') {
            return this.wzLoadToChildColl(child, _md.margin, this.nodes);
        }
        if (name === 'postab') {
            return this.wzLoadToChildColl(child, _md.positionalTab, this.nodes);
        }
        if (name === 'strike') {
            return this.wzLoadToChildColl(child, _md.strike, this.nodes);
        }
        else if (name === 'symbol') {
            return this.wzLoadToChildColl(child, _md.symbol, this.nodes);
        }
        if (name === 'valign') {
            return this.wzLoadToChildColl(child, _md.valign, this.nodes);
        }
        else if (name === 'vanish') {
            return this.wzLoadToChildColl(child, _md.vanish, this.nodes);
        }
        if (name === 'allcaps') {
            return this.wzLoadToChildColl(child, _md.allCaps, this.nodes);
        }
        if (name === 'basedon') {
            return this.wzLoadToChildColl(child, _md.basedOn, this.nodes);
        }
        else if (name === 'borders') {
            return this.wzLoadToChildColl(child, _md.borders, this.nodes);
        }
        if (name === 'default') {
            return this.wzLoadToChildColl(child, _md.xdefault, this.nodes);
        }
        if (name === 'italics') {
            return this.wzLoadToChildColl(child, _md.italicsProp, this.nodes);
        }
        if (name === 'literal') {
            return this.wzLoadToChildColl(child, _md.literal, this.nodes);
        }
        if (name === 'margins') {
            return this.wzLoadToChildColl(child, _md.margins, this.nodes);
        }
        if (name === 'outline') {
            return this.wzLoadToChildColl(child, _md.outline, this.nodes);
        }
        if (name === 'pageref') {
            return this.wzLoadToChildColl(child, _md.pageReference, this.nodes);
        }
        else if (name === 'pos-tab') {
            return this.wzLoadToChildColl(child, _md.positionalTab, this.nodes);
        }
        if (name === 'shading') {
            return this.wzLoadToChildColl(child, _md.shading, this.nodes);
        }
        else if (name === 'spacing') {
            return this.wzLoadToChildColl(child, _md.spacing, this.nodes);
        }
        else if (name === 'section') {
            return this.wzLoadToChildColl(child, _md.section, this.nodes);
        }
        if (name === 'tabstop') {
            return this.wzLoadToChildColl(child, _md.tabStop, this.nodes);
        }
        if (name === 'all-caps') {
            return this.wzLoadToChildColl(child, _md.allCaps, this.nodes);
        }
        if (name === 'bookmark') {
            return this.wzLoadToChildColl(child, _md.bookmark, this.nodes);
        }
        if (name === 'floating') {
            return this.wzLoadToChildColl(child, _md.floating, this.nodes);
        }
        else if (name === 'footnote') {
            return this.wzLoadToChildColl(child, _md.footnoteDef, this.nodes);
        }
        if (name === 'imagedef') {
            return this.wzLoadToChildColl(child, _md.imageDef, this.nodes);
        }
        else if (name === 'imageref') {
            return this.wzLoadToChildColl(child, _md.imageRef, this.nodes);
        }
        if (name === 'keepnext') {
            return this.wzLoadToChildColl(child, _md.keepNext, this.nodes);
        }
        if (name === 'linerule') {
            return this.wzLoadToChildColl(child, _md.lineRule, this.nodes);
        }
        if (name === 'position') {
            return this.wzLoadToChildColl(child, _md.position, this.nodes);
        }
        else if (name === 'page-ref') {
            return this.wzLoadToChildColl(child, _md.pageReference, this.nodes);
        }
        if (name === 'styledef') {
            return this.wzLoadToChildColl(child, _md.styleDef, this.nodes);
        }
        if (name === 'tabstops') {
            return this.wzLoadToChildColl(child, _md.tabStops, this.nodes);
        }
        if (name === 'highlight') {
            return this.wzLoadToChildColl(child, _md.highlight, this.nodes);
        }
        if (name === 'image-def') {
            return this.wzLoadToChildColl(child, _md.imageDef, this.nodes);
        }
        else if (name === 'image-ref') {
            return this.wzLoadToChildColl(child, _md.imageRef, this.nodes);
        }
        if (name === 'keeplines') {
            return this.wzLoadToChildColl(child, _md.keepLines, this.nodes);
        }
        else if (name === 'keep-next') {
            return this.wzLoadToChildColl(child, _md.keepNext, this.nodes);
        }
        if (name === 'line-rule') {
            return this.wzLoadToChildColl(child, _md.lineRule, this.nodes);
        }
        if (name === 'numbering') {
            return this.wzLoadToChildColl(child, _md.numbering, this.nodes);
        }
        if (name === 'paragraph') {
            return this.wzLoadToChildColl(child, _md.paragraphDef, this.nodes);
        }
        else if (name === 'pagebreak') {
            return this.wzLoadToChildColl(child, _md.pageBreak, this.nodes);
        }
        if (name === 'stylesdef') {
            return this.wzLoadToChildColl(child, _md.stylesDef, this.nodes);
        }
        else if (name === 'style-def') {
            return this.wzLoadToChildColl(child, _md.styleDef, this.nodes);
        }
        else if (name === 'subscript') {
            return this.wzLoadToChildColl(child, _md.subScript, this.nodes);
        }
        else if (name === 'smallcaps') {
            return this.wzLoadToChildColl(child, _md.smallCaps, this.nodes);
        }
        if (name === 'tab-stops') {
            return this.wzLoadToChildColl(child, _md.tabStops, this.nodes);
        }
        if (name === 'underline') {
            return this.wzLoadToChildColl(child, _md.underline, this.nodes);
        }
        if (name === 'columnspan') {
            return this.wzLoadToChildColl(child, _md.columnSpan, this.nodes);
        }
        if (name === 'formattype') {
            return this.wzLoadToChildColl(child, _md.formatType, this.nodes);
        }
        if (name === 'keep-lines') {
            return this.wzLoadToChildColl(child, _md.keepLines, this.nodes);
        }
        if (name === 'page-break') {
            return this.wzLoadToChildColl(child, _md.pageBreak, this.nodes);
        }
        if (name === 'styles-def') {
            return this.wzLoadToChildColl(child, _md.stylesDef, this.nodes);
        }
        else if (name === 'specvanish') {
            return this.wzLoadToChildColl(child, _md.specVanish, this.nodes);
        }
        else if (name === 'sub-script') {
            return this.wzLoadToChildColl(child, _md.subScript, this.nodes);
        }
        else if (name === 'small-caps') {
            return this.wzLoadToChildColl(child, _md.smallCaps, this.nodes);
        }
        if (name === 'tabstopdef') {
            return this.wzLoadToChildColl(child, _md.tabStopDef, this.nodes);
        }
        if (name === 'column-span') {
            return this.wzLoadToChildColl(child, _md.columnSpan, this.nodes);
        }
        if (name === 'footnoteref') {
            return this.wzLoadToChildColl(child, _md.footnoteRef, this.nodes);
        }
        else if (name === 'format-type') {
            return this.wzLoadToChildColl(child, _md.formatType, this.nodes);
        }
        if (name === 'pagenumbers') {
            return this.wzLoadToChildColl(child, _md.pageNumbers, this.nodes);
        }
        else if (name === 'pageborders') {
            return this.wzLoadToChildColl(child, _md.pageBorders, this.nodes);
        }
        if (name === 'quickformat') {
            return this.wzLoadToChildColl(child, _md.quickFormat, this.nodes);
        }
        if (name === 'spec-vanish') {
            return this.wzLoadToChildColl(child, _md.specVanish, this.nodes);
        }
        else if (name === 'superscript') {
            return this.wzLoadToChildColl(child, _md.superScript, this.nodes);
        }
        if (name === 'tabstopsdef') {
            return this.wzLoadToChildColl(child, _md.tabStopsDef, this.nodes);
        }
        if (name === 'columnwidths') {
            return this.wzLoadToChildColl(child, _md.columnWidths, this.nodes);
        }
        if (name === 'doublestrike') {
            return this.wzLoadToChildColl(child, _md.doubleStrike, this.nodes);
        }
        if (name === 'emphasismark') {
            return this.wzLoadToChildColl(child, _md.emphasisMark, this.nodes);
        }
        if (name === 'footnote-ref') {
            return this.wzLoadToChildColl(child, _md.footnoteRef, this.nodes);
        }
        if (name === 'numberingdef') {
            return this.wzLoadToChildColl(child, _md.numberingDef, this.nodes);
        }
        if (name === 'page-numbers') {
            return this.wzLoadToChildColl(child, _md.pageNumbers, this.nodes);
        }
        else if (name === 'page-borders') {
            return this.wzLoadToChildColl(child, _md.pageBorders, this.nodes);
        }
        if (name === 'quick-format') {
            return this.wzLoadToChildColl(child, _md.quickFormat, this.nodes);
        }
        if (name === 'super-script') {
            return this.wzLoadToChildColl(child, _md.superScript, this.nodes);
        }
        if (name === 'tab-stop-def') {
            return this.wzLoadToChildColl(child, _md.tabStopDef, this.nodes);
        }
        if (name === 'column-widths') {
            return this.wzLoadToChildColl(child, _md.columnWidths, this.nodes);
        }
        if (name === 'double-strike') {
            return this.wzLoadToChildColl(child, _md.doubleStrike, this.nodes);
        }
        if (name === 'emphasis-mark') {
            return this.wzLoadToChildColl(child, _md.emphasisMark, this.nodes);
        }
        if (name === 'numbering-def') {
            return this.wzLoadToChildColl(child, _md.numberingDef, this.nodes);
        }
        if (name === 'pagebordertop') {
            return this.wzLoadToChildColl(child, _md.pageBorderTop, this.nodes);
        }
        if (name === 'textdirection') {
            return this.wzLoadToChildColl(child, _md.textDirection, this.nodes);
        }
        else if (name === 'tab-stops-def') {
            return this.wzLoadToChildColl(child, _md.tabStopsDef, this.nodes);
        }
        else if (name === 'thematicbreak') {
            return this.wzLoadToChildColl(child, _md.thematicBreak, this.nodes);
        }
        if (name === 'pageborderleft') {
            return this.wzLoadToChildColl(child, _md.pageBorderLeft, this.nodes);
        }
        if (name === 'text-direction') {
            return this.wzLoadToChildColl(child, _md.textDirection, this.nodes);
        }
        else if (name === 'transformation') {
            return this.wzLoadToChildColl(child, _md.transformation, this.nodes);
        }
        else if (name === 'thematic-break') {
            return this.wzLoadToChildColl(child, _md.thematicBreak, this.nodes);
        }
        if (name === 'characterstyles') {
            return this.wzLoadToChildColl(child, _md.characterStyles, this.nodes);
        }
        if (name === 'paragraphstyles') {
            return this.wzLoadToChildColl(child, _md.paragraphStyles, this.nodes);
        }
        else if (name === 'pagebreakbefore') {
            return this.wzLoadToChildColl(child, _md.pageBreakBefore, this.nodes);
        }
        else if (name === 'page-border-top') {
            return this.wzLoadToChildColl(child, _md.pageBorderTop, this.nodes);
        }
        else if (name === 'pageborderright') {
            return this.wzLoadToChildColl(child, _md.pageBorderRight, this.nodes);
        }
        if (name === 'character-styles') {
            return this.wzLoadToChildColl(child, _md.characterStyles, this.nodes);
        }
        if (name === 'paragraph-styles') {
            return this.wzLoadToChildColl(child, _md.paragraphStyles, this.nodes);
        }
        else if (name === 'pageborderbottom') {
            return this.wzLoadToChildColl(child, _md.pageBorderBottom, this.nodes);
        }
        else if (name === 'page-border-left') {
            return this.wzLoadToChildColl(child, _md.pageBorderLeft, this.nodes);
        }
        if (name === 'page-break-before') {
            return this.wzLoadToChildColl(child, _md.pageBreakBefore, this.nodes);
        }
        else if (name === 'page-border-right') {
            return this.wzLoadToChildColl(child, _md.pageBorderRight, this.nodes);
        }
        if (name === 'page-border-bottom') {
            return this.wzLoadToChildColl(child, _md.pageBorderBottom, this.nodes);
        }
        return false;
    }
    node.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    node.prototype.wzVerify = function(ctx) {
        this.nodes.forEach(item => 
        
            item.wzVerify(ctx)
        )
        _md.docxBase.prototype.wzVerify.call(this, ctx);
    }
    node.prototype.wzInitialize = function(ctx) {
        this.nodes.forEach(item => 
        
            item.wzInitialize(ctx)
        )
        _md.docxBase.prototype.wzInitialize.call(this, ctx);
    }
    return node;
})(docxBase);

_md.node = node;
// element docx
var docx = (function (node) {
    _inherits(docx, node);
    function docx(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(docx.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, docx);
        this.wzElement = "docx";
    }
    docx.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'title') {
            this.title = child.v; return true;
        }
        if (name === 'creator') {
            this.creator = child.v; return true;
        }
        if (name === 'subject') {
            this.subject = child.v; return true;
        }
        if (name === 'keywords') {
            this.keywords = child.v; return true;
        }
        if (name === 'revision') {
            this.revision = parseinteger(child.v, null, child); return true;
        }
        if (name === 'description') {
            this.description = child.v; return true;
        }
        if (name === 'lastmodifiedby') {
            this.lastModifiedBy = child.v; return true;
        }
        if (name === 'even-and-odd-header-and-footers') {
            this.evenAndOddHeaderAndFooters = child.v; return true;
        }
        else if (name === 'even_and_odd_header_and_footers') {
            this.evenAndOddHeaderAndFooters = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    docx.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return docx;
})(node);

_md.docx = docx;
// element xname
var xname = (function (node) {
    _inherits(xname, node);
    function xname(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xname.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xname);
        this.wzElement = "xname";
    }
    return xname;
})(node);

_md.xname = xname;
// element font
var font = (function (node) {
    _inherits(font, node);
    function font(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(font.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, font);
        this.wzElement = "font";
    }
    return font;
})(node);

_md.font = font;
// element color
var color = (function (node) {
    _inherits(color, node);
    function color(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(color.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, color);
        this.wzElement = "color";
    }
    return color;
})(node);

_md.color = color;
// element fill
var fill = (function (node) {
    _inherits(fill, node);
    function fill(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(fill.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, fill);
        this.wzElement = "fill";
    }
    return fill;
})(node);

_md.fill = fill;
// element size
var size = (function (node) {
    _inherits(size, node);
    function size(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(size.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, size);
        this.wzElement = "size";
    }
    return size;
})(node);

_md.size = size;
// element width
var width = (function (node) {
    _inherits(width, node);
    function width(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(width.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, width);
        this.wzElement = "width";
    }
    return width;
})(node);

_md.width = width;
// element height
var height = (function (node) {
    _inherits(height, node);
    function height(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(height.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, height);
        this.wzElement = "height";
    }
    return height;
})(node);

_md.height = height;
// element scale
var scale = (function (node) {
    _inherits(scale, node);
    function scale(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(scale.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, scale);
        this.wzElement = "scale";
    }
    return scale;
})(node);

_md.scale = scale;
// element shading
var shading = (function (node) {
    _inherits(shading, node);
    function shading(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(shading.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, shading);
        this.wzElement = "shading";
    }
    return shading;
})(node);

_md.shading = shading;
// element highlight
var highlight = (function (node) {
    _inherits(highlight, node);
    function highlight(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(highlight.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, highlight);
        this.wzElement = "highlight";
    }
    return highlight;
})(node);

_md.highlight = highlight;
// element xtype
var xtype = (function (node) {
    _inherits(xtype, node);
    function xtype(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xtype.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xtype);
        this.wzElement = "xtype";
    }
    return xtype;
})(node);

_md.xtype = xtype;
// element table
var table = (function (node) {
    _inherits(table, node);
    function table(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(table.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, table);
        this.wzElement = "table";
    }
    return table;
})(node);

_md.table = table;
// element tr
var tr = (function (node) {
    _inherits(tr, node);
    function tr(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(tr.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tr);
        this.wzElement = "tr";
    }
    return tr;
})(node);

_md.tr = tr;
// element td
var td = (function (node) {
    _inherits(td, node);
    function td(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(td.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, td);
        this.wzElement = "td";
    }
    return td;
})(node);

_md.td = td;
// element center
var center = (function (node) {
    _inherits(center, node);
    function center(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(center.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, center);
        this.wzElement = "center";
    }
    return center;
})(node);

_md.center = center;
// element bullet
var bullet = (function (node) {
    _inherits(bullet, node);
    function bullet(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(bullet.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, bullet);
        this.wzElement = "bullet";
    }
    return bullet;
})(node);

_md.bullet = bullet;
// element tabStop
var tabStop = (function (node) {
    _inherits(tabStop, node);
    function tabStop(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(tabStop.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tabStop);
        this.wzElement = "tabStop";
    }
    return tabStop;
})(node);

_md.tabStop = tabStop;
// element position
var position = (function (node) {
    _inherits(position, node);
    function position(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(position.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, position);
        this.wzElement = "position";
    }
    return position;
})(node);

_md.position = position;
// element basedOn
var basedOn = (function (node) {
    _inherits(basedOn, node);
    function basedOn(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(basedOn.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, basedOn);
        this.wzElement = "basedOn";
    }
    return basedOn;
})(node);

_md.basedOn = basedOn;
// element next
var next = (function (node) {
    _inherits(next, node);
    function next(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(next.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, next);
        this.wzElement = "next";
    }
    return next;
})(node);

_md.next = next;
// element space
var space = (function (node) {
    _inherits(space, node);
    function space(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(space.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, space);
        this.wzElement = "space";
    }
    return space;
})(node);

_md.space = space;
// element value
var value = (function (node) {
    _inherits(value, node);
    function value(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(value.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, value);
        this.wzElement = "value";
    }
    return value;
})(node);

_md.value = value;
// element after
var after = (function (node) {
    _inherits(after, node);
    function after(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(after.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, after);
        this.wzElement = "after";
    }
    return after;
})(node);

_md.after = after;
// element before
var before = (function (node) {
    _inherits(before, node);
    function before(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(before.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, before);
        this.wzElement = "before";
    }
    return before;
})(node);

_md.before = before;
// element line
var line = (function (node) {
    _inherits(line, node);
    function line(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(line.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, line);
        this.wzElement = "line";
    }
    return line;
})(node);

_md.line = line;
// element lineRule
var lineRule = (function (node) {
    _inherits(lineRule, node);
    function lineRule(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(lineRule.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, lineRule);
        this.wzElement = "lineRule";
    }
    return lineRule;
})(node);

_md.lineRule = lineRule;
// element align
var align = (function (node) {
    _inherits(align, node);
    function align(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(align.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, align);
        this.wzElement = "align";
    }
    return align;
})(node);

_md.align = align;
// element valign
var valign = (function (node) {
    _inherits(valign, node);
    function valign(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(valign.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, valign);
        this.wzElement = "valign";
    }
    return valign;
})(node);

_md.valign = valign;
// element textDirection
var textDirection = (function (node) {
    _inherits(textDirection, node);
    function textDirection(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(textDirection.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, textDirection);
        this.wzElement = "textDirection";
    }
    return textDirection;
})(node);

_md.textDirection = textDirection;
// element columnSpan
var columnSpan = (function (node) {
    _inherits(columnSpan, node);
    function columnSpan(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(columnSpan.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, columnSpan);
        this.wzElement = "columnSpan";
    }
    return columnSpan;
})(node);

_md.columnSpan = columnSpan;
// element columnWidths
var columnWidths = (function (node) {
    _inherits(columnWidths, node);
    function columnWidths(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(columnWidths.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, columnWidths);
        this.wzElement = "columnWidths";
    }
    return columnWidths;
})(node);

_md.columnWidths = columnWidths;
// element link
var link = (function (node) {
    _inherits(link, node);
    function link(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(link.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, link);
        this.wzElement = "link";
    }
    return link;
})(node);

_md.link = link;
// element linkText
var linkText = (function (node) {
    _inherits(linkText, node);
    function linkText(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(linkText.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, linkText);
        this.wzElement = "linkText";
    }
    return linkText;
})(node);

_md.linkText = linkText;
// element imageDef
var imageDef = (function (node) {
    _inherits(imageDef, node);
    function imageDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(imageDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, imageDef);
        this.wzElement = "imageDef";
    }
    imageDef.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'src') {
            this.src = child.v; return true;
        }
        if (name === 'title') {
            this.title = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    imageDef.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return imageDef;
})(node);

_md.imageDef = imageDef;
// element imageRef
var imageRef = (function (node) {
    _inherits(imageRef, node);
    function imageRef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(imageRef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, imageRef);
        this.wzElement = "imageRef";
    }
    return imageRef;
})(node);

_md.imageRef = imageRef;
// element transformation
var transformation = (function (node) {
    _inherits(transformation, node);
    function transformation(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(transformation.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, transformation);
        this.wzElement = "transformation";
    }
    transformation.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'width') {
            this.width = child.v; return true;
        }
        if (name === 'height') {
            this.height = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    transformation.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return transformation;
})(node);

_md.transformation = transformation;
// element floating
var floating = (function (node) {
    _inherits(floating, node);
    function floating(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(floating.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, floating);
        this.wzElement = "floating";
    }
    floating.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'h') {
            this.h = child.v; return true;
        }
        if (name === 'v') {
            this.v = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    floating.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return floating;
})(node);

_md.floating = floating;
// element wrap
var wrap = (function (node) {
    _inherits(wrap, node);
    function wrap(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(wrap.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, wrap);
        this.wzElement = "wrap";
    }
    wrap.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'side') {
            this.side = child.v; return true;
        }
        if (name === 'type') {
            this.type = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    wrap.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return wrap;
})(node);

_md.wrap = wrap;
// element margins
var margins = (function (node) {
    _inherits(margins, node);
    function margins(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(margins.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, margins);
        this.wzElement = "margins";
    }
    margins.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'top') {
            this.top = child.v; return true;
        }
        if (name === 'left') {
            this.left = child.v; return true;
        }
        if (name === 'right') {
            this.right = child.v; return true;
        }
        if (name === 'bottom') {
            this.bottom = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    margins.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return margins;
})(node);

_md.margins = margins;
// element border
var border = (function (node) {
    _inherits(border, node);
    function border(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(border.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, border);
        this.wzElement = "border";
    }
    return border;
})(node);

_md.border = border;
// element borders
var borders = (function (node) {
    _inherits(borders, node);
    function borders(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(borders.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, borders);
        this.wzElement = "borders";
    }
    return borders;
})(node);

_md.borders = borders;
// element top
var top = (function (node) {
    _inherits(top, node);
    function top(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(top.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, top);
        this.wzElement = "top";
    }
    return top;
})(node);

_md.top = top;
// element bottom
var bottom = (function (node) {
    _inherits(bottom, node);
    function bottom(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(bottom.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, bottom);
        this.wzElement = "bottom";
    }
    return bottom;
})(node);

_md.bottom = bottom;
// element left
var left = (function (node) {
    _inherits(left, node);
    function left(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(left.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, left);
        this.wzElement = "left";
    }
    return left;
})(node);

_md.left = left;
// element right
var right = (function (node) {
    _inherits(right, node);
    function right(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(right.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, right);
        this.wzElement = "right";
    }
    return right;
})(node);

_md.right = right;
// element widow
var widow = (function (node) {
    _inherits(widow, node);
    function widow(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(widow.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, widow);
        this.wzElement = "widow";
    }
    return widow;
})(node);

_md.widow = widow;
// element outline
var outline = (function (node) {
    _inherits(outline, node);
    function outline(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(outline.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, outline);
        this.wzElement = "outline";
    }
    return outline;
})(node);

_md.outline = outline;
// element ul
var ul = (function (node) {
    _inherits(ul, node);
    function ul(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(ul.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ul);
        this.wzElement = "ul";
    }
    return ul;
})(node);

_md.ul = ul;
// element ol
var ol = (function (node) {
    _inherits(ol, node);
    function ol(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(ol.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ol);
        this.wzElement = "ol";
    }
    return ol;
})(node);

_md.ol = ol;
// element li
var li = (function (node) {
    _inherits(li, node);
    function li(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(li.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, li);
        this.wzElement = "li";
    }
    return li;
})(node);

_md.li = li;
// element tabStopsDef
var tabStopsDef = (function (node) {
    _inherits(tabStopsDef, node);
    function tabStopsDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(tabStopsDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tabStopsDef);
        this.wzElement = "tabStopsDef";
    }
    return tabStopsDef;
})(node);

_md.tabStopsDef = tabStopsDef;
// element tabStopDef
var tabStopDef = (function (node) {
    _inherits(tabStopDef, node);
    function tabStopDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(tabStopDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tabStopDef);
        this.wzElement = "tabStopDef";
    }
    tabStopDef.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'type') {
            this.type = child.v; return true;
        }
        if (name === 'position') {
            this.position = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    tabStopDef.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return tabStopDef;
})(node);

_md.tabStopDef = tabStopDef;
// element tabStops
var tabStops = (function (node) {
    _inherits(tabStops, node);
    function tabStops(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(tabStops.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tabStops);
        this.wzElement = "tabStops";
    }
    return tabStops;
})(node);

_md.tabStops = tabStops;
// element footnoteDef
var footnoteDef = (function (node) {
    _inherits(footnoteDef, node);
    function footnoteDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(footnoteDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, footnoteDef);
        this.wzElement = "footnoteDef";
    }
    return footnoteDef;
})(node);

_md.footnoteDef = footnoteDef;
// element footnoteRef
var footnoteRef = (function (node) {
    _inherits(footnoteRef, node);
    function footnoteRef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(footnoteRef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, footnoteRef);
        this.wzElement = "footnoteRef";
    }
    return footnoteRef;
})(node);

_md.footnoteRef = footnoteRef;
// element hyperlink
var hyperlink = (function (node) {
    _inherits(hyperlink, node);
    function hyperlink(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(hyperlink.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, hyperlink);
        this.wzElement = "hyperlink";
    }
    hyperlink.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'href') {
            this.href = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    hyperlink.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return hyperlink;
})(node);

_md.hyperlink = hyperlink;
// element bookmark
var bookmark = (function (node) {
    _inherits(bookmark, node);
    function bookmark(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(bookmark.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, bookmark);
        this.wzElement = "bookmark";
    }
    return bookmark;
})(node);

_md.bookmark = bookmark;
// element internalHyperlink
var internalHyperlink = (function (node) {
    _inherits(internalHyperlink, node);
    function internalHyperlink(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(internalHyperlink.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, internalHyperlink);
        this.wzElement = "internalHyperlink";
    }
    internalHyperlink.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'href') {
            this.href = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    internalHyperlink.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return internalHyperlink;
})(node);

_md.internalHyperlink = internalHyperlink;
// element pageReference
var pageReference = (function (node) {
    _inherits(pageReference, node);
    function pageReference(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(pageReference.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pageReference);
        this.wzElement = "pageReference";
    }
    return pageReference;
})(node);

_md.pageReference = pageReference;
// element stylesDef
var stylesDef = (function (node) {
    _inherits(stylesDef, node);
    function stylesDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(stylesDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, stylesDef);
        this.wzElement = "stylesDef";
    }
    return stylesDef;
})(node);

_md.stylesDef = stylesDef;
// element styleDef
var styleDef = (function (node) {
    _inherits(styleDef, node);
    function styleDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(styleDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, styleDef);
        this.wzElement = "styleDef";
    }
    return styleDef;
})(node);

_md.styleDef = styleDef;
// element paragraphDef
var paragraphDef = (function (node) {
    _inherits(paragraphDef, node);
    function paragraphDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(paragraphDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, paragraphDef);
        this.wzElement = "paragraphDef";
    }
    return paragraphDef;
})(node);

_md.paragraphDef = paragraphDef;
// element xdefault
var xdefault = (function (node) {
    _inherits(xdefault, node);
    function xdefault(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xdefault.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xdefault);
        this.wzElement = "xdefault";
    }
    return xdefault;
})(node);

_md.xdefault = xdefault;
// element paragraphStyles
var paragraphStyles = (function (node) {
    _inherits(paragraphStyles, node);
    function paragraphStyles(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(paragraphStyles.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, paragraphStyles);
        this.wzElement = "paragraphStyles";
    }
    return paragraphStyles;
})(node);

_md.paragraphStyles = paragraphStyles;
// element characterStyles
var characterStyles = (function (node) {
    _inherits(characterStyles, node);
    function characterStyles(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(characterStyles.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, characterStyles);
        this.wzElement = "characterStyles";
    }
    return characterStyles;
})(node);

_md.characterStyles = characterStyles;
// element indent
var indent = (function (node) {
    _inherits(indent, node);
    function indent(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(indent.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, indent);
        this.wzElement = "indent";
    }
    indent.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'left') {
            this.left = child.v; return true;
        }
        if (name === 'hanging') {
            this.hanging = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    indent.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return indent;
})(node);

_md.indent = indent;
// element style
var style = (function (node) {
    _inherits(style, node);
    function style(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(style.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, style);
        this.wzElement = "style";
    }
    return style;
})(node);

_md.style = style;
// element spacing
var spacing = (function (node) {
    _inherits(spacing, node);
    function spacing(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(spacing.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, spacing);
        this.wzElement = "spacing";
    }
    return spacing;
})(node);

_md.spacing = spacing;
// element quickFormat
var quickFormat = (function (node) {
    _inherits(quickFormat, node);
    function quickFormat(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(quickFormat.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, quickFormat);
        this.wzElement = "quickFormat";
    }
    return quickFormat;
})(node);

_md.quickFormat = quickFormat;
// element run
var run = (function (node) {
    _inherits(run, node);
    function run(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(run.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, run);
        this.wzElement = "run";
    }
    return run;
})(node);

_md.run = run;
// element numberingDef
var numberingDef = (function (node) {
    _inherits(numberingDef, node);
    function numberingDef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(numberingDef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, numberingDef);
        this.wzElement = "numberingDef";
    }
    return numberingDef;
})(node);

_md.numberingDef = numberingDef;
// element config
var config = (function (node) {
    _inherits(config, node);
    function config(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(config.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, config);
        this.wzElement = "config";
    }
    config.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'reference') {
            this.reference = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    config.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return config;
})(node);

_md.config = config;
// element level
var level = (function (node) {
    _inherits(level, node);
    function level(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(level.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, level);
        this.wzElement = "level";
    }
    level.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'text') {
            this.text = child.v; return true;
        }
        if (name === 'format') {
            this.format = child.v; return true;
        }
        if (name === 'alignment') {
            this.alignment = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    level.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return level;
})(node);

_md.level = level;
// element numbering
var numbering = (function (node) {
    _inherits(numbering, node);
    function numbering(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(numbering.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, numbering);
        this.wzElement = "numbering";
    }
    numbering.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'level') {
            this.level = child.v; return true;
        }
        if (name === 'instance') {
            this.instance = child.v; return true;
        }
        if (name === 'reference') {
            this.reference = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    numbering.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return numbering;
})(node);

_md.numbering = numbering;
// element section
var section = (function (node) {
    _inherits(section, node);
    function section(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(section.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, section);
        this.wzElement = "section";
    }
    section.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'title-page') {
            this.titlePage = child.v; return true;
        }
        else if (name === 'title_page') {
            this.titlePage = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    section.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return section;
})(node);

_md.section = section;
// element page
var page = (function (node) {
    _inherits(page, node);
    function page(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(page.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, page);
        this.wzElement = "page";
    }
    page.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'width') {
            this.width = child.v; return true;
        }
        if (name === 'height') {
            this.height = child.v; return true;
        }
        if (name === 'orientation') {
            this.orientation = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    page.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return page;
})(node);

_md.page = page;
// element header
var header = (function (node) {
    _inherits(header, node);
    function header(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(header.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, header);
        this.wzElement = "header";
    }
    return header;
})(node);

_md.header = header;
// element footer
var footer = (function (node) {
    _inherits(footer, node);
    function footer(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(footer.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, footer);
        this.wzElement = "footer";
    }
    return footer;
})(node);

_md.footer = footer;
// element pageBreak
var pageBreak = (function (node) {
    _inherits(pageBreak, node);
    function pageBreak(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(pageBreak.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pageBreak);
        this.wzElement = "pageBreak";
    }
    return pageBreak;
})(node);

_md.pageBreak = pageBreak;
// element thematicBreak
var thematicBreak = (function (node) {
    _inherits(thematicBreak, node);
    function thematicBreak(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(thematicBreak.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, thematicBreak);
        this.wzElement = "thematicBreak";
    }
    return thematicBreak;
})(node);

_md.thematicBreak = thematicBreak;
// element pageBreakBefore
var pageBreakBefore = (function (node) {
    _inherits(pageBreakBefore, node);
    function pageBreakBefore(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(pageBreakBefore.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pageBreakBefore);
        this.wzElement = "pageBreakBefore";
    }
    return pageBreakBefore;
})(node);

_md.pageBreakBefore = pageBreakBefore;
// element keepLines
var keepLines = (function (node) {
    _inherits(keepLines, node);
    function keepLines(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(keepLines.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, keepLines);
        this.wzElement = "keepLines";
    }
    return keepLines;
})(node);

_md.keepLines = keepLines;
// element keepNext
var keepNext = (function (node) {
    _inherits(keepNext, node);
    function keepNext(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(keepNext.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, keepNext);
        this.wzElement = "keepNext";
    }
    return keepNext;
})(node);

_md.keepNext = keepNext;
// element start
var start = (function (node) {
    _inherits(start, node);
    function start(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(start.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, start);
        this.wzElement = "start";
    }
    return start;
})(node);

_md.start = start;
// element formatType
var formatType = (function (node) {
    _inherits(formatType, node);
    function formatType(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(formatType.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, formatType);
        this.wzElement = "formatType";
    }
    return formatType;
})(node);

_md.formatType = formatType;
// element pageNumbers
var pageNumbers = (function (node) {
    _inherits(pageNumbers, node);
    function pageNumbers(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(pageNumbers.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pageNumbers);
        this.wzElement = "pageNumbers";
    }
    return pageNumbers;
})(node);

_md.pageNumbers = pageNumbers;
// element pageBorderTop
var pageBorderTop = (function (node) {
    _inherits(pageBorderTop, node);
    function pageBorderTop(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(pageBorderTop.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pageBorderTop);
        this.wzElement = "pageBorderTop";
    }
    return pageBorderTop;
})(node);

_md.pageBorderTop = pageBorderTop;
// element pageBorderRight
var pageBorderRight = (function (node) {
    _inherits(pageBorderRight, node);
    function pageBorderRight(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(pageBorderRight.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pageBorderRight);
        this.wzElement = "pageBorderRight";
    }
    return pageBorderRight;
})(node);

_md.pageBorderRight = pageBorderRight;
// element pageBorderBottom
var pageBorderBottom = (function (node) {
    _inherits(pageBorderBottom, node);
    function pageBorderBottom(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(pageBorderBottom.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pageBorderBottom);
        this.wzElement = "pageBorderBottom";
    }
    return pageBorderBottom;
})(node);

_md.pageBorderBottom = pageBorderBottom;
// element pageBorderLeft
var pageBorderLeft = (function (node) {
    _inherits(pageBorderLeft, node);
    function pageBorderLeft(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(pageBorderLeft.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pageBorderLeft);
        this.wzElement = "pageBorderLeft";
    }
    return pageBorderLeft;
})(node);

_md.pageBorderLeft = pageBorderLeft;
// element pageBorders
var pageBorders = (function (node) {
    _inherits(pageBorders, node);
    function pageBorders(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(pageBorders.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, pageBorders);
        this.wzElement = "pageBorders";
    }
    pageBorders.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'display') {
            this.display = child.v; return true;
        }
        if (name === 'z-order') {
            this.zOrder = child.v; return true;
        }
        else if (name === 'z_order') {
            this.zOrder = child.v; return true;
        }
        if (name === 'offset-from') {
            this.offsetFrom = child.v; return true;
        }
        else if (name === 'offset_from') {
            this.offsetFrom = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    pageBorders.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return pageBorders;
})(node);

_md.pageBorders = pageBorders;
// element margin
var margin = (function (node) {
    _inherits(margin, node);
    function margin(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(margin.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, margin);
        this.wzElement = "margin";
    }
    margin.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'top') {
            this.top = child.v; return true;
        }
        else if (name === 'top') {
            this.top = child.v; return true;
        }
        if (name === 'left') {
            this.left = child.v; return true;
        }
        if (name === 'right') {
            this.right = child.v; return true;
        }
        else if (name === 'right') {
            this.right = child.v; return true;
        }
        if (name === 'bottom') {
            this.bottom = child.v; return true;
        }
        if (name === 'footer') {
            this.footer = child.v; return true;
        }
        if (name === 'gutter') {
            this.gutter = child.v; return true;
        }
        if (name === 'header') {
            this.header = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    margin.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return margin;
})(node);

_md.margin = margin;
// element column
var column = (function (node) {
    _inherits(column, node);
    function column(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(column.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, column);
        this.wzElement = "column";
    }
    column.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'count') {
            this.count = child.v; return true;
        }
        if (name === 'space') {
            this.space = child.v; return true;
        }
        if (name === 'separate') {
            this.separate = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    column.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return column;
})(node);

_md.column = column;
// element h1
var h1 = (function (node) {
    _inherits(h1, node);
    function h1(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(h1.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h1);
        this.wzElement = "h1";
    }
    return h1;
})(node);

_md.h1 = h1;
// element h2
var h2 = (function (node) {
    _inherits(h2, node);
    function h2(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(h2.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h2);
        this.wzElement = "h2";
    }
    return h2;
})(node);

_md.h2 = h2;
// element h3
var h3 = (function (node) {
    _inherits(h3, node);
    function h3(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(h3.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h3);
        this.wzElement = "h3";
    }
    return h3;
})(node);

_md.h3 = h3;
// element h4
var h4 = (function (node) {
    _inherits(h4, node);
    function h4(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(h4.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h4);
        this.wzElement = "h4";
    }
    return h4;
})(node);

_md.h4 = h4;
// element h5
var h5 = (function (node) {
    _inherits(h5, node);
    function h5(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(h5.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h5);
        this.wzElement = "h5";
    }
    return h5;
})(node);

_md.h5 = h5;
// element h6
var h6 = (function (node) {
    _inherits(h6, node);
    function h6(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(h6.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h6);
        this.wzElement = "h6";
    }
    return h6;
})(node);

_md.h6 = h6;
// element htitle
var htitle = (function (node) {
    _inherits(htitle, node);
    function htitle(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(htitle.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, htitle);
        this.wzElement = "htitle";
    }
    return htitle;
})(node);

_md.htitle = htitle;
// element paragraph
var paragraph = (function (node) {
    _inherits(paragraph, node);
    function paragraph(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(paragraph.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, paragraph);
        this.wzElement = "paragraph";
    }
    paragraph.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'contextual-spacing') {
            this.contextualSpacing = child.v; return true;
        }
        else if (name === 'contextual_spacing') {
            this.contextualSpacing = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    paragraph.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return paragraph;
})(node);

_md.paragraph = paragraph;
// element positionalTab
var positionalTab = (function (node) {
    _inherits(positionalTab, node);
    function positionalTab(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(positionalTab.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, positionalTab);
        this.wzElement = "positionalTab";
    }
    positionalTab.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'leader') {
            this.leader = child.v; return true;
        }
        if (name === 'alignment') {
            this.alignment = child.v; return true;
        }
        if (name === 'relativeto') {
            this.relativeTo = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    positionalTab.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.docxModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return positionalTab;
})(node);

_md.positionalTab = positionalTab;
// element xbreak
var xbreak = (function (node) {
    _inherits(xbreak, node);
    function xbreak(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(xbreak.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, xbreak);
        this.wzElement = "xbreak";
    }
    return xbreak;
})(node);

_md.xbreak = xbreak;
// element text
var text = (function (node) {
    _inherits(text, node);
    function text(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(text.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, text);
        this.wzElement = "text";
    }
    return text;
})(node);

_md.text = text;
// element literal
var literal = (function (node) {
    _inherits(literal, node);
    function literal(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(literal.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, literal);
        this.wzElement = "literal";
    }
    return literal;
})(node);

_md.literal = literal;
// element valueText
var valueText = (function (node) {
    _inherits(valueText, node);
    function valueText(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(valueText.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, valueText);
        this.wzElement = "valueText";
    }
    return valueText;
})(node);

_md.valueText = valueText;
// element bold
var bold = (function (node) {
    _inherits(bold, node);
    function bold(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(bold.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, bold);
        this.wzElement = "bold";
    }
    return bold;
})(node);

_md.bold = bold;
// element boldProp
var boldProp = (function (node) {
    _inherits(boldProp, node);
    function boldProp(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(boldProp.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, boldProp);
        this.wzElement = "boldProp";
    }
    return boldProp;
})(node);

_md.boldProp = boldProp;
// element italics
var italics = (function (node) {
    _inherits(italics, node);
    function italics(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(italics.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, italics);
        this.wzElement = "italics";
    }
    return italics;
})(node);

_md.italics = italics;
// element italicsProp
var italicsProp = (function (node) {
    _inherits(italicsProp, node);
    function italicsProp(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(italicsProp.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, italicsProp);
        this.wzElement = "italicsProp";
    }
    return italicsProp;
})(node);

_md.italicsProp = italicsProp;
// element underline
var underline = (function (node) {
    _inherits(underline, node);
    function underline(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(underline.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, underline);
        this.wzElement = "underline";
    }
    return underline;
})(node);

_md.underline = underline;
// element emphasisMark
var emphasisMark = (function (node) {
    _inherits(emphasisMark, node);
    function emphasisMark(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(emphasisMark.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, emphasisMark);
        this.wzElement = "emphasisMark";
    }
    return emphasisMark;
})(node);

_md.emphasisMark = emphasisMark;
// element vanish
var vanish = (function (node) {
    _inherits(vanish, node);
    function vanish(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(vanish.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, vanish);
        this.wzElement = "vanish";
    }
    return vanish;
})(node);

_md.vanish = vanish;
// element specVanish
var specVanish = (function (node) {
    _inherits(specVanish, node);
    function specVanish(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(specVanish.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, specVanish);
        this.wzElement = "specVanish";
    }
    return specVanish;
})(node);

_md.specVanish = specVanish;
// element strike
var strike = (function (node) {
    _inherits(strike, node);
    function strike(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(strike.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, strike);
        this.wzElement = "strike";
    }
    return strike;
})(node);

_md.strike = strike;
// element doubleStrike
var doubleStrike = (function (node) {
    _inherits(doubleStrike, node);
    function doubleStrike(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(doubleStrike.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, doubleStrike);
        this.wzElement = "doubleStrike";
    }
    return doubleStrike;
})(node);

_md.doubleStrike = doubleStrike;
// element superScript
var superScript = (function (node) {
    _inherits(superScript, node);
    function superScript(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(superScript.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, superScript);
        this.wzElement = "superScript";
    }
    return superScript;
})(node);

_md.superScript = superScript;
// element subScript
var subScript = (function (node) {
    _inherits(subScript, node);
    function subScript(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(subScript.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, subScript);
        this.wzElement = "subScript";
    }
    return subScript;
})(node);

_md.subScript = subScript;
// element smallCaps
var smallCaps = (function (node) {
    _inherits(smallCaps, node);
    function smallCaps(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(smallCaps.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, smallCaps);
        this.wzElement = "smallCaps";
    }
    return smallCaps;
})(node);

_md.smallCaps = smallCaps;
// element allCaps
var allCaps = (function (node) {
    _inherits(allCaps, node);
    function allCaps(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(allCaps.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, allCaps);
        this.wzElement = "allCaps";
    }
    return allCaps;
})(node);

_md.allCaps = allCaps;
// element symbol
var symbol = (function (node) {
    _inherits(symbol, node);
    function symbol(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(symbol.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, symbol);
        this.wzElement = "symbol";
    }
    return symbol;
})(node);

_md.symbol = symbol;
_md.__tagElementMapping = { 'name': 'xname', 'type': 'xtype', 'line-rule': 'lineRule', 'linerule': 'lineRule', 'text-direction': 'textDirection', 'textdirection': 'textDirection', 'column-span': 'columnSpan', 'columnspan': 'columnSpan', 'column-widths': 'columnWidths', 'columnwidths': 'columnWidths', 'text': 'linkText', 'image-def': 'imageDef', 'imagedef': 'imageDef', 'image-ref': 'imageRef', 'imageref': 'imageRef', 'tab-stops-def': 'tabStopsDef', 'tabstopsdef': 'tabStopsDef', 'tab-stop-def': 'tabStopDef', 'tabstopdef': 'tabStopDef', 'tab-stops': 'tabStops', 'tabstops': 'tabStops', 'footnote': 'footnoteDef', 'footnote-ref': 'footnoteRef', 'footnoteref': 'footnoteRef', 'a': 'hyperlink', 'a#': 'internalHyperlink', 'page-ref': 'pageReference', 'pageref': 'pageReference', 'styles-def': 'stylesDef', 'stylesdef': 'stylesDef', 'style-def': 'styleDef', 'styledef': 'styleDef', 'paragraph': 'paragraphDef', 'default': 'xdefault', 'paragraph-styles': 'paragraphStyles', 'paragraphstyles': 'paragraphStyles', 'character-styles': 'characterStyles', 'characterstyles': 'characterStyles', 'quick-format': 'quickFormat', 'quickformat': 'quickFormat', 'numbering-def': 'numberingDef', 'numberingdef': 'numberingDef', 'page-break': 'pageBreak', 'pagebreak': 'pageBreak', 'thematic-break': 'thematicBreak', 'thematicbreak': 'thematicBreak', 'page-break-before': 'pageBreakBefore', 'pagebreakbefore': 'pageBreakBefore', 'keep-lines': 'keepLines', 'keeplines': 'keepLines', 'keep-next': 'keepNext', 'keepnext': 'keepNext', 'format-type': 'formatType', 'formattype': 'formatType', 'page-numbers': 'pageNumbers', 'pagenumbers': 'pageNumbers', 'page-border-top': 'pageBorderTop', 'pagebordertop': 'pageBorderTop', 'page-border-right': 'pageBorderRight', 'pageborderright': 'pageBorderRight', 'page-border-bottom': 'pageBorderBottom', 'pageborderbottom': 'pageBorderBottom', 'page-border-left': 'pageBorderLeft', 'pageborderleft': 'pageBorderLeft', 'page-borders': 'pageBorders', 'pageborders': 'pageBorders', 'p': 'paragraph', 'pos-tab': 'positionalTab', 'postab': 'positionalTab', 'br': 'xbreak', '+': 'text', '@': 'valueText', 'b': 'bold', 'bold': 'boldProp', 'i': 'italics', 'italics': 'italicsProp', 'emphasis-mark': 'emphasisMark', 'emphasismark': 'emphasisMark', 'spec-vanish': 'specVanish', 'specvanish': 'specVanish', 'double-strike': 'doubleStrike', 'doublestrike': 'doubleStrike', 'super-script': 'superScript', 'superscript': 'superScript', 'sub-script': 'subScript', 'subscript': 'subScript', 'small-caps': 'smallCaps', 'smallcaps': 'smallCaps', 'all-caps': 'allCaps', 'allcaps': 'allCaps' };
// model/replaceUnknownElement( )
var docxModelException = (function () {
    function docxModelException(message, node, instance) {
        _classCallCheck(this, docxModelException);
        // VIA 14/2/21 (pollutes log) set this.node = node
        // VIA 14/2/21 (pollutes log) set this.instance = instance
        if (node && instance) {
            this.message = message + ', wzElement: ' + node.wzElement + ', wzName:' + (node.wzName || '') + ', row:' + node.r + ', col:' + node.c + ', source:' + instance.wzSourceFilepath(node.u);
            this.errorLines = instance.wzSourceErrorLines(node, message)
            ;
        }
        else if (instance) {
            this.message = message + instance.wzSourceLineInfo.toString(instance);
        }
        else {
            this.message = message;
        }
        console.log("[31m%s[0m", 'message', this.message);
        this.stack = (new Error()).stack;
    }
    docxModelException.prototype.toString = function() {
        var msg = [];
        msg.push(chalk.red('Error: ' + this.message));
        msg.push(chalk.red('  name: docxModelException'));
        if (this.node) {
            msg.push(chalk.yellow('  row: ' + this.node.r + ', col: ' + this.node.c));
        }
        if (this.instance) {
            if (this.node) {
                msg.push(chalk.yellow('  uri: ' + this.instance.wzSourceFilepath(this.node.u)));
            }
            else {
                msg.push(chalk.yellow('  uri: ' + this.instance.wzSourceLineInfo.toString(this.instance)));
            }
        }
        else {
            msg.push(chalk.yellow('  uri: unknown'));
        }
        if (this.errorLines) {
            var i, i_items=this.errorLines, i_len=this.errorLines.length, line;
            for (i=0; i<i_len; i++) {
                line = this.errorLines[i];
                msg.push(chalk.yellow('  ' + line));
            }
        }
        return msg.join('\n');
    }
    return docxModelException;
})();

_md.docxModelException = docxModelException;
var docxContext = (function () {
    function docxContext() {
        _classCallCheck(this, docxContext);
        this.validationErrors = [];
    }
    docxContext.prototype.schemaIsValid = function() {
        return this.validationErrors.length == 0;
    }
    docxContext.prototype.addError = function(message, node) {
        var at = node ? ' At ' + node.wzSourceLineInfo.toString(node) : '';
        this.validationErrors.push(message + at)
    }
    return docxContext;
})();

_md.docxContext = docxContext;
function parsestring(value, defaultValue, node) {
    if (isEmpty( value )) {
        return defaultValue;
    }
    return value;
}
function parseinteger(value, defaultValue, node) {
    if (isEmpty(value)) {
        return defaultValue;
    }
    if (!isInt(value)) {
        throw new docxModelException('Must be an int value, got:' + value, node);
    }
    return parseInt(value, 10);
}
function isString(value) {
    return (typeof value === 'string' || value instanceof String);
}
function isEmpty(value) {
    return !isString( value ) || value.length === 0;
}
function isBoolean(value) {
    return value === 'true' || value === 'false';
}
function isArray(value) {
    return Object.prototype.toString.call( value ) === '[object Array]';
}
function isNumber(value) {
    return !isArray( value ) && (value - parseFloat( value ) + 1) >= 0;
}
function isInt(value) {
    return isNumber( value );
}

