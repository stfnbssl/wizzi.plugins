module
    kind es6
    $
        var md = {
            name: 'ittf',
        };
    v08/examples/plugin( &md )
        $append plugins
            [ items
                @ './index.js'
            @ pluginsBaseFolder
                _ path.resolve
                    @ __dirname
                    @ '..'
        let arg = process.argv[2]
        const moduleName = arg && arg.length > 0 ? arg : 'first'        
        _ executeGenerateModules
            [
                @ moduleName
            a_cb_no_throw( result )
                if err
                    error 'ittf.examples.executeGenerateModules.err', err
                    error 'ittf.examples.executeGenerateModules.err.toString()', err.toString()
                    if err.inner
                        error 'ittf.examples.executeGenerateModules.err.inner.toString()', err.inner.toString()
                else
        function executeGenerateModules
            param modules
            param callback
            _ async.mapSeries
                @ modules
                =>
                    param module
                    param callback
                    log 'ittf.example.executeGenerateModules.module: ' + module
                    var ittfDocumentUri
                        _ path.join
                            @ __dirname
                            @ 'ittf'
                            @ module + '.ittf.ittf'
                    var outputLoadedPath
                        _ path.join
                            @ __dirname
                            @ 'results'
                            @ module + '.ittf.json'
                    var outputTransformedPath
                        _ path.join
                            @ __dirname
                            @ 'results'
                            @ module + '.ittf.html-pretty.json'
                    _ loadWizziModel
                        @ ittfDocumentUri
                        {
                        a_cb( model )
                            log 'ittf.example.executeGenerateModules.outputLoadedPath: ' + outputLoadedPath
                            _ file.write
                                @ outputLoadedPath
                                _ stringify
                                    @ model
                                    @ null
                                    @ 4
                            _ loadModelAndTransform
                                @ ittfDocumentUri
                                {
                                @ "ittf/html-pretty"
                                a_cb( model )
                                    log 'ittf.example.executeGenerateModules.outputTransformedPath: ' + outputTransformedPath
                                    _ file.write
                                        @ outputTransformedPath
                                        _ stringify
                                            @ model
                                            @ null
                                            @ 4
                                    r_cb( )
                @ callback
