/*
    artifact generator: C:\My\wizzi\stfnbssl\wizzi.plugins\packages\wizzi.plugin.wzschema\node_modules\wizzi-js\lib\artifacts\js\module\gen\main.js
    package: wizzi-js@0.7.13
    primary source IttfDocument: C:\My\wizzi\stfnbssl\wizzi.plugins\packages\wizzi.plugin.wzschema\lib\artifacts\wfschema\model\gen\ittf\wfschema-model.js.ittf
*/
'use strict';
// generated by v6-wizzi-js.artifacts.js.module.main
function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var util = require('util');
var path = require('path');
var _ = require('lodash');
var chalk = require('chalk');
var wzutils = require('wizzi-utils');
var verify = wzutils.verify;


var _md = module.exports = {};

var wzSourceLineInfo = (function () {
    function wzSourceLineInfo(row, col, sourceKey) {
        _classCallCheck(this, wzSourceLineInfo);
        this.row = row;
        this.col = col;
        this.sourceKey = sourceKey;
    }
    wzSourceLineInfo.prototype.toString = function(instance) {
        if (instance) {
            return 'row: ' + this.row + ', col: ' + this.col + ', file: ' + instance.wzSourceFilepath(this.sourceKey);
        }
        else {
            return 'row: ' + this.row + ', col: ' + this.col + ', sourceKey: ' + this.sourceKey;
        }
    }
    return wzSourceLineInfo;
})();

_md.wzSourceLineInfo = wzSourceLineInfo;
var docsBase = (function () {
    function docsBase(name, sourceLineInfo) {
        _classCallCheck(this, docsBase);
        this.wzName = name || '';
        this.wzParent = null;
        this.wzSourceLineInfo = sourceLineInfo;
        this.wzChildren = [];
    }
    docsBase.prototype.wzRoot = function() {
        return this.wzParent == null ? this : this.wzParent.wzRoot();
    }
    docsBase.prototype.wzSourceFilepath = function(sourceKey) {
        var sk = sourceKey || this.wzSourceLineInfo.sourceKey;
        return this.wzRoot().loadHistory.getIttfDocumentUri(sk);
    }
    docsBase.prototype.wzSourceErrorLines = function(node, message) {
        return this.wzRoot().loadHistory.getIttfDocumentErrorLines(node.u, {
                row: node.r, 
                col: node.c, 
                description: message
             }, true);
    }
    docsBase.prototype.wzVerify = function() {
    }
    docsBase.prototype.wzInitialize = function() {
    }
    docsBase.prototype.wzInitializeAsync = function(ctx, callback) {
        callback(null);
    }
    docsBase.prototype.wzAddChild = function(node) {
        node.wzParent = this;
        this.wzChildren.push(node);
    }
    docsBase.prototype.wzAddChildToColl = function(node, coll) {
        node.wzParent = this;
        node.wzMoved = true;
        coll.push(node);
    }
    docsBase.prototype.wzMoveChildToColl = function(node, coll, fromColl) {
        var index = fromColl.indexOf(node);
        if (index < 0) {
            this.error('wzMoveChildToColl error. The from collection does not contain the node.', node)
        }
        fromColl.splice(index, 1);
        this.wzAddChildToColl(node, coll);
    }
    docsBase.prototype.wzLoadToChildColl = function(child, type, coll) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        if (child.wzMTreeData) {
            item.wzMTreeData = child.wzMTreeData;
        }
        item.wzParent = this;
        coll.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    docsBase.prototype.wzCreateChildColl = function(tag, name, type, coll) {
        var item = new type(name, this.wzSourceLineInfo);
        item.wzTag = tag;
        item.wzParent = this;
        item.wzCreated = true;
        coll.push(item);
        return item;
    }
    docsBase.prototype.wzLoadToChildren = function(child, type) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        if (child.wzMTreeData) {
            item.wzMTreeData = child.wzMTreeData;
        }
        this.wzChildren.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    docsBase.prototype.wzLoadOneToOne = function(child, type, fieldName) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        if (child.wzMTreeData) {
            item.wzMTreeData = child.wzMTreeData;
        }
        item.wzParent = this;
        this[fieldName] = item;
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    docsBase.prototype.wzRemove = function(fromColl) {
        var index = fromColl.indexOf(this);
        if (index < 0) {
            this.error('wzRemove error. The from collection does not contain the node.', this)
        }
        fromColl.splice(index, 1);
    }
    docsBase.prototype.error = function(message, node) {
        throw new _md.docsModelException(message, node, this);
    }
    return docsBase;
})();

_md.docsBase = docsBase;

// element node
var node = (function (docsBase) {
    _inherits(node, docsBase);
    function node(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(node.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, node);
        this.wzElement = "node";
        // relation node
        this.nodes = [];
    }
    node.prototype.getNode = function(name) {
        var found = null;
        this.nodes.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        })
        return found;
    }
    node.prototype.loadChild = function(child) {
        var name = child.n.toLowerCase();
        if (name === '#') {
            return this.wzLoadToChildColl(child, _md.heading1, this.nodes);
        }
        if (name === '+') {
            return this.wzLoadToChildColl(child, _md.text, this.nodes);
        }
        if (name === '-') {
            return this.wzLoadToChildColl(child, _md.listItem, this.nodes);
        }
        if (name === '##') {
            return this.wzLoadToChildColl(child, _md.heading2, this.nodes);
        }
        if (name === 'li') {
            return this.wzLoadToChildColl(child, _md.listItem, this.nodes);
        }
        if (name === 'ol') {
            return this.wzLoadToChildColl(child, _md.orderedList, this.nodes);
        }
        if (name === 'tr') {
            return this.wzLoadToChildColl(child, _md.tableRow, this.nodes);
        }
        else if (name === 'td') {
            return this.wzLoadToChildColl(child, _md.tableCell, this.nodes);
        }
        if (name === 'ul') {
            return this.wzLoadToChildColl(child, _md.unorderedList, this.nodes);
        }
        if (name === '###') {
            return this.wzLoadToChildColl(child, _md.heading3, this.nodes);
        }
        if (name === '```') {
            return this.wzLoadToChildColl(child, _md.codeLines, this.nodes);
        }
        if (name === 'img') {
            return this.wzLoadToChildColl(child, _md.img, this.nodes);
        }
        if (name === 'docs') {
            return this.wzLoadToChildColl(child, _md.docs, this.nodes);
        }
        if (name === 'image') {
            return this.wzLoadToChildColl(child, _md.image, this.nodes);
        }
        if (name === 'table') {
            return this.wzLoadToChildColl(child, _md.table, this.nodes);
        }
        else if (name === 'thead') {
            return this.wzLoadToChildColl(child, _md.tableHead, this.nodes);
        }
        else if (name === 'tbody') {
            return this.wzLoadToChildColl(child, _md.tableBody, this.nodes);
        }
        return false;
    }
    node.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                item.v = item.n + ' ' + item.v;
                item.n = '+';
                loaded = this.loadChild(item);
                if (!loaded) {
                    throw new _md.docsModelException("Tag not recognized: " + item.n, item, this);
                }
            }
        }
        )
    }
    node.prototype.wzVerify = function(ctx) {
        this.nodes.forEach(item => 
        
            item.wzVerify(ctx)
        )
        _md.docsBase.prototype.wzVerify.call(this, ctx);
    }
    node.prototype.wzInitialize = function(ctx) {
        this.nodes.forEach(item => 
        
            item.wzInitialize(ctx)
        )
        _md.docsBase.prototype.wzInitialize.call(this, ctx);
    }
    return node;
})(docsBase);

_md.node = node;
// element docs
var docs = (function (node) {
    _inherits(docs, node);
    function docs(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(docs.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, docs);
        this.wzElement = "docs";
    }
    return docs;
})(node);

_md.docs = docs;
// element text
var text = (function (node) {
    _inherits(text, node);
    function text(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(text.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, text);
        this.wzElement = "text";
    }
    return text;
})(node);

_md.text = text;
// element heading1
var heading1 = (function (node) {
    _inherits(heading1, node);
    function heading1(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(heading1.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, heading1);
        this.wzElement = "heading1";
    }
    return heading1;
})(node);

_md.heading1 = heading1;
// element heading2
var heading2 = (function (node) {
    _inherits(heading2, node);
    function heading2(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(heading2.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, heading2);
        this.wzElement = "heading2";
    }
    return heading2;
})(node);

_md.heading2 = heading2;
// element heading3
var heading3 = (function (node) {
    _inherits(heading3, node);
    function heading3(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(heading3.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, heading3);
        this.wzElement = "heading3";
    }
    return heading3;
})(node);

_md.heading3 = heading3;
// element codeLines
var codeLines = (function (node) {
    _inherits(codeLines, node);
    function codeLines(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(codeLines.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, codeLines);
        this.wzElement = "codeLines";
    }
    codeLines.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'title') {
            this.title = child.v; return true;
        }
        if (name === 'schema') {
            this.schema = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    codeLines.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                item.v = item.n + ' ' + item.v;
                item.n = '+';
                loaded = this.loadChild(item);
                if (!loaded) {
                    throw new _md.docsModelException("Tag not recognized: " + item.n, item, this);
                }
            }
        }
        )
    }
    return codeLines;
})(node);

_md.codeLines = codeLines;
// element listItem
var listItem = (function (node) {
    _inherits(listItem, node);
    function listItem(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(listItem.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, listItem);
        this.wzElement = "listItem";
    }
    return listItem;
})(node);

_md.listItem = listItem;
// element unorderedList
var unorderedList = (function (node) {
    _inherits(unorderedList, node);
    function unorderedList(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(unorderedList.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, unorderedList);
        this.wzElement = "unorderedList";
    }
    return unorderedList;
})(node);

_md.unorderedList = unorderedList;
// element orderedList
var orderedList = (function (node) {
    _inherits(orderedList, node);
    function orderedList(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(orderedList.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, orderedList);
        this.wzElement = "orderedList";
    }
    return orderedList;
})(node);

_md.orderedList = orderedList;
// element img
var img = (function (node) {
    _inherits(img, node);
    function img(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(img.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, img);
        this.wzElement = "img";
    }
    img.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'src') {
            this.src = child.v; return true;
        }
        if (name === 'title') {
            this.title = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    img.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                item.v = item.n + ' ' + item.v;
                item.n = '+';
                loaded = this.loadChild(item);
                if (!loaded) {
                    throw new _md.docsModelException("Tag not recognized: " + item.n, item, this);
                }
            }
        }
        )
    }
    return img;
})(node);

_md.img = img;
// element image
var image = (function (node) {
    _inherits(image, node);
    function image(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(image.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, image);
        this.wzElement = "image";
    }
    image.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'src') {
            this.src = child.v; return true;
        }
        if (name === 'title') {
            this.title = child.v; return true;
        }
        ok = _md.node.prototype.loadChild.call(this, child);
        return ok;
    }
    image.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
        
            var loaded = this.loadChild(item);
            if (!loaded) {
                item.v = item.n + ' ' + item.v;
                item.n = '+';
                loaded = this.loadChild(item);
                if (!loaded) {
                    throw new _md.docsModelException("Tag not recognized: " + item.n, item, this);
                }
            }
        }
        )
    }
    return image;
})(node);

_md.image = image;
// element table
var table = (function (node) {
    _inherits(table, node);
    function table(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(table.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, table);
        this.wzElement = "table";
    }
    return table;
})(node);

_md.table = table;
// element tableHead
var tableHead = (function (node) {
    _inherits(tableHead, node);
    function tableHead(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(tableHead.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tableHead);
        this.wzElement = "tableHead";
    }
    return tableHead;
})(node);

_md.tableHead = tableHead;
// element tableBody
var tableBody = (function (node) {
    _inherits(tableBody, node);
    function tableBody(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(tableBody.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tableBody);
        this.wzElement = "tableBody";
    }
    return tableBody;
})(node);

_md.tableBody = tableBody;
// element tableRow
var tableRow = (function (node) {
    _inherits(tableRow, node);
    function tableRow(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(tableRow.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tableRow);
        this.wzElement = "tableRow";
    }
    return tableRow;
})(node);

_md.tableRow = tableRow;
// element tableCell
var tableCell = (function (node) {
    _inherits(tableCell, node);
    function tableCell(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(tableCell.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tableCell);
        this.wzElement = "tableCell";
    }
    return tableCell;
})(node);

_md.tableCell = tableCell;
_md.__tagElementMapping = { '+': 'text', '#': 'heading1', '##': 'heading2', '###': 'heading3', '```': 'codeLines', '-': 'listItem', 'li': 'listItem', 'ul': 'unorderedList', 'ol': 'orderedList', 'thead': 'tableHead', 'tbody': 'tableBody', 'tr': 'tableRow', 'td': 'tableCell' };
// model/replaceUnknownElement( )
var docsModelException = (function () {
    function docsModelException(message, node, instance) {
        _classCallCheck(this, docsModelException);
        // VIA 14/2/21 (pollutes log) set this.node = node
        // VIA 14/2/21 (pollutes log) set this.instance = instance
        if (node && instance) {
            this.message = message + ', wzElement: ' + node.wzElement + ', wzName:' + (node.wzName || '') + ', row:' + node.r + ', col:' + node.c + ', source:' + instance.wzSourceFilepath(node.u);
            this.errorLines = instance.wzSourceErrorLines(node, message)
            ;
        }
        else if (instance) {
            this.message = message + instance.wzSourceLineInfo.toString(instance);
        }
        else {
            this.message = message;
        }
        console.log("[31m%s[0m", 'message', this.message);
        this.stack = (new Error()).stack;
    }
    docsModelException.prototype.toString = function() {
        var msg = [];
        msg.push(chalk.red('Error: ' + this.message));
        msg.push(chalk.red('  name: docsModelException'));
        if (this.node) {
            msg.push(chalk.yellow('  row: ' + this.node.r + ', col: ' + this.node.c));
        }
        if (this.instance) {
            if (this.node) {
                msg.push(chalk.yellow('  uri: ' + this.instance.wzSourceFilepath(this.node.u)));
            }
            else {
                msg.push(chalk.yellow('  uri: ' + this.instance.wzSourceLineInfo.toString(this.instance)));
            }
        }
        else {
            msg.push(chalk.yellow('  uri: unknown'));
        }
        if (this.errorLines) {
            var i, i_items=this.errorLines, i_len=this.errorLines.length, line;
            for (i=0; i<i_len; i++) {
                line = this.errorLines[i];
                msg.push(chalk.yellow('  ' + line));
            }
        }
        return msg.join('\n');
    }
    return docsModelException;
})();

_md.docsModelException = docsModelException;
var docsContext = (function () {
    function docsContext() {
        _classCallCheck(this, docsContext);
        this.validationErrors = [];
    }
    docsContext.prototype.schemaIsValid = function() {
        return this.validationErrors.length == 0;
    }
    docsContext.prototype.addError = function(message, node) {
        var at = node ? ' At ' + node.wzSourceLineInfo.toString(node) : '';
        this.validationErrors.push(message + at)
    }
    return docsContext;
})();

_md.docsContext = docsContext;
function parsestring(value, defaultValue, node) {
    if (isEmpty( value )) {
        return defaultValue;
    }
    return value;
}
function isString(value) {
    return (typeof value === 'string' || value instanceof String);
}
function isEmpty(value) {
    return !isString( value ) || value.length === 0;
}
function isBoolean(value) {
    return value === 'true' || value === 'false';
}

