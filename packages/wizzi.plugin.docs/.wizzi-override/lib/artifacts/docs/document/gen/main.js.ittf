module
    kind es6
    $
        var md = {
            plugin: 'wizzi.plugin.docs',
            name: 'document',
            schema: 'docs',
            rootElement: '',
            checkSchema: true,
            isAsync: true,
        };
    gen( &md )
        $append imports
        $append main
            _ md.docs
                @ model
                @ ctx
                a_cb( )
                    if ctx.artifactGenerationErrors.length > 0
                        r_cb_err( ctx.artifactGenerationErrors )
                    else
                        # generation OK
                        r_cb( ctx )
        
        async-md( docs )
            set ctx.values.docsStack = []        
            docsNodeInit()
                [ jsonLines
            var jsonObject
                {
                    @ lines docsNode.jsonLines
            docsNodeExec()
                _ ctx.w
                    _ JSON.stringify
                        @ jsonObject
                        @ null
                        @ 4
        
        headings(1)
        headings(2)
        headings(3)
        
        async-md( text )
            docsNodeInit()
                [ jsonLines
            var jsonObject
                {
                    @ type 'text'
                    @ content model.wzName
                    @ lines docsNode.jsonLines
            docsNodeExec()
                _ parentDocsNode.jsonLines.push
                    @ jsonObject

        async-md( codeLines )
            docsNodeInit()
                [ jsonLines
            var jsonObject
                {
                    @ type 'codeLines'
                    @ language model.wzName
                    @ schema model.schema
                    @ title model.title
                    @ lines docsNode.jsonLines
            docsNodeExec()
                _ parentDocsNode.jsonLines.push
                    @ jsonObject


        async-md( listItem )
            docsNodeInit()
                [ jsonLines
            var jsonObject
                {
                    @ type 'li'
                    @ lines docsNode.jsonLines
            docsNodeExec()
                _ parentDocsNode.jsonLines.push
                    @ jsonObject

        $include images
        $include tables