$group
	$params name, throwIfUndefined:boolean|true, compactOneChildren:boolean|true

	# process AST-node-property ${name} and set it in a var

	$
		var namevar = _.replace(name, '.', '_')

	var p_${namevar} = null

	$$ replaced 19/3/21 if typeof(node.${name}) !== 'undefined'
    $$ added case = null for ignoring
    
    if typeof(node.${name}) !== 'undefined' && node.${name} != null
		
		set p_${namevar} 
			{
				@ textified null
				@ isText false
				@ ASTProp '${namevar}'
				[ children

		if node.${name} == null
			set p_${namevar}.text = "null"
		else
			if !node.${name}.type
				throw 'Node ${namevar} has no type: ' + JSON.stringify(node, null, 2)
		
			# loog 'f_p_temp ${namevar} before format'

			_ format
				@ p_${namevar} 
				@ node.${name}
				@ options

			# loog 'f_p_temp ${namevar} after format', p_${namevar}.children.length, p_${namevar}

            var ${namevar}_comments = extractCommentsIf(p_${namevar}, 1)

			$if compactOneChildren
                if p_${namevar}.children.length == 1 

                    set p_${namevar}.tag = p_${namevar}.children[0].tag
                    
                    if !(p_${namevar}.children[0].isText || p_${namevar}.children[0].textified) 
                        $$ \b || p_${namevar}.children[0].children.length > 0
                        set p_${namevar}.name = p_${namevar}.children[0].name
                        set p_${namevar}.source = p_${namevar}.children[0].source
                        set p_${namevar}.children = p_${namevar}.children[0].children
                
                    else

                        if p_${namevar}.children[0].textified
                            set p_${namevar}.textified = p_${namevar}.children[0].textified
                            $$ set p_${namevar}.name = p_${namevar}.children[0].name
                            $$ set p_${namevar}.source = p_${namevar}.children[0].source
                
                        if p_${namevar}.children[0].isText
                            set p_${namevar}.isText = true
                            
                        set p_${namevar}.name = p_${namevar}.children[0].name
                        set p_${namevar}.source = p_${namevar}.children[0].source
                        
                        set p_${namevar}.children = []
            
            if ${namevar}_comments.length > 0
                set p_${namevar}.children = p_${namevar}.children.concat(${namevar}_comments)
	
	$if throwIfUndefined
		else
			throw new Error('AST-node-property ${namevar} undefined: ' + JSON.stringify(node, null, 2))