module
	kind jsfile

	set module.exports
		function
			param mTree
			param context

			# loog 'wizzi-web.css.preprocess.mTree', mTree

			var state
				{
					[ actions
			
			foreach item in mTree.nodes[0].children
				_ traverse(item, state)

			foreach item in state.actions
				if item.code === 'add-attr'
					var children = item.to.children
					set item.to.children
						[
							{
								@ n item.n
								@ v item.v
								@ r item.to.r
								@ c item.to.c
								@ s item.to.s
								@ u item.to.u
								[ children
					foreach c in children
						_ item.to.children.push
							@ c
			return mTree

	function traverse
		param node
		param state

		if preprocessNode(node, state)
			return
		var saveParent = state.parent
		foreach item in node.children
			set state.parent = node
			_ traverse(item, state)
		set state.parent = saveParent

	function preprocessNode
		param node
		param state
		# loog 'css-mtree-processor preprocessNode', node.n, node.v
        if node.n === 'styled'
            if node.children.length == 1 && node.children[0].n == "css"
                return false
            var arrow
            var savedchildren = []
            foreach child in node.children
                if child.n == '=>'
                    set arrow = child
                else
                    _ savedchildren.push
                        @ child
            var cssnode
                {
                    @ n "css"
                    @ v ""
                    @ r node.r
                    @ c node.c
                    @ s node.s
                    @ u node.u
                    [ children
                        {
                            @ n "<"
                            @ v "--styled--"
                            @ r node.r
                            @ c node.c
                            @ s node.s
                            @ u node.u
                            @ children savedchildren
            set node.children = arrow ? [arrow, cssnode] : [cssnode]
            foreach child in savedchildren
                _ traverse
                    @ child
                    @ state
            return true
		return false

	function addAttr
		param state
		param node
		param attr
		_ state.actions.push
			{
				@ code 'add-attr'
				@ to node
				@ n attr
				@ v ''
