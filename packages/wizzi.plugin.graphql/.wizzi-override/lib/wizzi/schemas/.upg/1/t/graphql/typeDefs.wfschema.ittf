$group

    e description
        tag """
        r text/s
    
    e typeDef : basenode
        is-abstract
		r description
            one-to-one
    
    e_tag( schemaDef, :schema, typeDef)
        r operationType/s

	e operationType : typeDef
        is-abstract

    e_tag( queryType, :query, operationType)
    
    e_tag( mutationType, :mutation, operationType)
    
    e_tag( subscriptionType, :subscription, operationType)
	

    e_tag( enumType, :enum, typeDef
		r enumValue/s

	e_tag( enumValue, ., commentable

    e implement : commentable
        tag &

    e_tag( scalarTypeDef, :scalar, typeDef
	
    e_tag( objectTypeDef, :type, typeDef
		r implement/s
		r fieldDef/s
	
    e_tag( interfaceTypeDef, :interface, typeDef
        r implement/s
		r fieldDef/s

	e_tag( unionTypeDef, :union, typeDef
		r unionMemberType/s

	e_tag( unionMemberType, |, typeDef


    e_tag( inputObjectTypeDef, :input, typeDef
        $*
        r objectValueDef
			one-to-one
        *$
