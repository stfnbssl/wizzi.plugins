/*
    artifact generator: C:\My\wizzi\stfnbssl\wizzi\node_modules\wizzi-legacy-v5\lib\artifacts\js\module\gen\main.js
    primary source IttfDocument: c:\my\wizzi\stfnbssl\wizzi\packages\wizzi-core\lib\artifacts\wfschema\model\gen\ittf\wfschema-model.js.ittf
    utc time: Sat, 01 Apr 2023 05:46:22 GMT
*/
'use strict';
// generated by v5-wizzi-js.artifacts.js.module.main
function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var util = require('util');
var path = require('path');
var _ = require('lodash');
var chalk = require('chalk');
var wzutils = require('wizzi-utils');
var verify = wzutils.verify;
var _md = module.exports = {};
var wzSourceLineInfo = (function () {
    function wzSourceLineInfo(row, col, sourceKey) {
        _classCallCheck(this, wzSourceLineInfo);
        this.row = row;
        this.col = col;
        this.sourceKey = sourceKey;
    }
    wzSourceLineInfo.prototype.toString = function(instance) {
        if (instance) {
            return 'row: ' + this.row + ', col: ' + this.col + ', file: ' + instance.wzSourceFilepath(this.sourceKey);
        }
        else {
            return 'row: ' + this.row + ', col: ' + this.col + ', sourceKey: ' + this.sourceKey;
        }
    }
    return wzSourceLineInfo;
})();

_md.wzSourceLineInfo = wzSourceLineInfo;
var mdBase = (function () {
    function mdBase(name, sourceLineInfo) {
        _classCallCheck(this, mdBase);
        this.wzName = name || '';
        this.wzParent = null;
        this.wzSourceLineInfo = sourceLineInfo;
        this.wzChildren = [];
    }
    mdBase.prototype.wzRoot = function() {
        return this.wzParent == null ? this : this.wzParent.wzRoot();
    }
    mdBase.prototype.wzSourceFilepath = function(sourceKey) {
        var sk = sourceKey || this.wzSourceLineInfo.sourceKey;
        return this.wzRoot().loadHistory.getIttfDocumentUri(sk);
    }
    mdBase.prototype.wzSourceErrorLines = function(node, message) {
        return this.wzRoot().loadHistory.getIttfDocumentErrorLines(node.u, {
                row: node.r, 
                col: node.c, 
                description: message
            }, true);
    }
    mdBase.prototype.wzVerify = function() {
    }
    mdBase.prototype.wzInitialize = function() {
    }
    mdBase.prototype.wzInitializeAsync = function(ctx, callback) {
        callback(null);
    }
    mdBase.prototype.wzAddChild = function(node) {
        node.wzParent = this;
        this.wzChildren.push(node);
    }
    mdBase.prototype.wzAddChildToColl = function(node, coll) {
        node.wzParent = this;
        node.wzMoved = true;
        coll.push(node);
    }
    mdBase.prototype.wzMoveChildToColl = function(node, coll, fromColl) {
        var index = fromColl.indexOf(node);
        if (index < 0) {
            this.error('wzMoveChildToColl error. The from collection does not contain the node.', node);
        }
        fromColl.splice(index, 1);
        this.wzAddChildToColl(node, coll);
    }
    mdBase.prototype.wzLoadToChildColl = function(child, type, coll) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        if (child.wzMTreeData) {
            item.wzMTreeData = child.wzMTreeData;
        }
        item.wzParent = this;
        coll.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    mdBase.prototype.wzCreateChildColl = function(tag, name, type, coll) {
        var item = new type(name, this.wzSourceLineInfo);
        item.wzTag = tag;
        item.wzParent = this;
        item.wzCreated = true;
        coll.push(item);
        return item;
    }
    mdBase.prototype.wzLoadToChildren = function(child, type) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        if (child.wzMTreeData) {
            item.wzMTreeData = child.wzMTreeData;
        }
        this.wzChildren.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    mdBase.prototype.wzLoadOneToOne = function(child, type, fieldName) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        if (child.wzMTreeData) {
            item.wzMTreeData = child.wzMTreeData;
        }
        item.wzParent = this;
        this[fieldName] = item;
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    mdBase.prototype.wzRemove = function(fromColl) {
        var index = fromColl.indexOf(this);
        if (index < 0) {
            this.error('wzRemove error. The from collection does not contain the node.', this);
        }
        fromColl.splice(index, 1);
    }
    mdBase.prototype.error = function(message, node) {
        throw new _md.mdModelException(message, node, this);
    }
    return mdBase;
})();

_md.mdBase = mdBase;
/**
    element md
     The root element of the markdown schema.
     Comments allowed at root level only
*/
var md = (function (mdBase) {
    _inherits(md, mdBase);
    function md(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(md.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, md);
        this.wzElement = "md";
        // relation element
        this.elements = [];
        // relation comment
        this.comments = [];
    }
    md.prototype.addElement = function(name, sourceLineInfo) {
        var retval = new _md.element(name, sourceLineInfo);
        retval.wzParent = this;
        this.elements.push(retval);
        return retval;
    }
    md.prototype.getElement = function(name) {
        var found = null;
        this.elements.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    md.prototype.addComment = function(name, sourceLineInfo) {
        var retval = new _md.comment(name, sourceLineInfo);
        retval.wzParent = this;
        this.comments.push(retval);
        return retval;
    }
    md.prototype.getComment = function(name) {
        var found = null;
        this.comments.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    md.prototype.loadChild = function(child) {
        var name = child.n.toLowerCase();
        if (name === '#') {
            return this.wzLoadToChildColl(child, _md.comment, this.comments);
        }
        if (name === '+') {
            return this.wzLoadToChildColl(child, _md.plus, this.elements);
        }
        if (name === '<') {
            return this.wzLoadToChildColl(child, _md.element, this.elements);
        }
        if (name === 'a') {
            return this.wzLoadToChildColl(child, _md.a, this.elements);
        }
        if (name === 'b') {
            return this.wzLoadToChildColl(child, _md.b, this.elements);
        }
        if (name === 'i') {
            return this.wzLoadToChildColl(child, _md.i, this.elements);
        }
        if (name === 'p') {
            return this.wzLoadToChildColl(child, _md.p, this.elements);
        }
        if (name === 'br') {
            return this.wzLoadToChildColl(child, _md.br, this.elements);
        }
        if (name === 'h1') {
            return this.wzLoadToChildColl(child, _md.h1, this.elements);
        }
        else if (name === 'h2') {
            return this.wzLoadToChildColl(child, _md.h2, this.elements);
        }
        else if (name === 'h3') {
            return this.wzLoadToChildColl(child, _md.h3, this.elements);
        }
        else if (name === 'h4') {
            return this.wzLoadToChildColl(child, _md.h4, this.elements);
        }
        else if (name === 'h5') {
            return this.wzLoadToChildColl(child, _md.h5, this.elements);
        }
        else if (name === 'h6') {
            return this.wzLoadToChildColl(child, _md.h6, this.elements);
        }
        else if (name === 'hr') {
            return this.wzLoadToChildColl(child, _md.hr, this.elements);
        }
        if (name === 'js') {
            return this.wzLoadToChildColl(child, _md.js, this.elements);
        }
        if (name === 'li') {
            return this.wzLoadToChildColl(child, _md.li, this.elements);
        }
        if (name === 'ol') {
            return this.wzLoadToChildColl(child, _md.ol, this.elements);
        }
        if (name === 'py') {
            return this.wzLoadToChildColl(child, _md.py, this.elements);
        }
        if (name === 'ra') {
            return this.wzLoadToChildColl(child, _md.aRef, this.elements);
        }
        if (name === 'sh') {
            return this.wzLoadToChildColl(child, _md.sh, this.elements);
        }
        if (name === 'th') {
            return this.wzLoadToChildColl(child, _md.th, this.elements);
        }
        else if (name === 'tr') {
            return this.wzLoadToChildColl(child, _md.tr, this.elements);
        }
        else if (name === 'td') {
            return this.wzLoadToChildColl(child, _md.td, this.elements);
        }
        if (name === 'ul') {
            return this.wzLoadToChildColl(child, _md.ul, this.elements);
        }
        if (name === 'css') {
            return this.wzLoadToChildColl(child, _md.css, this.elements);
        }
        if (name === 'img') {
            return this.wzLoadToChildColl(child, _md.img, this.elements);
        }
        if (name === 'r-a') {
            return this.wzLoadToChildColl(child, _md.aRef, this.elements);
        }
        else if (name === 'ref') {
            return this.wzLoadToChildColl(child, _md.ref, this.elements);
        }
        if (name === 'bash') {
            return this.wzLoadToChildColl(child, _md.bash, this.elements);
        }
        if (name === 'code') {
            return this.wzLoadToChildColl(child, _md.code, this.elements);
        }
        if (name === 'html') {
            return this.wzLoadToChildColl(child, _md.html, this.elements);
        }
        if (name === 'rimg') {
            return this.wzLoadToChildColl(child, _md.imgRef, this.elements);
        }
        if (name === 'span') {
            return this.wzLoadToChildColl(child, _md.span, this.elements);
        }
        if (name === 'quote') {
            return this.wzLoadToChildColl(child, _md.quote, this.elements);
        }
        if (name === 'r-img') {
            return this.wzLoadToChildColl(child, _md.imgRef, this.elements);
        }
        if (name === 'table') {
            return this.wzLoadToChildColl(child, _md.table, this.elements);
        }
        else if (name === 'thead') {
            return this.wzLoadToChildColl(child, _md.thead, this.elements);
        }
        else if (name === 'tbody') {
            return this.wzLoadToChildColl(child, _md.tbody, this.elements);
        }
        if (name === 'video') {
            return this.wzLoadToChildColl(child, _md.video, this.elements);
        }
        if (name === 'frontmatter') {
            return this.wzLoadToChildColl(child, _md.frontmatter, this.elements);
        }
        return false;
    }
    md.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        });
    }
    md.prototype.wzVerify = function(ctx) {
        this.elements.forEach((item) => {
            item.wzVerify(ctx);
        });
        this.comments.forEach((item) => {
            item.wzVerify(ctx);
        });
        _md.mdBase.prototype.wzVerify.call(this, ctx);
    }
    md.prototype.wzInitialize = function(ctx) {
        this.elements.forEach((item) => {
            item.wzInitialize(ctx);
        });
        this.comments.forEach((item) => {
            item.wzInitialize(ctx);
        });
        _md.mdBase.prototype.wzInitialize.call(this, ctx);
    }
    return md;
})(mdBase);

_md.md = md;
// element attribute
var attribute = (function (mdBase) {
    _inherits(attribute, mdBase);
    function attribute(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(attribute.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, attribute);
        this.wzElement = "attribute";
    }
    return attribute;
})(mdBase);

_md.attribute = attribute;
// element comment
var comment = (function (mdBase) {
    _inherits(comment, mdBase);
    function comment(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(comment.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, comment);
        this.wzElement = "comment";
    }
    return comment;
})(mdBase);

_md.comment = comment;
// element element
var element = (function (mdBase) {
    _inherits(element, mdBase);
    function element(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(element.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, element);
        this.wzElement = "element";
        // relation attribute
        this.attributes = [];
        // relation element
        this.elements = [];
    }
    element.prototype.addAttribute = function(name, sourceLineInfo) {
        var retval = new _md.attribute(name, sourceLineInfo);
        retval.wzParent = this;
        this.attributes.push(retval);
        return retval;
    }
    element.prototype.getAttribute = function(name) {
        var found = null;
        this.attributes.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    element.prototype.addElement = function(name, sourceLineInfo) {
        var retval = new _md.element(name, sourceLineInfo);
        retval.wzParent = this;
        this.elements.push(retval);
        return retval;
    }
    element.prototype.getElement = function(name) {
        var found = null;
        this.elements.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    element.prototype.loadChild = function(child) {
        var name = child.n.toLowerCase();
        if (name === '+') {
            return this.wzLoadToChildColl(child, _md.plus, this.elements);
        }
        if (name === '<') {
            return this.wzLoadToChildColl(child, _md.element, this.elements);
        }
        if (name === '@') {
            return this.wzLoadToChildColl(child, _md.attribute, this.attributes);
        }
        if (name === 'a') {
            return this.wzLoadToChildColl(child, _md.a, this.elements);
        }
        if (name === 'b') {
            return this.wzLoadToChildColl(child, _md.b, this.elements);
        }
        if (name === 'i') {
            return this.wzLoadToChildColl(child, _md.i, this.elements);
        }
        if (name === 'p') {
            return this.wzLoadToChildColl(child, _md.p, this.elements);
        }
        if (name === 'br') {
            return this.wzLoadToChildColl(child, _md.br, this.elements);
        }
        if (name === 'h1') {
            return this.wzLoadToChildColl(child, _md.h1, this.elements);
        }
        else if (name === 'h2') {
            return this.wzLoadToChildColl(child, _md.h2, this.elements);
        }
        else if (name === 'h3') {
            return this.wzLoadToChildColl(child, _md.h3, this.elements);
        }
        else if (name === 'h4') {
            return this.wzLoadToChildColl(child, _md.h4, this.elements);
        }
        else if (name === 'h5') {
            return this.wzLoadToChildColl(child, _md.h5, this.elements);
        }
        else if (name === 'h6') {
            return this.wzLoadToChildColl(child, _md.h6, this.elements);
        }
        else if (name === 'hr') {
            return this.wzLoadToChildColl(child, _md.hr, this.elements);
        }
        if (name === 'js') {
            return this.wzLoadToChildColl(child, _md.js, this.elements);
        }
        if (name === 'li') {
            return this.wzLoadToChildColl(child, _md.li, this.elements);
        }
        if (name === 'ol') {
            return this.wzLoadToChildColl(child, _md.ol, this.elements);
        }
        if (name === 'py') {
            return this.wzLoadToChildColl(child, _md.py, this.elements);
        }
        if (name === 'ra') {
            return this.wzLoadToChildColl(child, _md.aRef, this.elements);
        }
        if (name === 'sh') {
            return this.wzLoadToChildColl(child, _md.sh, this.elements);
        }
        if (name === 'th') {
            return this.wzLoadToChildColl(child, _md.th, this.elements);
        }
        else if (name === 'tr') {
            return this.wzLoadToChildColl(child, _md.tr, this.elements);
        }
        else if (name === 'td') {
            return this.wzLoadToChildColl(child, _md.td, this.elements);
        }
        if (name === 'ul') {
            return this.wzLoadToChildColl(child, _md.ul, this.elements);
        }
        if (name === 'css') {
            return this.wzLoadToChildColl(child, _md.css, this.elements);
        }
        if (name === 'img') {
            return this.wzLoadToChildColl(child, _md.img, this.elements);
        }
        if (name === 'r-a') {
            return this.wzLoadToChildColl(child, _md.aRef, this.elements);
        }
        else if (name === 'ref') {
            return this.wzLoadToChildColl(child, _md.ref, this.elements);
        }
        if (name === 'bash') {
            return this.wzLoadToChildColl(child, _md.bash, this.elements);
        }
        if (name === 'code') {
            return this.wzLoadToChildColl(child, _md.code, this.elements);
        }
        if (name === 'html') {
            return this.wzLoadToChildColl(child, _md.html, this.elements);
        }
        if (name === 'rimg') {
            return this.wzLoadToChildColl(child, _md.imgRef, this.elements);
        }
        if (name === 'span') {
            return this.wzLoadToChildColl(child, _md.span, this.elements);
        }
        if (name === 'quote') {
            return this.wzLoadToChildColl(child, _md.quote, this.elements);
        }
        if (name === 'r-img') {
            return this.wzLoadToChildColl(child, _md.imgRef, this.elements);
        }
        if (name === 'table') {
            return this.wzLoadToChildColl(child, _md.table, this.elements);
        }
        else if (name === 'thead') {
            return this.wzLoadToChildColl(child, _md.thead, this.elements);
        }
        else if (name === 'tbody') {
            return this.wzLoadToChildColl(child, _md.tbody, this.elements);
        }
        if (name === 'video') {
            return this.wzLoadToChildColl(child, _md.video, this.elements);
        }
        if (name === 'frontmatter') {
            return this.wzLoadToChildColl(child, _md.frontmatter, this.elements);
        }
        return false;
    }
    element.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        });
    }
    element.prototype.wzVerify = function(ctx) {
        this.attributes.forEach((item) => {
            item.wzVerify(ctx);
        });
        this.elements.forEach((item) => {
            item.wzVerify(ctx);
        });
        _md.mdBase.prototype.wzVerify.call(this, ctx);
    }
    element.prototype.wzInitialize = function(ctx) {
        this.attributes.forEach((item) => {
            item.wzInitialize(ctx);
        });
        this.elements.forEach((item) => {
            item.wzInitialize(ctx);
        });
        _md.mdBase.prototype.wzInitialize.call(this, ctx);
    }
    return element;
})(mdBase);

_md.element = element;
// element frontmatter
var frontmatter = (function (element) {
    _inherits(frontmatter, element);
    function frontmatter(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(frontmatter.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, frontmatter);
        this.wzElement = "frontmatter";
        // relation attribute
        this.attributes = [];
    }
    frontmatter.prototype.addAttribute = function(name, sourceLineInfo) {
        var retval = new _md.attribute(name, sourceLineInfo);
        retval.wzParent = this;
        this.attributes.push(retval);
        return retval;
    }
    frontmatter.prototype.getAttribute = function(name) {
        var found = null;
        this.attributes.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        });
        return found;
    }
    frontmatter.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === '@') {
            return this.wzLoadToChildColl(child, _md.attribute, this.attributes);
        }
        ok = _md.element.prototype.loadChild.call(this, child);
        return ok;
    }
    frontmatter.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        });
    }
    frontmatter.prototype.wzVerify = function(ctx) {
        this.attributes.forEach((item) => {
            item.wzVerify(ctx);
        });
        _md.element.prototype.wzVerify.call(this, ctx);
    }
    frontmatter.prototype.wzInitialize = function(ctx) {
        this.attributes.forEach((item) => {
            item.wzInitialize(ctx);
        });
        _md.element.prototype.wzInitialize.call(this, ctx);
    }
    return frontmatter;
})(element);

_md.frontmatter = frontmatter;
// element h1
var h1 = (function (element) {
    _inherits(h1, element);
    function h1(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(h1.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h1);
        this.wzElement = "h1";
    }
    return h1;
})(element);

_md.h1 = h1;
// element h2
var h2 = (function (element) {
    _inherits(h2, element);
    function h2(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(h2.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h2);
        this.wzElement = "h2";
    }
    return h2;
})(element);

_md.h2 = h2;
// element h3
var h3 = (function (element) {
    _inherits(h3, element);
    function h3(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(h3.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h3);
        this.wzElement = "h3";
    }
    return h3;
})(element);

_md.h3 = h3;
// element h4
var h4 = (function (element) {
    _inherits(h4, element);
    function h4(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(h4.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h4);
        this.wzElement = "h4";
    }
    return h4;
})(element);

_md.h4 = h4;
// element h5
var h5 = (function (element) {
    _inherits(h5, element);
    function h5(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(h5.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h5);
        this.wzElement = "h5";
    }
    return h5;
})(element);

_md.h5 = h5;
// element h6
var h6 = (function (element) {
    _inherits(h6, element);
    function h6(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(h6.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, h6);
        this.wzElement = "h6";
    }
    return h6;
})(element);

_md.h6 = h6;
// element a
var a = (function (element) {
    _inherits(a, element);
    function a(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(a.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, a);
        this.wzElement = "a";
    }
    a.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'href') {
            this.href = child.v; return true;
        }
        if (name === 'title') {
            this.title = child.v; return true;
        }
        ok = _md.element.prototype.loadChild.call(this, child);
        return ok;
    }
    a.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        });
    }
    return a;
})(element);

_md.a = a;
// element i
var i = (function (element) {
    _inherits(i, element);
    function i(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(i.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, i);
        this.wzElement = "i";
    }
    return i;
})(element);

_md.i = i;
// element b
var b = (function (element) {
    _inherits(b, element);
    function b(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(b.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, b);
        this.wzElement = "b";
    }
    return b;
})(element);

_md.b = b;
// element p
var p = (function (element) {
    _inherits(p, element);
    function p(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(p.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, p);
        this.wzElement = "p";
    }
    return p;
})(element);

_md.p = p;
// element span
var span = (function (element) {
    _inherits(span, element);
    function span(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(span.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, span);
        this.wzElement = "span";
    }
    return span;
})(element);

_md.span = span;
// element ul
var ul = (function (element) {
    _inherits(ul, element);
    function ul(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(ul.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ul);
        this.wzElement = "ul";
    }
    return ul;
})(element);

_md.ul = ul;
// element ol
var ol = (function (element) {
    _inherits(ol, element);
    function ol(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(ol.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ol);
        this.wzElement = "ol";
    }
    return ol;
})(element);

_md.ol = ol;
// element li
var li = (function (element) {
    _inherits(li, element);
    function li(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(li.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, li);
        this.wzElement = "li";
    }
    return li;
})(element);

_md.li = li;
// element img
var img = (function (element) {
    _inherits(img, element);
    function img(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(img.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, img);
        this.wzElement = "img";
    }
    img.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'src') {
            this.src = child.v; return true;
        }
        if (name === 'title') {
            this.title = child.v; return true;
        }
        ok = _md.element.prototype.loadChild.call(this, child);
        return ok;
    }
    img.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        });
    }
    return img;
})(element);

_md.img = img;
// element codeBlock
var codeBlock = (function (element) {
    _inherits(codeBlock, element);
    function codeBlock(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(codeBlock.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, codeBlock);
        this.wzElement = "codeBlock";
    }
    codeBlock.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        ok = _md.element.prototype.loadChild.call(this, child);
        return ok;
    }
    codeBlock.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        });
    }
    return codeBlock;
})(element);

_md.codeBlock = codeBlock;
// element js
var js = (function (codeBlock) {
    _inherits(js, codeBlock);
    function js(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(js.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, js);
        this.wzElement = "js";
    }
    return js;
})(codeBlock);

_md.js = js;
// element html
var html = (function (codeBlock) {
    _inherits(html, codeBlock);
    function html(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(html.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, html);
        this.wzElement = "html";
    }
    return html;
})(codeBlock);

_md.html = html;
// element css
var css = (function (codeBlock) {
    _inherits(css, codeBlock);
    function css(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(css.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, css);
        this.wzElement = "css";
    }
    return css;
})(codeBlock);

_md.css = css;
// element bash
var bash = (function (codeBlock) {
    _inherits(bash, codeBlock);
    function bash(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(bash.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, bash);
        this.wzElement = "bash";
    }
    return bash;
})(codeBlock);

_md.bash = bash;
// element sh
var sh = (function (codeBlock) {
    _inherits(sh, codeBlock);
    function sh(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(sh.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, sh);
        this.wzElement = "sh";
    }
    return sh;
})(codeBlock);

_md.sh = sh;
// element py
var py = (function (codeBlock) {
    _inherits(py, codeBlock);
    function py(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(py.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, py);
        this.wzElement = "py";
    }
    return py;
})(codeBlock);

_md.py = py;
// element code
var code = (function (codeBlock) {
    _inherits(code, codeBlock);
    function code(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(code.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, code);
        this.wzElement = "code";
    }
    return code;
})(codeBlock);

_md.code = code;
// element plus
var plus = (function (element) {
    _inherits(plus, element);
    function plus(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(plus.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, plus);
        this.wzElement = "plus";
    }
    return plus;
})(element);

_md.plus = plus;
// element table
var table = (function (element) {
    _inherits(table, element);
    function table(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(table.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, table);
        this.wzElement = "table";
    }
    return table;
})(element);

_md.table = table;
// element thead
var thead = (function (element) {
    _inherits(thead, element);
    function thead(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(thead.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, thead);
        this.wzElement = "thead";
    }
    return thead;
})(element);

_md.thead = thead;
// element tbody
var tbody = (function (element) {
    _inherits(tbody, element);
    function tbody(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(tbody.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tbody);
        this.wzElement = "tbody";
    }
    return tbody;
})(element);

_md.tbody = tbody;
// element th
var th = (function (element) {
    _inherits(th, element);
    function th(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(th.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, th);
        this.wzElement = "th";
    }
    return th;
})(element);

_md.th = th;
// element tr
var tr = (function (element) {
    _inherits(tr, element);
    function tr(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(tr.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, tr);
        this.wzElement = "tr";
    }
    return tr;
})(element);

_md.tr = tr;
// element td
var td = (function (element) {
    _inherits(td, element);
    function td(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(td.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, td);
        this.wzElement = "td";
    }
    return td;
})(element);

_md.td = td;
// element quote
var quote = (function (element) {
    _inherits(quote, element);
    function quote(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(quote.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, quote);
        this.wzElement = "quote";
    }
    return quote;
})(element);

_md.quote = quote;
// element hr
var hr = (function (element) {
    _inherits(hr, element);
    function hr(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(hr.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, hr);
        this.wzElement = "hr";
    }
    return hr;
})(element);

_md.hr = hr;
// element br
var br = (function (element) {
    _inherits(br, element);
    function br(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(br.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, br);
        this.wzElement = "br";
    }
    return br;
})(element);

_md.br = br;
// element video
var video = (function (element) {
    _inherits(video, element);
    function video(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(video.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, video);
        this.wzElement = "video";
    }
    video.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'id') {
            this.id = child.v; return true;
        }
        if (name === 'alt') {
            this.alt = child.v; return true;
        }
        ok = _md.element.prototype.loadChild.call(this, child);
        return ok;
    }
    video.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        });
    }
    return video;
})(element);

_md.video = video;
// element aRef
var aRef = (function (element) {
    _inherits(aRef, element);
    function aRef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(aRef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, aRef);
        this.wzElement = "aRef";
    }
    aRef.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'alt') {
            this.alt = child.v; return true;
        }
        ok = _md.element.prototype.loadChild.call(this, child);
        return ok;
    }
    aRef.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        });
    }
    return aRef;
})(element);

_md.aRef = aRef;
// element imgRef
var imgRef = (function (element) {
    _inherits(imgRef, element);
    function imgRef(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(imgRef.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, imgRef);
        this.wzElement = "imgRef";
    }
    imgRef.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'alt') {
            this.alt = child.v; return true;
        }
        ok = _md.element.prototype.loadChild.call(this, child);
        return ok;
    }
    imgRef.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        });
    }
    return imgRef;
})(element);

_md.imgRef = imgRef;
// element ref
var ref = (function (element) {
    _inherits(ref, element);
    function ref(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(ref.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ref);
        this.wzElement = "ref";
    }
    ref.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === 'href') {
            this.href = child.v; return true;
        }
        if (name === 'title') {
            this.title = child.v; return true;
        }
        ok = _md.element.prototype.loadChild.call(this, child);
        return ok;
    }
    ref.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.mdModelException("Tag not recognized: " + item.n, item, this);
            }
        });
    }
    return ref;
})(element);

_md.ref = ref;
_md.__tagElementMapping = { '<': 'element', '+': 'plus', 'r-a': 'aRef', 'ra': 'aRef', 'r-img': 'imgRef', 'rimg': 'imgRef', '#': 'comment', '@': 'attribute' };
// model/replaceUnknownElement( )
var mdModelException = (function () {
    function mdModelException(message, node, instance) {
        _classCallCheck(this, mdModelException);
        // VIA 14/2/21 (pollutes log) set this.node = node
        // VIA 14/2/21 (pollutes log) set this.instance = instance
        if (node && instance) {
            this.message = message + ', wzElement: ' + node.wzElement + ', wzName:' + (node.wzName || '') + ', row:' + node.r + ', col:' + node.c + ', source:' + instance.wzSourceFilepath(node.u);
            this.errorLines = instance.wzSourceErrorLines(node, message);
        }
        else if (instance) {
            this.message = message + instance.wzSourceLineInfo.toString(instance);
        }
        else {
            this.message = message;
        }
        console.error('message', this.message);
        this.stack = (new Error()).stack;
    }
    mdModelException.prototype.toString = function() {
        var msg = [];
        msg.push(chalk.red('Error: ' + this.message));
        msg.push(chalk.red('  name: mdModelException'));
        if (this.node) {
            msg.push(chalk.yellow('  row: ' + this.node.r + ', col: ' + this.node.c));
        }
        if (this.instance) {
            if (this.node) {
                msg.push(chalk.yellow('  uri: ' + this.instance.wzSourceFilepath(this.node.u)));
            }
            else {
                msg.push(chalk.yellow('  uri: ' + this.instance.wzSourceLineInfo.toString(this.instance)));
            }
        }
        else {
            msg.push(chalk.yellow('  uri: unknown'));
        }
        if (this.errorLines) {
            var i, i_items=this.errorLines, i_len=this.errorLines.length, line;
            for (i=0; i<i_len; i++) {
                line = this.errorLines[i];
                msg.push(chalk.yellow('  ' + line));
            }
        }
        return msg.join('\n');
    }
    return mdModelException;
})();

_md.mdModelException = mdModelException;
var mdContext = (function () {
    function mdContext() {
        _classCallCheck(this, mdContext);
        this.validationErrors = [];
    }
    mdContext.prototype.schemaIsValid = function() {
        return this.validationErrors.length == 0;
    }
    mdContext.prototype.addError = function(message, node) {
        var at = node ? ' At ' + node.wzSourceLineInfo.toString(node) : '';
        this.validationErrors.push(message + at);
    }
    return mdContext;
})();

_md.mdContext = mdContext;
function parsestring(value, defaultValue, node) {
    if (isEmpty( value )) {
        return defaultValue;
    }
    return value;
}
function isString(value) {
    return (typeof value === 'string' || value instanceof String);
}
function isEmpty(value) {
    return !isString( value ) || value.length === 0;
}
function isBoolean(value) {
    return value === 'true' || value === 'false';
}

