/*
    artifact generator: C:\My\wizzi\stfnbssl\wizzi.plugins\packages\wizzi.plugin.js\lib\artifacts\js\module\gen\main.js
    package: @wizzi/plugin.js@0.8.9
    primary source IttfDocument: C:\My\wizzi\stfnbssl\wizzi.plugins\packages\wizzi.plugin.wzschema\lib\artifacts\wzschema\model\gen\ittf\wfschema-model.js.ittf
    utc time: Mon, 20 Jan 2025 16:29:22 GMT
*/
// generated by wizzi.plugin.js.artifacts.js.module.gen.main
function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var util = require('util');
var path = require('path');
var _ = require('lodash');
var chalk = require('chalk');
var wzutils = require('@wizzi/utils');
var verify = wzutils.verify;


var _md = module.exports = {};

var wzSourceLineInfo = (function () {
    function wzSourceLineInfo(row, col, sourceKey) {
        _classCallCheck(this, wzSourceLineInfo);
        this.row = row;
        this.col = col;
        this.sourceKey = sourceKey;
    }
    wzSourceLineInfo.prototype.toString = function(instance) {
        if (instance) {
            return 'row: ' + this.row + ', col: ' + this.col + ', file: ' + instance.wzSourceFilepath(this.sourceKey);
        }
        else {
            return 'row: ' + this.row + ', col: ' + this.col + ', sourceKey: ' + this.sourceKey;
        }
    }
    return wzSourceLineInfo;
})();

_md.wzSourceLineInfo = wzSourceLineInfo;
var appBase = (function () {
    function appBase(name, sourceLineInfo) {
        _classCallCheck(this, appBase);
        this.wzName = name || '';
        this.wzParent = null;
        this.wzSourceLineInfo = sourceLineInfo;
        this.wzChildren = [];
    }
    appBase.prototype.wzRoot = function() {
        return this.wzParent == null ? this : this.wzParent.wzRoot();
    }
    appBase.prototype.wzSourceFilepath = function(sourceKey) {
        var sk = sourceKey || this.wzSourceLineInfo.sourceKey;
        return this.wzRoot().loadHistory.getIttfDocumentUri(sk);
    }
    appBase.prototype.wzSourceErrorLines = function(node, message) {
        return this.wzRoot().loadHistory.getIttfDocumentErrorLines(node.u, {
                row: node.r, 
                col: node.c, 
                description: message
             }, true);
    }
    appBase.prototype.wzVerify = function() {
    }
    appBase.prototype.wzInitialize = function() {
    }
    appBase.prototype.wzInitializeAsync = function(ctx, callback) {
        callback(null);
    }
    appBase.prototype.wzAddChild = function(node) {
        node.wzParent = this;
        this.wzChildren.push(node);
    }
    appBase.prototype.wzAddChildToColl = function(node, coll) {
        node.wzParent = this;
        node.wzMoved = true;
        coll.push(node);
    }
    appBase.prototype.wzMoveChildToColl = function(node, coll, fromColl) {
        var index = fromColl.indexOf(node);
        if (index < 0) {
            this.error('wzMoveChildToColl error. The from collection does not contain the node.', node)
        }
        fromColl.splice(index, 1);
        this.wzAddChildToColl(node, coll);
    }
    appBase.prototype.wzLoadToChildColl = function(child, type, coll) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        if (child.wzMTreeData) {
            item.wzMTreeData = child.wzMTreeData;
        }
        item.wzParent = this;
        coll.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    appBase.prototype.wzCreateChildColl = function(tag, name, type, coll) {
        var item = new type(name, this.wzSourceLineInfo);
        item.wzTag = tag;
        item.wzParent = this;
        item.wzCreated = true;
        coll.push(item);
        return item;
    }
    appBase.prototype.wzLoadToChildren = function(child, type) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        item.wzTag = child.n;
        item.wzParent = this;
        if (child.wzMTreeData) {
            item.wzMTreeData = child.wzMTreeData;
        }
        this.wzChildren.push(item);
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    appBase.prototype.wzLoadOneToOne = function(child, type, fieldName) {
        var item = new type(child.v, new wzSourceLineInfo(child.r, child.c, child.u));
        if (child.wzMTreeData) {
            item.wzMTreeData = child.wzMTreeData;
        }
        item.wzParent = this;
        this[fieldName] = item;
        if (item.loadFromNode) {
            item.loadFromNode(child);
        }
        return true;
    }
    appBase.prototype.wzRemove = function(fromColl) {
        var index = fromColl.indexOf(this);
        if (index < 0) {
            this.error('wzRemove error. The from collection does not contain the node.', this)
        }
        fromColl.splice(index, 1);
    }
    appBase.prototype.error = function(message, node) {
        throw new _md.appModelException(message, node, this);
    }
    appBase.prototype.toJsonProperties = function(result) {
        result.wzElement = this.wzElement;
        result.wzTag = this.wzTag;
        result.wzName = this.wzName;
    }
    appBase.prototype.toJsonChildren = function(result) {
        if (this.wzChildren.length > 0) {
            var children = [];
            this.wzChildren.forEach(item => 
                children.push(item.toJson())
            )
            result.wzChildren = children;
        }
    }
    return appBase;
})();

_md.appBase = appBase;

// element app
var app = (function (appBase) {
    _inherits(app, appBase);
    function app(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(app.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, app);
        this.wzElement = "app";
        // relation item
        this.items = [];
        // relation ittfPanel
        this.ittfPanels = [];
    }
    app.prototype.addItem = function(name, sourceLineInfo) {
        var retval = new _md.item(name, sourceLineInfo);
        retval.wzParent = this;
        this.items.push(retval);
        return retval;
    }
    app.prototype.getItem = function(name) {
        var found = null;
        this.items.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        })
        return found;
    }
    app.prototype.addIttfPanel = function(name, sourceLineInfo) {
        var retval = new _md.ittfPanel(name, sourceLineInfo);
        retval.wzParent = this;
        this.ittfPanels.push(retval);
        return retval;
    }
    app.prototype.getIttfPanel = function(name) {
        var found = null;
        this.ittfPanels.forEach(function(item) {
            found = found || (item.wzName === name ? item : null);
        })
        return found;
    }
    app.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    app.prototype.toJsonProperties = function(result) {
        _md.appBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    app.prototype.toJsonChildren = function(result) {
        _md.appBase.prototype.toJsonChildren.call(this, result);
        var items, item;
        items = [];
        this.items.forEach(item => 
            items.push(item.toJson())
        )
        result['items'] = items;
        items = [];
        this.ittfPanels.forEach(item => 
            items.push(item.toJson())
        )
        result['ittfPanels'] = items;
    }
    app.prototype.loadChild = function(child) {
        var name = child.n.toLowerCase();
        if (name === 'item') {
            return this.wzLoadToChildColl(child, _md.item, this.items);
        }
        if (name === '::json') {
            return this.wzLoadToChildColl(child, _md.jsonInclude, this.items);
        }
        if (name === 'ittfpanel') {
            return this.wzLoadToChildColl(child, _md.ittfPanel, this.ittfPanels);
        }
        if (name === 'ittf-panel') {
            return this.wzLoadToChildColl(child, _md.ittfPanel, this.ittfPanels);
        }
        return false;
    }
    app.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.appModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    app.prototype.wzVerify = function(ctx) {
        this.items.forEach(item => 
            item.wzVerify(ctx)
        )
        this.ittfPanels.forEach(item => 
            item.wzVerify(ctx)
        )
        _md.appBase.prototype.wzVerify.call(this, ctx);
    }
    app.prototype.wzInitialize = function(ctx) {
        this.items.forEach(item => 
            item.wzInitialize(ctx)
        )
        this.ittfPanels.forEach(item => 
            item.wzInitialize(ctx)
        )
        _md.appBase.prototype.wzInitialize.call(this, ctx);
    }
    return app;
})(appBase);

_md.app = app;
// element item
var item = (function (appBase) {
    _inherits(item, appBase);
    function item(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(item.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, item);
        this.wzElement = "item";
    }
    item.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    item.prototype.toJsonProperties = function(result) {
        _md.appBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
        if (!isEmpty(this.value)) {
            result["value"] = this.value;
        }
    }
    item.prototype.toJsonChildren = function(result) {
        _md.appBase.prototype.toJsonChildren.call(this, result);
    }
    item.prototype.loadChild = function(child) {
        var name = child.n.toLowerCase();
        if (name === 'value') {
            this.value = child.v; return true;
        }
        return false;
    }
    item.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.appModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return item;
})(appBase);

_md.item = item;
// element ittfPanel
var ittfPanel = (function (appBase) {
    _inherits(ittfPanel, appBase);
    function ittfPanel(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(ittfPanel.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, ittfPanel);
        this.wzElement = "ittfPanel";
    }
    ittfPanel.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    ittfPanel.prototype.toJsonProperties = function(result) {
        _md.appBase.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    ittfPanel.prototype.toJsonChildren = function(result) {
        _md.appBase.prototype.toJsonChildren.call(this, result);
    }
    return ittfPanel;
})(appBase);

_md.ittfPanel = ittfPanel;
// element jsonInclude
var jsonInclude = (function (item) {
    _inherits(jsonInclude, item);
    function jsonInclude(name, sourceLineInfo) {
        _get(Object.getPrototypeOf(jsonInclude.prototype), 'constructor', this).call(this, name,sourceLineInfo);
        _classCallCheck(this, jsonInclude);
        this.wzElement = "jsonInclude";
        this.json___items = [];
    }
    jsonInclude.prototype.toJson = function() {
        var result = {};
        this.toJsonProperties(result);
        this.toJsonChildren(result);
        return result;
    }
    jsonInclude.prototype.toJsonProperties = function(result) {
        _md.item.prototype.toJsonProperties.call(this, result);
        if (this.__jsonProps) {
            for (var k in this.__jsonProps) {
                result[k] = this.__jsonProps[k];
            }
        }
    }
    jsonInclude.prototype.toJsonChildren = function(result) {
        _md.item.prototype.toJsonChildren.call(this, result);
    }
    jsonInclude.prototype.loadChild = function(child) {
        var ok = false, name = child.n.toLowerCase();
        if (name === '{') {
            // generated by wizzi/lib/wizzi/models/bootstrap/t/wfschema/t/element_load;
            this.json___items.push(child);
            var err, wizziModel;
            this.wzRoot().wzFactory.loadModelFromMtree( //;
                'json',  //;
                { nodes: [ child ], loadHistory: this.wzRoot().loadHistory }, //;
                function(cberr, cbwizziModel) { //;
                    err = cberr;
                    wizziModel = cbwizziModel;
                });
            this.get_json = function(callback) { //;
                // We must wait until the async loadModelFromMtree(..) has returned a wizziModel or an err;
                var iv = setInterval(function() { //;
                    if (err || wizziModel) { //;
                        clearInterval(iv);
                        if (callback) { //;
                            callback(err, wizziModel);
                            callback = null;
                        } //;
                    } //;
                }, 100);
            };
            return true;
        }
        ok = _md.item.prototype.loadChild.call(this, child);
        return ok;
    }
    jsonInclude.prototype.loadFromNode = function(node) {
        node.children.forEach((item) => {
            var loaded = this.loadChild(item);
            if (!loaded) {
                throw new _md.appModelException("Tag not recognized: " + item.n, item, this);
            }
        }
        )
    }
    return jsonInclude;
})(item);

_md.jsonInclude = jsonInclude;
_md.__tagElementMapping = { '::json': 'jsonInclude', 'ittf-panel': 'ittfPanel', 'ittfpanel': 'ittfPanel' };
// model/replaceUnknownElement( )
var appModelException = (function () {
    function appModelException(message, node, instance) {
        _classCallCheck(this, appModelException);
        // VIA 14/2/21 (pollutes log) set this.node = node
        // VIA 14/2/21 (pollutes log) set this.instance = instance
        if (node && instance) {
            this.message = message + ', wzElement: ' + node.wzElement + ', wzName:' + (node.wzName || '') + ', row:' + node.r + ', col:' + node.c + ', source:' + instance.wzSourceFilepath(node.u);
            this.errorLines = instance.wzSourceErrorLines(node, message)
            ;
        }
        else if (instance) {
            this.message = message + instance.wzSourceLineInfo.toString(instance);
        }
        else {
            this.message = message;
        }
        console.log("[31m%s[0m", 'message', this.message);
        this.stack = (new Error()).stack;
    }
    appModelException.prototype.toString = function() {
        var msg = [];
        msg.push(chalk.red('Error: ' + this.message));
        msg.push(chalk.red('  name: appModelException'));
        if (this.node) {
            msg.push(chalk.yellow('  row: ' + this.node.r + ', col: ' + this.node.c));
        }
        if (this.instance) {
            if (this.node) {
                msg.push(chalk.yellow('  uri: ' + this.instance.wzSourceFilepath(this.node.u)));
            }
            else {
                msg.push(chalk.yellow('  uri: ' + this.instance.wzSourceLineInfo.toString(this.instance)));
            }
        }
        else {
            msg.push(chalk.yellow('  uri: unknown'));
        }
        if (this.errorLines) {
            var i, i_items=this.errorLines, i_len=this.errorLines.length, line;
            for (i=0; i<i_len; i++) {
                line = this.errorLines[i];
                msg.push(chalk.yellow('  ' + line));
            }
        }
        return msg.join('\n');
    }
    return appModelException;
})();

_md.appModelException = appModelException;
var appContext = (function () {
    function appContext() {
        _classCallCheck(this, appContext);
        this.validationErrors = [];
    }
    appContext.prototype.schemaIsValid = function() {
        return this.validationErrors.length == 0;
    }
    appContext.prototype.addError = function(message, node) {
        var at = node ? ' At ' + node.wzSourceLineInfo.toString(node) : '';
        this.validationErrors.push(message + at)
    }
    return appContext;
})();

_md.appContext = appContext;
function parsestring(value, defaultValue, node) {
    if (isEmpty( value )) {
        return defaultValue;
    }
    return value;
}
function isString(value) {
    return (typeof value === 'string' || value instanceof String);
}
function isEmpty(value) {
    return !isString( value ) || value.length === 0;
}
function isBoolean(value) {
    return value === 'true' || value === 'false';
}