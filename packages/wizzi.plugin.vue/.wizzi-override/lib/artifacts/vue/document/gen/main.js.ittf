module
    kind es6
    $
        var md = {
            plugin: 'wizzi.plugin.vue',
            name: 'document',
            schema: 'vue',
            checkSchema: true,
            isAsync: true,
        };
    gen( &md )
        $append imports
            var included_writers = require('./included_writers')
        $append main
            _ md.vue
                @ model
                @ ctx
                a_cb( )
                    if ctx.artifactGenerationErrors.length > 0
                        r_cb_err( ctx.artifactGenerationErrors )
                    else
                        # generation OK
                        r_cb( ctx )
        async-md( vue )
            _ writeComments
                @ ctx
                @ model
            _ md.genItems
                @ model.elements
                @ ctx
                {
                    @ indent true
                a_cb()
                    r_cb()

        async-md( htmlInclude
            if model.get_html
                _ included_writers.writeIncludeHtml
                    @ ctx
                    @ model
                    @ callback
            else
                _ callback
                    new Error('::template tag has no html element')

        async-md( jsInclude
            if model.get_js
                _ included_writers.writeIncludeJs
                    @ ctx
                    @ model
                    @ callback
            else
                _ callback
                    new Error('::script tag has no module element')
        
        async-md( tsInclude
            if model.get_ts
                _ included_writers.writeIncludeTypescript
                    @ ctx
                    @ model
                    @ callback
            else
                _ callback
                    new Error('::script-ts tag has no module element')

        async-md( cssInclude
            if model.get_css
                _ included_writers.writeIncludeCss
                    @ ctx
                    @ model
                    @ callback
            else
                _ callback
                    new Error('::style tag has no css element')

        function writeComments
            param ctx
            param model
            if model.comments.length == 1
                _ ctx.w( '<!-- ' + model.comments[0].wzName + ' -->')
            if model.comments.length > 1
                _ ctx.w( '<!--' )
                foreach item in model.comments
                    _ ctx.w( item.wzName )
                _ ctx.w( '-->' )

        var noattrs
            [
                @ 'wzTag'
                @ 'wzName'
                @ 'wzElement'
                @ 'wzParent'
                @ 'wzSourceLineInfo'
                @ '___exportName'
        
        function isAttrValue
            param a
            param v
            if noattrs.indexOf(a) > -1
                return false
            if v == null || verify.isArray(v) || verify.isObject(v) || verify.isFunction(v)
                return false
            return true
        
        function getAttrs
            param e
            var retval = []
            for var a in e
                if isAttrValue(a, e[a])
                    _ retval.push({ name: verify.replaceAll(a, '_', '-'), value: e[a] })
                elif a.substr(0, 3) === 'ng-'
                    _ retval.push({ name: a, value: e[a] })
                elif a.substr(0, 5) === 'data-'
                    _ retval.push({ name: a, value: e[a] })
                elif a.substr(0, 5) === 'aria-'
                    _ retval.push({ name: a, value: e[a] })
            if e.attributes
                foreach a in e.attributes
                    var p = lineParser.parseNameValueRaw(a.wzName, a)
                    if p.hasValue()
                        _ retval.push({ name: p.name(), value: p.value() })
                    else
                        _ retval.push({ name: p.name() })
            return retval



	
